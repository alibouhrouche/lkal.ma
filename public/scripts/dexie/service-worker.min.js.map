{"version":3,"file":"service-worker.min.js","sources":["../../../../node_modules/.pnpm/@rollup+plugin-typescript@11.1.5_rollup@4.1.4_tslib@2.4.0_typescript@5.6.3/node_modules/tslib/tslib.es6.js","../../src/authentication/UNAUTHORIZED_USER.ts","../../src/helpers/SWBroadcastChannel.ts","../../src/helpers/BroadcastedAndLocalEvent.ts","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isFunction.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/lift.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isPromise.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/Subscription.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/config.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/noop.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/Subscriber.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/symbol/observable.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/identity.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/Observable.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/errorContext.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/pipe.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isInteropObservable.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isAsyncIterable.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/throwUnobservableError.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/symbol/iterator.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isIterable.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isReadableStreamLike.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduler/Action.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduler/intervalProvider.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduler/dateTimestampProvider.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/Scheduler.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduler/async.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isScheduler.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/observable/timer.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/isDate.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/args.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/catchError.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/observeOn.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/subscribeOn.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleAsyncIterable.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/scheduled.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleObservable.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleArray.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/schedulePromise.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleIterable.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleReadableStreamLike.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/map.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/concatAll.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/debounceTime.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/observable/concat.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/observable/from.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/observable/empty.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/take.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/delayWhen.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/ignoreElements.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/mapTo.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/delay.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/filter.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/skip.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/startWith.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/switchMap.js","../../../../node_modules/.pnpm/rxjs@7.5.6/node_modules/rxjs/dist/esm5/internal/operators/tap.js","../../src/sync/registerSyncEvent.ts","../../src/sync/triggerSync.ts","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/common/base64.js","../../src/helpers/computeRealmSetHash.ts","../../src/helpers/getSyncableTables.ts","../../src/helpers/getMutationTable.ts","../../src/helpers/getTableFromMutationTable.ts","../../src/helpers/flatten.ts","../../src/sync/listClientChanges.ts","../../src/helpers/randomString.ts","../../../../libs/dexie-cloud-common/dist/utils.js","../../../../libs/dexie-cloud-common/dist/validation/isValidSyncableID.js","../../../../libs/dexie-cloud-common/dist/change-processing/applyOperation.js","../../../../libs/dexie-cloud-common/dist/change-processing/applyOperations.js","../../../../node_modules/.pnpm/lib0@0.2.97/node_modules/lib0/math.js","../../../../node_modules/.pnpm/lib0@0.2.97/node_modules/lib0/binary.js","../../../../node_modules/.pnpm/lib0@0.2.97/node_modules/lib0/number.js","../../../../node_modules/.pnpm/lib0@0.2.97/node_modules/lib0/array.js","../../../../node_modules/.pnpm/lib0@0.2.97/node_modules/lib0/string.js","../../../../node_modules/.pnpm/lib0@0.2.97/node_modules/lib0/encoding.js","../../../../libs/dexie-cloud-common/dist/yjs/encoding.js","../../../../node_modules/.pnpm/lib0@0.2.97/node_modules/lib0/error.js","../../../../node_modules/.pnpm/lib0@0.2.97/node_modules/lib0/decoding.js","../../../../libs/dexie-cloud-common/dist/async-generators/consumeChunkedBinaryStream.js","../../src/authentication/TokenErrorResponseError.ts","../../src/authentication/interactWithUser.ts","../../src/authentication/authenticate.ts","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/TypesonSimplified.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/BisonBinaryTypes.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/types/number.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/types/bigint.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/types/Date.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/types/Set.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/types/Map.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/common/_global.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/types/TypedArray.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/common/b64lex.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/types/ArrayBuffer.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/FakeBlob.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/readBlobSync.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/string2ArrayBuffer.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/types/Blob.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/presets/builtin.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/Bison.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/types/undefined.js","../../../../node_modules/.pnpm/dreambase-library@1.0.23/node_modules/dreambase-library/dist/typeson-simplified/types/File.js","../../src/TSON.ts","../../src/errors/HttpError.ts","../../src/sync/encodeIdsForServer.ts","../../src/sync/ratelimit.ts","../../src/sync/syncWithServer.ts","../../src/helpers/CancelToken.ts","../../src/sync/isOnline.ts","../../src/sync/updateBaseRevs.ts","../../src/sync/getLatestRevisionsPerTable.ts","../../src/helpers/bulkUpdate.ts","../../src/sync/applyServerChanges.ts","../../src/sync/DEXIE_CLOUD_SYNCER_ID.ts","../../src/yjs/listUpdatesSince.ts","../../src/yjs/Y.ts","../../src/yjs/getUpdatesTable.ts","../../src/yjs/applyYMessages.ts","../../src/yjs/downloadYDocsFromServer.ts","../../../../libs/dexie-cloud-common/dist/async-generators/asyncIterablePipeline.js","../../../../libs/dexie-cloud-common/dist/async-generators/getFetchResponseBodyGenerator.js","../../src/sync/sync.ts","../../src/sync/getTablesToSyncify.ts","../../src/sync/modifyLocalObjectsWithNewUserId.ts","../../src/yjs/listYClientMessagesAndStateVector.ts","../../src/sync/listSyncifiedChanges.ts","../../src/yjs/updateYSyncStates.ts","../../../../libs/dexie-cloud-common/dist/change-processing/subtractChanges.js","../../../../libs/dexie-cloud-common/dist/change-processing/toDBOperationSet.js","../../src/sync/messagesFromServerQueue.ts","../../src/db/DexieCloudDB.ts","../../src/authentication/AuthPersistedContext.ts","../../src/authentication/waitUntil.ts","../../src/authentication/logout.ts","../../src/prodLog.ts","../../src/authentication/login.ts","../../src/authentication/otpFetchTokenCallback.ts","../../src/authentication/setCurrentUser.ts","../../src/isFirefox.ts","../../src/isSafari.ts","../../src/DISABLE_SERVICEWORKER_STRATEGY.ts","../../src/helpers/IS_SERVICE_WORKER.ts","../../src/middleware-helpers/idGenerationHelpers.ts","../../src/middlewares/createIdGenerationMiddleware.ts","../../src/middleware-helpers/guardedTable.ts","../../src/helpers/allSettled.ts","../../src/middlewares/outstandingTransaction.ts","../../src/isEagerSyncDisabled.ts","../../src/middlewares/createMutationTrackingMiddleware.ts","../../src/overrideParseStoresSpec.ts","../../src/sync/performGuardedJob.ts","../../src/userIsActive.ts","../../src/authentication/TokenExpiredError.ts","../../src/yjs/awareness.ts","../../src/yjs/reopenDocSignal.ts","../../src/WSObservable.ts","../../../../libs/dexie-cloud-common/dist/yjs/decoding.js","../../src/yjs/createYClientUpdateObservable.ts","../../src/InvalidLicenseError.ts","../../src/sync/connectWebSocket.ts","../../src/sync/isSyncNeeded.ts","../../src/sync/syncIfPossible.ts","../../src/helpers/date-constants.ts","../../src/sync/LocalSyncWorker.ts","../../src/updateSchemaFromOptions.ts","../../../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/dist/preact.module.js","../../src/default-ui/Styles.ts","../../src/default-ui/Dialog.tsx","../../../../node_modules/.pnpm/preact@10.10.6/node_modules/preact/hooks/dist/hooks.module.js","../../src/default-ui/LoginDialog.tsx","../../src/helpers/resolveText.ts","../../src/default-ui/index.tsx","../../src/associate.ts","../../src/currentUserEmitter.ts","../../src/createSharedValueObservable.ts","../../src/getGlobalRolesObservable.ts","../../src/getInternalAccessControlObservable.ts","../../src/mergePermissions.ts","../../src/getPermissionsLookupObservable.ts","../../src/mapValueObservable.ts","../../src/PermissionChecker.ts","../../src/getInvitesObservable.ts","../../src/yjs/createYHandler.ts","../../src/dexie-cloud-client.ts","../../src/computeSyncState.ts","../../src/helpers/throwVersionIncrementNeeded.ts","../../src/verifySchema.ts","../../src/performInitialSync.ts","../../src/middlewares/createImplicitPropSetterMiddleware.ts","../../../../libs/dexie-cloud-common/dist/getDbNameFromDbUrl.js","../../src/permissions.ts","../../src/service-worker.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { UserLogin } from '../db/entities/UserLogin';\n\nexport const UNAUTHORIZED_USER: UserLogin = {\n  userId: \"unauthorized\",\n  name: \"Unauthorized\",\n  claims: {\n    sub: \"unauthorized\",\n  },\n  lastLogin: new Date(0)\n}\n\ntry {\n  Object.freeze(UNAUTHORIZED_USER);\n  Object.freeze(UNAUTHORIZED_USER.claims);\n} catch {}\n","const swHolder: { registration?: ServiceWorkerRegistration } = {};\nconst swContainer = typeof self !== 'undefined' && self.document && // self.document is to verify we're not the SW ourself\n                    typeof navigator !== 'undefined' && navigator.serviceWorker; \nif (swContainer)\n  swContainer.ready.then(\n    (registration) => (swHolder.registration = registration)\n  );\n\nif (typeof self !== 'undefined' && 'clients' in self && !self.document) {\n  // We are the service worker. Propagate messages to all our clients.\n  addEventListener('message', (ev: any) => {\n    if (ev.data?.type?.startsWith('sw-broadcast-')) {\n      [...self['clients'].matchAll({ includeUncontrolled: true })].forEach(\n        (client) => client.id !== ev.source?.id && client.postMessage(ev.data)\n      );\n    }\n  });\n}\n\n/** This class is a fallback for browsers that lacks BroadcastChannel but have\n * service workers (which is Safari versions 11.1 through 15.3).\n * Safari 15.4 with BroadcastChannel was released on 2022-03-14.\n * We might be able to remove this class in a near future as Safari < 15.4 is\n * already very low in market share as of 2023-03-10.\n */\nexport class SWBroadcastChannel {\n  name: string;\n  constructor(name: string) {\n    this.name = name;\n  }\n  subscribe(listener: (message: any) => void) {\n    if (!swContainer) return () => {};\n    const forwarder = (ev: MessageEvent) => {\n      if (ev.data?.type === `sw-broadcast-${this.name}`) {\n        listener(ev.data.message);\n      }\n    };\n    swContainer.addEventListener('message', forwarder);\n    return () => swContainer.removeEventListener('message', forwarder);\n  }\n  postMessage(message: any) {\n    if (typeof self['clients'] === 'object') {\n      // We're a service worker. Propagate to our browser clients.\n      [...self['clients'].matchAll({ includeUncontrolled: true })].forEach(\n        (client) =>\n          client.postMessage({\n            type: `sw-broadcast-${this.name}`,\n            message,\n          })\n      );\n    } else if (swHolder.registration) {\n      // We're a client (browser window or other worker)\n      // Post to SW so it can repost to all its clients and to itself\n      swHolder.registration.active?.postMessage({\n        type: `sw-broadcast-${this.name}`,\n        message,\n      });\n    }\n  }\n}\n","import { Observable } from \"rxjs\";\nimport { SWBroadcastChannel } from \"./SWBroadcastChannel\";\n\nconst events: Map<string, Array<(ev: CustomEvent)=>void>> =\n  globalThis['lbc-events'] || (globalThis['lbc-events'] = new Map<string, Array<(ev: CustomEvent)=>void>>());\n\nfunction addListener(name: string, listener: (ev: CustomEvent)=>void) {\n  if (events.has(name)) {\n    events.get(name)!.push(listener);\n  } else {\n    events.set(name, [listener]);\n  }\n}\nfunction removeListener(name: string, listener: (ev: CustomEvent)=>void) {\n  const listeners = events.get(name);\n  if (listeners) {\n    const idx = listeners.indexOf(listener);\n    if (idx !== -1) {\n      listeners.splice(idx, 1);\n    }\n  }\n}\nfunction dispatch(ev: CustomEvent) {\n  const listeners = events.get(ev.type);\n  if (listeners) {\n    listeners.forEach(listener => {\n      try {\n        listener(ev);\n      } catch {\n      }\n    });\n  }\n}\n\nexport class BroadcastedAndLocalEvent<T> extends Observable<T>{\n  name: string;\n  bc: BroadcastChannel | SWBroadcastChannel\n\n  constructor(name: string) {\n    const bc = typeof BroadcastChannel === \"undefined\"\n      ? new SWBroadcastChannel(name) : new BroadcastChannel(name);\n    super(subscriber => {\n      function onCustomEvent(ev: CustomEvent) {\n        subscriber.next(ev.detail);\n      }\n      function onMessageEvent(ev: MessageEvent) {\n        console.debug(\"BroadcastedAndLocalEvent: onMessageEvent\", ev);\n        subscriber.next(ev.data);\n      }\n      let unsubscribe: ()=>void;\n      //self.addEventListener(`lbc-${name}`, onCustomEvent); // Fails in service workers\n      addListener(`lbc-${name}`, onCustomEvent); // Works better in service worker\n\n      try {  \n        if (bc instanceof SWBroadcastChannel) {\n          unsubscribe = bc.subscribe(message => subscriber.next(message));\n        } else {\n          console.debug(\"BroadcastedAndLocalEvent: bc.addEventListener()\", name, \"bc is a\", bc);\n          bc.addEventListener(\"message\", onMessageEvent);\n        }\n      } catch (err) {\n        // Service workers might fail to subscribe outside its initial script.\n        console.warn('Failed to subscribe to broadcast channel', err);\n      }\n      return () => {\n        //self.removeEventListener(`lbc-${name}`, onCustomEvent);\n        removeListener(`lbc-${name}`, onCustomEvent);\n        if (bc instanceof SWBroadcastChannel) {\n          unsubscribe!();\n        } else {\n          bc.removeEventListener(\"message\", onMessageEvent);\n        }\n      }\n    });\n    this.name = name;\n    this.bc = bc;\n  }\n\n  next(message: T) {\n    console.debug(\"BroadcastedAndLocalEvent: bc.postMessage()\", {...message}, \"bc is a\", this.bc);\n    this.bc.postMessage(message);\n    const ev = new CustomEvent(`lbc-${this.name}`, { detail: message });\n    //self.dispatchEvent(ev);\n    dispatch(ev);\n  }\n}\n","export function isFunction(value) {\n    return typeof value === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return function (source) {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n//# sourceMappingURL=lift.js.map","export var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map","import { isFunction } from \"./isFunction\";\nexport function isPromise(value) {\n    return isFunction(value === null || value === void 0 ? void 0 : value.then);\n}\n//# sourceMappingURL=isPromise.js.map","import { createErrorClass } from './createErrorClass';\nexport var UnsubscriptionError = createErrorClass(function (_super) {\n    return function UnsubscriptionErrorImpl(errors) {\n        _super(this);\n        this.message = errors\n            ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ')\n            : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n    };\n});\n//# sourceMappingURL=UnsubscriptionError.js.map","export function createErrorClass(createImpl) {\n    var _super = function (instance) {\n        Error.call(instance);\n        instance.stack = new Error().stack;\n    };\n    var ctorFunc = createImpl(_super);\n    ctorFunc.prototype = Object.create(Error.prototype);\n    ctorFunc.prototype.constructor = ctorFunc;\n    return ctorFunc;\n}\n//# sourceMappingURL=createErrorClass.js.map","export function arrRemove(arr, item) {\n    if (arr) {\n        var index = arr.indexOf(item);\n        0 <= index && arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=arrRemove.js.map","import { __read, __spreadArray, __values } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nvar Subscription = (function () {\n    function Subscription(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var e_1, _a, e_2, _b;\n        var errors;\n        if (!this.closed) {\n            this.closed = true;\n            var _parentage = this._parentage;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    try {\n                        for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {\n                            var parent_1 = _parentage_1_1.value;\n                            parent_1.remove(this);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            var initialFinalizer = this.initialTeardown;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            var _finalizers = this._finalizers;\n            if (_finalizers) {\n                this._finalizers = null;\n                try {\n                    for (var _finalizers_1 = __values(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {\n                        var finalizer = _finalizers_1_1.value;\n                        try {\n                            execFinalizer(finalizer);\n                        }\n                        catch (err) {\n                            errors = errors !== null && errors !== void 0 ? errors : [];\n                            if (err instanceof UnsubscriptionError) {\n                                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));\n                            }\n                            else {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    };\n    Subscription.prototype._hasParent = function (parent) {\n        var _parentage = this._parentage;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _parentage = this._parentage;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    };\n    Subscription.prototype._removeParent = function (parent) {\n        var _parentage = this._parentage;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    };\n    Subscription.prototype.remove = function (teardown) {\n        var _finalizers = this._finalizers;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    };\n    Subscription.EMPTY = (function () {\n        var empty = new Subscription();\n        empty.closed = true;\n        return empty;\n    })();\n    return Subscription;\n}());\nexport { Subscription };\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscription.js.map","export var config = {\n    onUnhandledError: null,\n    onStoppedNotification: null,\n    Promise: undefined,\n    useDeprecatedSynchronousErrorHandling: false,\n    useDeprecatedNextContext: false,\n};\n//# sourceMappingURL=config.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var timeoutProvider = {\n    setTimeout: function (handler, timeout) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = timeoutProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {\n            return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n        }\n        return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n    },\n    clearTimeout: function (handle) {\n        var delegate = timeoutProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=timeoutProvider.js.map","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(function () {\n        var onUnhandledError = config.onUnhandledError;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n//# sourceMappingURL=reportUnhandledError.js.map","export function noop() { }\n//# sourceMappingURL=noop.js.map","import { __extends } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destination) {\n        var _this = _super.call(this) || this;\n        _this.isStopped = false;\n        if (destination) {\n            _this.destination = destination;\n            if (isSubscription(destination)) {\n                destination.add(_this);\n            }\n        }\n        else {\n            _this.destination = EMPTY_OBSERVER;\n        }\n        return _this;\n    }\n    Subscriber.create = function (next, error, complete) {\n        return new SafeSubscriber(next, error, complete);\n    };\n    Subscriber.prototype.next = function (value) {\n        if (this.isStopped) {\n            handleStoppedNotification(nextNotification(value), this);\n        }\n        else {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (this.isStopped) {\n            handleStoppedNotification(errorNotification(err), this);\n        }\n        else {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (this.isStopped) {\n            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n        }\n        else {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.isStopped = true;\n            _super.prototype.unsubscribe.call(this);\n            this.destination = null;\n        }\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        try {\n            this.destination.error(err);\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    Subscriber.prototype._complete = function () {\n        try {\n            this.destination.complete();\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar _bind = Function.prototype.bind;\nfunction bind(fn, thisArg) {\n    return _bind.call(fn, thisArg);\n}\nvar ConsumerObserver = (function () {\n    function ConsumerObserver(partialObserver) {\n        this.partialObserver = partialObserver;\n    }\n    ConsumerObserver.prototype.next = function (value) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.next) {\n            try {\n                partialObserver.next(value);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    ConsumerObserver.prototype.error = function (err) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.error) {\n            try {\n                partialObserver.error(err);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n        else {\n            handleUnhandledError(err);\n        }\n    };\n    ConsumerObserver.prototype.complete = function () {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.complete) {\n            try {\n                partialObserver.complete();\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    return ConsumerObserver;\n}());\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        var partialObserver;\n        if (isFunction(observerOrNext) || !observerOrNext) {\n            partialObserver = {\n                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),\n                error: error !== null && error !== void 0 ? error : undefined,\n                complete: complete !== null && complete !== void 0 ? complete : undefined,\n            };\n        }\n        else {\n            var context_1;\n            if (_this && config.useDeprecatedNextContext) {\n                context_1 = Object.create(observerOrNext);\n                context_1.unsubscribe = function () { return _this.unsubscribe(); };\n                partialObserver = {\n                    next: observerOrNext.next && bind(observerOrNext.next, context_1),\n                    error: observerOrNext.error && bind(observerOrNext.error, context_1),\n                    complete: observerOrNext.complete && bind(observerOrNext.complete, context_1),\n                };\n            }\n            else {\n                partialObserver = observerOrNext;\n            }\n        }\n        _this.destination = new ConsumerObserver(partialObserver);\n        return _this;\n    }\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\nfunction handleUnhandledError(error) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        captureError(error);\n    }\n    else {\n        reportUnhandledError(error);\n    }\n}\nfunction defaultErrorHandler(err) {\n    throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n    var onStoppedNotification = config.onStoppedNotification;\n    onStoppedNotification && timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });\n}\nexport var EMPTY_OBSERVER = {\n    closed: true,\n    next: noop,\n    error: defaultErrorHandler,\n    complete: noop,\n};\n//# sourceMappingURL=Subscriber.js.map","export var observable = (function () { return (typeof Symbol === 'function' && Symbol.observable) || '@@observable'; })();\n//# sourceMappingURL=observable.js.map","export function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map","import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nvar Observable = (function () {\n    function Observable(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var _this = this;\n        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(function () {\n            var _a = _this, operator = _a.operator, source = _a.source;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        _this._subscribe(subscriber)\n                    :\n                        _this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscriber = new SafeSubscriber({\n                next: function (value) {\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscriber.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n            _this.subscribe(subscriber);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return (value = x); }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n//# sourceMappingURL=Observable.js.map","import { config } from '../config';\nvar context = null;\nexport function errorContext(cb) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        var isRoot = !context;\n        if (isRoot) {\n            context = { errorThrown: false, error: null };\n        }\n        cb();\n        if (isRoot) {\n            var _a = context, errorThrown = _a.errorThrown, error = _a.error;\n            context = null;\n            if (errorThrown) {\n                throw error;\n            }\n        }\n    }\n    else {\n        cb();\n    }\n}\nexport function captureError(err) {\n    if (config.useDeprecatedSynchronousErrorHandling && context) {\n        context.errorThrown = true;\n        context.error = err;\n    }\n}\n//# sourceMappingURL=errorContext.js.map","import { identity } from './identity';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map","import { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\nexport function isInteropObservable(input) {\n    return isFunction(input[Symbol_observable]);\n}\n//# sourceMappingURL=isInteropObservable.js.map","import { isFunction } from './isFunction';\nexport function isAsyncIterable(obj) {\n    return Symbol.asyncIterator && isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);\n}\n//# sourceMappingURL=isAsyncIterable.js.map","export function createInvalidObservableTypeError(input) {\n    return new TypeError(\"You provided \" + (input !== null && typeof input === 'object' ? 'an invalid object' : \"'\" + input + \"'\") + \" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.\");\n}\n//# sourceMappingURL=throwUnobservableError.js.map","export function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = getSymbolIterator();\n//# sourceMappingURL=iterator.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\nexport function isIterable(input) {\n    return isFunction(input === null || input === void 0 ? void 0 : input[Symbol_iterator]);\n}\n//# sourceMappingURL=isIterable.js.map","import { __asyncGenerator, __await, __generator } from \"tslib\";\nimport { isFunction } from './isFunction';\nexport function readableStreamLikeToAsyncGenerator(readableStream) {\n    return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {\n        var reader, _a, value, done;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    reader = readableStream.getReader();\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, , 9, 10]);\n                    _b.label = 2;\n                case 2:\n                    if (!true) return [3, 8];\n                    return [4, __await(reader.read())];\n                case 3:\n                    _a = _b.sent(), value = _a.value, done = _a.done;\n                    if (!done) return [3, 5];\n                    return [4, __await(void 0)];\n                case 4: return [2, _b.sent()];\n                case 5: return [4, __await(value)];\n                case 6: return [4, _b.sent()];\n                case 7:\n                    _b.sent();\n                    return [3, 2];\n                case 8: return [3, 10];\n                case 9:\n                    reader.releaseLock();\n                    return [7];\n                case 10: return [2];\n            }\n        });\n    });\n}\nexport function isReadableStreamLike(obj) {\n    return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n}\n//# sourceMappingURL=isReadableStreamLike.js.map","import { __asyncValues, __awaiter, __generator, __values } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n    if (input instanceof Observable) {\n        return input;\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromInteropObservable(input);\n        }\n        if (isArrayLike(input)) {\n            return fromArrayLike(input);\n        }\n        if (isPromise(input)) {\n            return fromPromise(input);\n        }\n        if (isAsyncIterable(input)) {\n            return fromAsyncIterable(input);\n        }\n        if (isIterable(input)) {\n            return fromIterable(input);\n        }\n        if (isReadableStreamLike(input)) {\n            return fromReadableStreamLike(input);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n    return new Observable(function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (isFunction(obs.subscribe)) {\n            return obs.subscribe(subscriber);\n        }\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    });\n}\nexport function fromArrayLike(array) {\n    return new Observable(function (subscriber) {\n        for (var i = 0; i < array.length && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    });\n}\nexport function fromPromise(promise) {\n    return new Observable(function (subscriber) {\n        promise\n            .then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, reportUnhandledError);\n    });\n}\nexport function fromIterable(iterable) {\n    return new Observable(function (subscriber) {\n        var e_1, _a;\n        try {\n            for (var iterable_1 = __values(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {\n                var value = iterable_1_1.value;\n                subscriber.next(value);\n                if (subscriber.closed) {\n                    return;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        subscriber.complete();\n    });\n}\nexport function fromAsyncIterable(asyncIterable) {\n    return new Observable(function (subscriber) {\n        process(asyncIterable, subscriber).catch(function (err) { return subscriber.error(err); });\n    });\n}\nexport function fromReadableStreamLike(readableStream) {\n    return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\nfunction process(asyncIterable, subscriber) {\n    var asyncIterable_1, asyncIterable_1_1;\n    var e_2, _a;\n    return __awaiter(this, void 0, void 0, function () {\n        var value, e_2_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 5, 6, 11]);\n                    asyncIterable_1 = __asyncValues(asyncIterable);\n                    _b.label = 1;\n                case 1: return [4, asyncIterable_1.next()];\n                case 2:\n                    if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];\n                    value = asyncIterable_1_1.value;\n                    subscriber.next(value);\n                    if (subscriber.closed) {\n                        return [2];\n                    }\n                    _b.label = 3;\n                case 3: return [3, 1];\n                case 4: return [3, 11];\n                case 5:\n                    e_2_1 = _b.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3, 11];\n                case 6:\n                    _b.trys.push([6, , 9, 10]);\n                    if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];\n                    return [4, _a.call(asyncIterable_1)];\n                case 7:\n                    _b.sent();\n                    _b.label = 8;\n                case 8: return [3, 10];\n                case 9:\n                    if (e_2) throw e_2.error;\n                    return [7];\n                case 10: return [7];\n                case 11:\n                    subscriber.complete();\n                    return [2];\n            }\n        });\n    });\n}\n//# sourceMappingURL=innerFrom.js.map","import { __extends } from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nvar OperatorSubscriber = (function (_super) {\n    __extends(OperatorSubscriber, _super);\n    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        var _this = _super.call(this, destination) || this;\n        _this.onFinalize = onFinalize;\n        _this.shouldUnsubscribe = shouldUnsubscribe;\n        _this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : _super.prototype._next;\n        _this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._error;\n        _this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._complete;\n        return _this;\n    }\n    OperatorSubscriber.prototype.unsubscribe = function () {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            var closed_1 = this.closed;\n            _super.prototype.unsubscribe.call(this);\n            !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    };\n    return OperatorSubscriber;\n}(Subscriber));\nexport { OperatorSubscriber };\n//# sourceMappingURL=OperatorSubscriber.js.map","import { __extends } from \"tslib\";\nimport { Subscription } from '../Subscription';\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription));\nexport { Action };\n//# sourceMappingURL=Action.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var intervalProvider = {\n    setInterval: function (handler, timeout) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = intervalProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n        }\n        return setInterval.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n    },\n    clearInterval: function (handle) {\n        var delegate = intervalProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=intervalProvider.js.map","import { __extends } from \"tslib\";\nimport { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, _id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (_scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        intervalProvider.clearInterval(id);\n        return undefined;\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, _delay) {\n        var errored = false;\n        var errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            var _a = this, id = _a.id, scheduler = _a.scheduler;\n            var actions = scheduler.actions;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            _super.prototype.unsubscribe.call(this);\n        }\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map","export var dateTimestampProvider = {\n    now: function () {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=dateTimestampProvider.js.map","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nvar Scheduler = (function () {\n    function Scheduler(schedulerActionCtor, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    };\n    Scheduler.now = dateTimestampProvider.now;\n    return Scheduler;\n}());\nexport { Scheduler };\n//# sourceMappingURL=Scheduler.js.map","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var asyncScheduler = new AsyncScheduler(AsyncAction);\nexport var async = asyncScheduler;\n//# sourceMappingURL=async.js.map","import { __extends } from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        var _this = _super.call(this, SchedulerAction, now) || this;\n        _this.actions = [];\n        _this._active = false;\n        _this._scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map","import { isFunction } from './isFunction';\nexport function isScheduler(value) {\n    return value && isFunction(value.schedule);\n}\n//# sourceMappingURL=isScheduler.js.map","import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime, intervalOrScheduler, scheduler) {\n    if (dueTime === void 0) { dueTime = 0; }\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    var intervalDuration = -1;\n    if (intervalOrScheduler != null) {\n        if (isScheduler(intervalOrScheduler)) {\n            scheduler = intervalOrScheduler;\n        }\n        else {\n            intervalDuration = intervalOrScheduler;\n        }\n    }\n    return new Observable(function (subscriber) {\n        var due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n        if (due < 0) {\n            due = 0;\n        }\n        var n = 0;\n        return scheduler.schedule(function () {\n            if (!subscriber.closed) {\n                subscriber.next(n++);\n                if (0 <= intervalDuration) {\n                    this.schedule(undefined, intervalDuration);\n                }\n                else {\n                    subscriber.complete();\n                }\n            }\n        }, due);\n    });\n}\n//# sourceMappingURL=timer.js.map","export function isValidDate(value) {\n    return value instanceof Date && !isNaN(value);\n}\n//# sourceMappingURL=isDate.js.map","import { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\nexport function popResultSelector(args) {\n    return isFunction(last(args)) ? args.pop() : undefined;\n}\nexport function popScheduler(args) {\n    return isScheduler(last(args)) ? args.pop() : undefined;\n}\nexport function popNumber(args, defaultValue) {\n    return typeof last(args) === 'number' ? args.pop() : defaultValue;\n}\n//# sourceMappingURL=args.js.map","export function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {\n    if (delay === void 0) { delay = 0; }\n    if (repeat === void 0) { repeat = false; }\n    var scheduleSubscription = scheduler.schedule(function () {\n        work();\n        if (repeat) {\n            parentSubscription.add(this.schedule(null, delay));\n        }\n        else {\n            this.unsubscribe();\n        }\n    }, delay);\n    parentSubscription.add(scheduleSubscription);\n    if (!repeat) {\n        return scheduleSubscription;\n    }\n}\n//# sourceMappingURL=executeSchedule.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\nexport function catchError(selector) {\n    return operate(function (source, subscriber) {\n        var innerSub = null;\n        var syncUnsub = false;\n        var handledResult;\n        innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, undefined, function (err) {\n            handledResult = innerFrom(selector(err, catchError(selector)(source)));\n            if (innerSub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                handledResult.subscribe(subscriber);\n            }\n            else {\n                syncUnsub = true;\n            }\n        }));\n        if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            handledResult.subscribe(subscriber);\n        }\n    });\n}\n//# sourceMappingURL=catchError.js.map","import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return executeSchedule(subscriber, scheduler, function () { return subscriber.next(value); }, delay); }, function () { return executeSchedule(subscriber, scheduler, function () { return subscriber.complete(); }, delay); }, function (err) { return executeSchedule(subscriber, scheduler, function () { return subscriber.error(err); }, delay); }));\n    });\n}\n//# sourceMappingURL=observeOn.js.map","import { operate } from '../util/lift';\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        subscriber.add(scheduler.schedule(function () { return source.subscribe(subscriber); }, delay));\n    });\n}\n//# sourceMappingURL=subscribeOn.js.map","import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(function (subscriber) {\n        executeSchedule(subscriber, scheduler, function () {\n            var iterator = input[Symbol.asyncIterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                iterator.next().then(function (result) {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\n//# sourceMappingURL=scheduleAsyncIterable.js.map","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        if (isAsyncIterable(input)) {\n            return scheduleAsyncIterable(input, scheduler);\n        }\n        if (isIterable(input)) {\n            return scheduleIterable(input, scheduler);\n        }\n        if (isReadableStreamLike(input)) {\n            return scheduleReadableStreamLike(input, scheduler);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\n//# sourceMappingURL=scheduled.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function scheduleObservable(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=scheduleObservable.js.map","import { Observable } from '../Observable';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var i = 0;\n        return scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n            }\n            else {\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    this.schedule();\n                }\n            }\n        });\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function schedulePromise(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=schedulePromise.js.map","import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var iterator;\n        executeSchedule(subscriber, scheduler, function () {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                var _a;\n                var value;\n                var done;\n                try {\n                    (_a = iterator.next(), value = _a.value, done = _a.done);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return function () { return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return(); };\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map","import { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nexport function scheduleReadableStreamLike(input, scheduler) {\n    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n//# sourceMappingURL=scheduleReadableStreamLike.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    if (isFunction(resultSelector)) {\n        return mergeMap(function (a, i) { return map(function (b, ii) { return resultSelector(a, b, i, ii); })(innerFrom(project(a, i))); }, concurrent);\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return operate(function (source, subscriber) { return mergeInternals(source, subscriber, project, concurrent); });\n}\n//# sourceMappingURL=mergeMap.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {\n    var buffer = [];\n    var active = 0;\n    var index = 0;\n    var isComplete = false;\n    var checkComplete = function () {\n        if (isComplete && !buffer.length && !active) {\n            subscriber.complete();\n        }\n    };\n    var outerNext = function (value) { return (active < concurrent ? doInnerSub(value) : buffer.push(value)); };\n    var doInnerSub = function (value) {\n        expand && subscriber.next(value);\n        active++;\n        var innerComplete = false;\n        innerFrom(project(value, index++)).subscribe(createOperatorSubscriber(subscriber, function (innerValue) {\n            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);\n            if (expand) {\n                outerNext(innerValue);\n            }\n            else {\n                subscriber.next(innerValue);\n            }\n        }, function () {\n            innerComplete = true;\n        }, undefined, function () {\n            if (innerComplete) {\n                try {\n                    active--;\n                    var _loop_1 = function () {\n                        var bufferedValue = buffer.shift();\n                        if (innerSubScheduler) {\n                            executeSchedule(subscriber, innerSubScheduler, function () { return doInnerSub(bufferedValue); });\n                        }\n                        else {\n                            doInnerSub(bufferedValue);\n                        }\n                    };\n                    while (buffer.length && active < concurrent) {\n                        _loop_1();\n                    }\n                    checkComplete();\n                }\n                catch (err) {\n                    subscriber.error(err);\n                }\n            }\n        }));\n    };\n    source.subscribe(createOperatorSubscriber(subscriber, outerNext, function () {\n        isComplete = true;\n        checkComplete();\n    }));\n    return function () {\n        additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();\n    };\n}\n//# sourceMappingURL=mergeInternals.js.map","import { mergeAll } from './mergeAll';\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    return operate(function (source, subscriber) {\n        var activeTask = null;\n        var lastValue = null;\n        var lastTime = null;\n        var emit = function () {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            var targetTime = lastTime + dueTime;\n            var now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, function () {\n            emit();\n            subscriber.complete();\n        }, undefined, function () {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n//# sourceMappingURL=debounceTime.js.map","import { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function concat() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return concatAll()(from(args, popScheduler(args)));\n}\n//# sourceMappingURL=concat.js.map","import { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\nexport function from(input, scheduler) {\n    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n//# sourceMappingURL=from.js.map","import { Observable } from '../Observable';\nexport var EMPTY = new Observable(function (subscriber) { return subscriber.complete(); });\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            function () { return EMPTY; }\n        : operate(function (source, subscriber) {\n            var seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n//# sourceMappingURL=take.js.map","import { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n        };\n    }\n    return mergeMap(function (value, index) { return delayDurationSelector(value, index).pipe(take(1), mapTo(value)); });\n}\n//# sourceMappingURL=delayWhen.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nexport function ignoreElements() {\n    return operate(function (source, subscriber) {\n        source.subscribe(createOperatorSubscriber(subscriber, noop));\n    });\n}\n//# sourceMappingURL=ignoreElements.js.map","import { map } from './map';\nexport function mapTo(value) {\n    return map(function () { return value; });\n}\n//# sourceMappingURL=mapTo.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\nexport function delay(due, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    var duration = timer(due, scheduler);\n    return delayWhen(function () { return duration; });\n}\n//# sourceMappingURL=delay.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return predicate.call(thisArg, value, index++) && subscriber.next(value); }));\n    });\n}\n//# sourceMappingURL=filter.js.map","import { filter } from './filter';\nexport function skip(count) {\n    return filter(function (_, index) { return count <= index; });\n}\n//# sourceMappingURL=skip.js.map","import { concat } from '../observable/concat';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\nexport function startWith() {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(values);\n    return operate(function (source, subscriber) {\n        (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=startWith.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function switchMap(project, resultSelector) {\n    return operate(function (source, subscriber) {\n        var innerSubscriber = null;\n        var index = 0;\n        var isComplete = false;\n        var checkComplete = function () { return isComplete && !innerSubscriber && subscriber.complete(); };\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();\n            var innerIndex = 0;\n            var outerIndex = index++;\n            innerFrom(project(value, outerIndex)).subscribe((innerSubscriber = createOperatorSubscriber(subscriber, function (innerValue) { return subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue); }, function () {\n                innerSubscriber = null;\n                checkComplete();\n            })));\n        }, function () {\n            isComplete = true;\n            checkComplete();\n        }));\n    });\n}\n//# sourceMappingURL=switchMap.js.map","import { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nexport function tap(observerOrNext, error, complete) {\n    var tapObserver = isFunction(observerOrNext) || error || complete\n        ?\n            { next: observerOrNext, error: error, complete: complete }\n        : observerOrNext;\n    return tapObserver\n        ? operate(function (source, subscriber) {\n            var _a;\n            (_a = tapObserver.subscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n            var isUnsub = true;\n            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                var _a;\n                (_a = tapObserver.next) === null || _a === void 0 ? void 0 : _a.call(tapObserver, value);\n                subscriber.next(value);\n            }, function () {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.complete) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                subscriber.complete();\n            }, function (err) {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.error) === null || _a === void 0 ? void 0 : _a.call(tapObserver, err);\n                subscriber.error(err);\n            }, function () {\n                var _a, _b;\n                if (isUnsub) {\n                    (_a = tapObserver.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                }\n                (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);\n            }));\n        })\n        :\n            identity;\n}\n//# sourceMappingURL=tap.js.map","import { DexieCloudDB } from '../db/DexieCloudDB';\n\n//const hasSW = 'serviceWorker' in navigator;\nlet hasComplainedAboutSyncEvent = false;\n\nexport async function registerSyncEvent(db: DexieCloudDB, purpose: \"push\" | \"pull\") {\n  try {\n    // Send sync event to SW:\n    const sw: ServiceWorkerRegistration & {sync?: any} = await navigator.serviceWorker.ready;\n    if (purpose === \"push\" && sw.sync) {\n      await sw.sync.register(`dexie-cloud:${db.name}`);\n    }\n    if (sw.active) {\n      // Use postMessage for pull syncs and for browsers not supporting sync event (Firefox, Safari).\n      // Also chromium based browsers with sw.sync as a fallback for sleepy sync events not taking action for a while.\n      sw.active.postMessage({\n        type: 'dexie-cloud-sync',\n        dbName: db.name,\n        purpose\n      });\n    } else {\n      throw new Error(`Failed to trigger sync - there's no active service worker`);\n    }\n    return;\n  } catch (e) {\n    if (!hasComplainedAboutSyncEvent) {\n      console.debug(`Dexie Cloud: Could not register sync event`, e);\n      hasComplainedAboutSyncEvent = true;\n    }\n  }\n}\n\nexport async function registerPeriodicSyncEvent(db: DexieCloudDB) {\n  try {\n    // Register periodicSync event to SW:\n    // @ts-ignore\n    const { periodicSync } = await navigator.serviceWorker.ready;\n    if (periodicSync) {\n      try {\n        await periodicSync.register(\n          `dexie-cloud:${db.name}`,\n          db.cloud.options?.periodicSync\n        );\n        console.debug(\n          `Dexie Cloud: Successfully registered periodicsync event for ${db.name}`\n        );\n      } catch (e) {\n        console.debug(`Dexie Cloud: Failed to register periodic sync. Your PWA must be installed to allow background sync.`, e);\n      }\n    } else {\n      console.debug(`Dexie Cloud: periodicSync not supported.`);\n    }\n  } catch (e) {\n    console.debug(\n      `Dexie Cloud: Could not register periodicSync for ${db.name}`,\n      e\n    );\n  }\n}\n","import { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { registerSyncEvent } from \"./registerSyncEvent\";\n\nexport function triggerSync(db: DexieCloudDB, purpose: \"push\" | \"pull\") {\n  if (db.cloud.usingServiceWorker) {\n    console.debug('registering sync event');\n    registerSyncEvent(db, purpose);\n  } else {\n    db.localSyncEvent.next({purpose});\n  }\n}","const hasArrayBufferB64 = \"fromBase64\" in Uint8Array; // https://github.com/tc39/proposal-arraybuffer-base64;\nexport const b64decode = typeof Buffer !== \"undefined\"\n    ? (base64) => Buffer.from(base64, \"base64\") // Node\n    : hasArrayBufferB64\n        ? // @ts-ignore: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array/fromBase64\n            (base64) => Uint8Array.fromBase64(base64) // Modern javascript standard\n        : (base64) => {\n            // Legacy DOM workaround\n            const binary_string = atob(base64);\n            const len = binary_string.length;\n            const bytes = new Uint8Array(len);\n            for (var i = 0; i < len; i++) {\n                bytes[i] = binary_string.charCodeAt(i);\n            }\n            return bytes;\n        };\nexport const b64encode = typeof Buffer !== \"undefined\"\n    ? (b) => {\n        // Node\n        if (ArrayBuffer.isView(b)) {\n            return Buffer.from(b.buffer, b.byteOffset, b.byteLength).toString(\"base64\");\n        }\n        else {\n            return Buffer.from(b).toString(\"base64\");\n        }\n    }\n    : hasArrayBufferB64\n        ? // @ts-ignore https://github.com/tc39/proposal-arraybuffer-base64\n            (b) => b.toBase64() // Modern Javascript standard\n        : (b) => {\n            // Legacy DOM workaround\n            const u8a = ArrayBuffer.isView(b) ? b : new Uint8Array(b);\n            const CHUNK_SIZE = 0x1000;\n            const strs = [];\n            for (let i = 0, l = u8a.length; i < l; i += CHUNK_SIZE) {\n                const chunk = u8a.subarray(i, i + CHUNK_SIZE);\n                strs.push(String.fromCharCode.apply(null, chunk));\n            }\n            return btoa(strs.join(\"\"));\n        };\n","import { PersistedSyncState } from '../db/entities/PersistedSyncState';\nimport { b64encode } from 'dreambase-library/dist/common/base64';\n\nexport async function computeRealmSetHash({\n  realms,\n  inviteRealms,\n}: PersistedSyncState) {\n  const data = JSON.stringify(\n    [\n      ...realms.map((realmId) => ({ realmId, accepted: true })),\n      ...inviteRealms.map((realmId) => ({ realmId, accepted: false })),\n    ].sort((a, b) =>\n      a.realmId < b.realmId ? -1 : a.realmId > b.realmId ? 1 : 0\n    )\n  );\n  const byteArray = new TextEncoder().encode(data);\n  const digestBytes = await crypto.subtle.digest('SHA-1', byteArray);\n  const base64 = b64encode(digestBytes);\n  return base64;\n}\n","import { IndexableType, Table } from \"dexie\";\nimport { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { EntityCommon } from \"../db/entities/EntityCommon\";\n\nexport function getSyncableTables(db: DexieCloudDB): Table<EntityCommon>[] {\n  return Object.entries(db.cloud.schema || {})\n    .filter(([, { markedForSync }]) => markedForSync)\n    .map(([tbl]) => db.tables.filter(({name}) => name === tbl)[0])\n    .filter(cloudTableSchema => cloudTableSchema);\n}\n","\n\nexport function getMutationTable(tableName: string) {\n  return `$${tableName}_mutations`;\n}\n","\n\nexport function getTableFromMutationTable(mutationTable: string) {\n  const tableName = /^\\$(.*)_mutations$/.exec(mutationTable)?.[1];\n  if (!tableName) throw new Error(`Given mutationTable ${mutationTable} is not correct`);\n  return tableName;\n}\n","const concat = [].concat;\nexport function flatten<T>(a: (T | T[])[]): T[] {\n  return concat.apply([], a);\n}\n","import { Table } from 'dexie';\nimport { getTableFromMutationTable } from '../helpers/getTableFromMutationTable';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { DBOperation, DBOperationsSet } from 'dexie-cloud-common';\nimport { flatten } from '../helpers/flatten';\n\nexport async function listClientChanges(\n  mutationTables: Table[],\n  db: DexieCloudDB,\n  { since = {} as { [table: string]: number }, limit = Infinity } = {}\n): Promise<DBOperationsSet> {\n  const allMutsOnTables = await Promise.all(\n    mutationTables.map(async (mutationTable) => {\n      const tableName = getTableFromMutationTable(mutationTable.name);\n      const lastRevision = since[tableName];\n\n      let query = lastRevision\n        ? mutationTable.where('rev').above(lastRevision)\n        : mutationTable;\n\n      if (limit < Infinity) query = query.limit(limit);\n\n      const muts: DBOperation[] = await query.toArray();\n\n      //const objTable = db.table(tableName);\n      /*for (const mut of muts) {\n        if (mut.type === \"insert\" || mut.type === \"upsert\") {\n          mut.values = await objTable.bulkGet(mut.keys);\n        }\n      }*/\n      return muts.map((mut) => ({\n        table: tableName,\n        mut,\n      }));\n    })\n  );\n\n  // Sort by time to get a true order of the operations (between tables)\n  const sorted = flatten(allMutsOnTables).sort((a, b) => a.mut.txid === b.mut.txid\n    ? a.mut.opNo! - b.mut.opNo! // Within same transaction, sort by opNo\n    : a.mut.ts! - b.mut.ts! // Different transactions - sort by timestamp when mutation resolved\n  );\n  const result: DBOperationsSet = [];\n  let currentEntry: {\n    table: string;\n    muts: DBOperation[];\n  } | null = null;\n  let currentTxid: string | null = null;\n  for (const { table, mut } of sorted) {\n    if (\n      currentEntry &&\n      currentEntry.table === table &&\n      currentTxid === mut.txid\n    ) {\n      currentEntry.muts.push(mut);\n    } else {\n      currentEntry = {\n        table,\n        muts: [mut],\n      };\n      currentTxid = mut.txid!;\n      result.push(currentEntry);\n    }\n  }\n\n  // Filter out those tables that doesn't have any mutations:\n  return result;\n}\n","export function randomString(bytes: number) {\n  const buf = new Uint8Array(bytes);\n  if (typeof crypto !== 'undefined') {\n    crypto.getRandomValues(buf);\n  } else {\n    for (let i = 0; i < bytes; i++) buf[i] = Math.floor(Math.random() * 256);\n  }\n  if (typeof Buffer !== 'undefined' && Buffer.from) {\n    return Buffer.from(buf).toString('base64');\n  } else if (typeof btoa !== 'undefined') {\n    return btoa(String.fromCharCode.apply(null, buf));\n  } else {\n    throw new Error('No btoa or Buffer available');\n  }\n}\n","export function assert(b) {\n    if (!b)\n        throw new Error('Assertion Failed');\n}\nconst _hasOwn = {}.hasOwnProperty;\nexport function hasOwn(obj, prop) {\n    return _hasOwn.call(obj, prop);\n}\nexport function setByKeyPath(obj, keyPath, value) {\n    if (!obj || keyPath === undefined)\n        return;\n    if ('isFrozen' in Object && Object.isFrozen(obj))\n        return;\n    if (typeof keyPath !== 'string' && 'length' in keyPath) {\n        assert(typeof value !== 'string' && 'length' in value);\n        for (var i = 0, l = keyPath.length; i < l; ++i) {\n            setByKeyPath(obj, keyPath[i], value[i]);\n        }\n    }\n    else {\n        var period = keyPath.indexOf('.');\n        if (period !== -1) {\n            var currentKeyPath = keyPath.substr(0, period);\n            var remainingKeyPath = keyPath.substr(period + 1);\n            if (remainingKeyPath === '')\n                if (value === undefined) {\n                    if (Array.isArray(obj)) {\n                        if (!isNaN(parseInt(currentKeyPath)))\n                            obj.splice(parseInt(currentKeyPath), 1);\n                    }\n                    else\n                        delete obj[currentKeyPath];\n                    // @ts-ignore: even if currentKeyPath would be numeric string and obj would be array - it works.\n                }\n                else\n                    obj[currentKeyPath] = value;\n            else {\n                //@ts-ignore: even if currentKeyPath would be numeric string and obj would be array - it works.\n                var innerObj = obj[currentKeyPath];\n                //@ts-ignore: even if currentKeyPath would be numeric string and obj would be array - it works.\n                if (!innerObj || !hasOwn(obj, currentKeyPath))\n                    innerObj = (obj[currentKeyPath] = {});\n                setByKeyPath(innerObj, remainingKeyPath, value);\n            }\n        }\n        else {\n            if (value === undefined) {\n                if (Array.isArray(obj) && !isNaN(parseInt(keyPath)))\n                    // @ts-ignore: even if currentKeyPath would be numeric string and obj would be array - it works.\n                    obj.splice(keyPath, 1);\n                //@ts-ignore: even if currentKeyPath would be numeric string and obj would be array - it works.\n                else\n                    delete obj[keyPath];\n                //@ts-ignore: even if currentKeyPath would be numeric string and obj would be array - it works.\n            }\n            else\n                obj[keyPath] = value;\n        }\n    }\n}\nexport const randomString = typeof self !== 'undefined' && typeof crypto !== 'undefined' ? (bytes, randomFill = crypto.getRandomValues.bind(crypto)) => {\n    // Web\n    const buf = new Uint8Array(bytes);\n    randomFill(buf);\n    return self.btoa(String.fromCharCode.apply(null, buf));\n} : typeof Buffer !== 'undefined' ? (bytes, randomFill = simpleRandomFill) => {\n    // Node\n    const buf = Buffer.alloc(bytes);\n    randomFill(buf);\n    return buf.toString(\"base64\");\n} : () => { throw new Error(\"No implementation of randomString was found\"); };\nfunction simpleRandomFill(buf) {\n    for (let i = 0; i < buf.length; ++i) {\n        buf[i] = Math.floor(Math.random() * 256);\n    }\n}\n","const validIDTypes = {\n    Uint8Array,\n};\n/** Verifies that given primary key is valid.\n * The reason we narrow validity for valid keys are twofold:\n *  1: Make sure to only support types that can be used as an object index in DBKeyMutationSet.\n *     For example, ArrayBuffer cannot be used (gives \"object ArrayBuffer\") but Uint8Array can be\n *     used (gives comma-delimited list of included bytes).\n *  2: Avoid using plain numbers and Dates as keys when they are synced, as they are not globally unique.\n *  3: Since we store the key as a VARCHAR server side in current version, try not promote types that stringifies to become very long server side.\n *\n * @param id\n * @returns\n */\nexport function isValidSyncableID(id) {\n    if (typeof id === \"string\")\n        return true;\n    //if (validIDTypes[toStringTag(id)]) return true;\n    //if (Array.isArray(id)) return id.every((part) => isValidSyncableID(part));\n    if (Array.isArray(id) && id.some(key => isValidSyncableID(key)) && id.every(isValidSyncableIDPart))\n        return true;\n    return false;\n}\n/** Verifies that given key part is valid.\n *  1: Make sure that arrays of this types are stringified correclty and works with DBKeyMutationSet.\n *     For example, ArrayBuffer cannot be used (gives \"object ArrayBuffer\") but Uint8Array can be\n *     used (gives comma-delimited list of included bytes).\n *  2: Since we store the key as a VARCHAR server side in current version, try not promote types that stringifies to become very long server side.\n*/\nfunction isValidSyncableIDPart(part) {\n    return typeof part === \"string\" || typeof part === \"number\" || Array.isArray(part) && part.every(isValidSyncableIDPart);\n}\nexport function isValidAtID(id, idPrefix) {\n    return !idPrefix || (typeof id === \"string\" && id.startsWith(idPrefix));\n}\n","import { setByKeyPath } from \"../utils.js\";\nexport function applyOperation(target, table, op) {\n    const tbl = target[table] || (target[table] = {});\n    const keys = op.keys.map(key => typeof key === 'string' ? key : JSON.stringify(key));\n    switch (op.type) {\n        case \"insert\":\n        // TODO: Don't treat insert and upsert the same?\n        case \"upsert\":\n            keys.forEach((key, idx) => {\n                tbl[key] = {\n                    type: \"ups\",\n                    val: op.values[idx],\n                };\n            });\n            break;\n        case \"update\":\n        case \"modify\": {\n            keys.forEach((key, idx) => {\n                const changeSpec = op.type === \"update\"\n                    ? op.changeSpecs[idx]\n                    : op.changeSpec;\n                const entry = tbl[key];\n                if (!entry) {\n                    tbl[key] = {\n                        type: \"upd\",\n                        mod: changeSpec,\n                    };\n                }\n                else {\n                    switch (entry.type) {\n                        case \"ups\":\n                            // Adjust the existing upsert with additional updates\n                            for (const [propPath, value] of Object.entries(changeSpec)) {\n                                setByKeyPath(entry.val, propPath, value);\n                            }\n                            break;\n                        case \"del\":\n                            // No action.\n                            break;\n                        case \"upd\":\n                            // Adjust existing update with additional updates\n                            Object.assign(entry.mod, changeSpec); // May work for deep props as well - new keys is added later, right? Does the prop order persist along TSON and all? But it will not be 100% when combined with some server code (seach for \"address.city\": \"Stockholm\" comment)\n                            break;\n                    }\n                }\n            });\n            break;\n        }\n        case \"delete\":\n            keys.forEach((key) => {\n                tbl[key] = {\n                    type: \"del\",\n                };\n            });\n            break;\n    }\n    return target;\n}\n","import { applyOperation } from \"./applyOperation.js\";\nexport function applyOperations(target, ops) {\n    for (const { table, muts } of ops) {\n        for (const mut of muts) {\n            applyOperation(target, table, mut);\n        }\n    }\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n\n/**\n * Count the number of \"1\" bits in an unsigned 32bit number.\n *\n * Super fun bitcount algorithm by Brian Kernighan.\n *\n * @param {number} n\n */\nexport const countBits = n => {\n  n &= binary.BITS32\n  let count = 0\n  while (n) {\n    n &= (n - 1)\n    count++\n  }\n  return count\n}\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n\n/**\n * @template {ArrayLike<any>} ARR\n * @template {function(ARR extends ArrayLike<infer T> ? T : never, number, ARR):any} MAPPER\n * @param {ARR} arr\n * @param {MAPPER} mapper\n * @return {Array<MAPPER extends function(...any): infer M ? M : never>}\n */\nexport const map = (arr, mapper) => {\n  /**\n   * @type {Array<any>}\n   */\n  const res = Array(arr.length)\n  for (let i = 0; i < arr.length; i++) {\n    res[i] = mapper(/** @type {any} */ (arr[i]), i, /** @type {any} */ (arr))\n  }\n  return /** @type {any} */ (res)\n}\n","import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(new Uint8Array(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  /**\n   * Flush the encoded state and transform this to a Uint8Array.\n   *\n   * Note that this should only be called once.\n   */\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","import { Encoder, writeVarString, writeBigUint64, writeAny, toUint8Array, writeVarUint8Array, } from 'lib0/encoding.js';\nexport function encodeYMessage(msg) {\n    const encoder = new Encoder();\n    writeVarString(encoder, msg.type);\n    if ('table' in msg)\n        writeVarString(encoder, msg.table);\n    if ('prop' in msg)\n        writeVarString(encoder, msg.prop);\n    switch (msg.type) {\n        case 'u-ack':\n        case 'u-reject':\n            writeBigUint64(encoder, BigInt(msg.i));\n            break;\n        case 'outdated-server-rev':\n            break;\n        case 'y-complete-sync-done':\n            writeVarString(encoder, msg.yServerRev);\n            break;\n        default:\n            writeAny(encoder, msg.k);\n            switch (msg.type) {\n                case 'aware':\n                    writeVarUint8Array(encoder, msg.u);\n                    break;\n                case 'doc-open':\n                    writeAny(encoder, msg.serverRev);\n                    writeAny(encoder, msg.sv);\n                    break;\n                case 'doc-close':\n                    break;\n                case 'sv':\n                    writeVarUint8Array(encoder, msg.sv);\n                    break;\n                case 'u-c':\n                    writeVarUint8Array(encoder, msg.u);\n                    writeBigUint64(encoder, BigInt(msg.i));\n                    break;\n                case 'u-s':\n                    writeVarUint8Array(encoder, msg.u);\n                    break;\n                case 'in-sync':\n                    break;\n            }\n    }\n    return toUint8Array(encoder);\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = new Uint8Array(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","import { __asyncGenerator, __asyncValues, __await } from \"tslib\";\nexport function consumeChunkedBinaryStream(source) {\n    return __asyncGenerator(this, arguments, function* consumeChunkedBinaryStream_1() {\n        var _a, e_1, _b, _c;\n        let state = 0;\n        let sizeBuf = new Uint8Array(4);\n        let sizeBufPos = 0;\n        let bufs = [];\n        let len = 0;\n        try {\n            for (var _d = true, source_1 = __asyncValues(source), source_1_1; source_1_1 = yield __await(source_1.next()), _a = source_1_1.done, !_a; _d = true) {\n                _c = source_1_1.value;\n                _d = false;\n                const chunk = _c;\n                const dw = new DataView(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n                let pos = 0;\n                while (pos < chunk.byteLength) {\n                    switch (state) {\n                        case 0:\n                            // Beginning of a size header\n                            if (pos + 4 > chunk.byteLength) {\n                                for (const b of chunk.slice(pos)) {\n                                    if (sizeBufPos === 4)\n                                        break;\n                                    sizeBuf[sizeBufPos++] = b;\n                                    ++pos;\n                                }\n                                if (sizeBufPos < 4) {\n                                    // Need more bytes in order to read length.\n                                    // Will go out from while loop as well because pos is defenitely = chunk.byteLength here.\n                                    break;\n                                }\n                            }\n                            else if (sizeBufPos > 0 && sizeBufPos < 4) {\n                                for (const b of chunk.slice(pos, pos + 4 - sizeBufPos)) {\n                                    sizeBuf[sizeBufPos++] = b;\n                                    ++pos;\n                                }\n                            }\n                        // Intentional fall-through...\n                        case 1:\n                            len =\n                                sizeBufPos === 4\n                                    ? new DataView(sizeBuf.buffer, 0, 4).getUint32(0, false)\n                                    : dw.getUint32(pos, false);\n                            if (sizeBufPos)\n                                sizeBufPos = 0; // in this case pos is already forwarded\n                            else\n                                pos += 4; // else pos is not yet forwarded - that's why we do it now\n                        // Intentional fall-through...\n                        case 2:\n                            // Eat the chunk\n                            if (pos >= chunk.byteLength) {\n                                state = 2;\n                                break;\n                            }\n                            if (pos + len > chunk.byteLength) {\n                                bufs.push(chunk.slice(pos));\n                                len -= (chunk.byteLength - pos);\n                                state = 2;\n                                pos = chunk.byteLength; // will break while loop.\n                            }\n                            else {\n                                if (bufs.length > 0) {\n                                    const concats = new Uint8Array(bufs.reduce((p, c) => p + c.byteLength, len));\n                                    let p = 0;\n                                    for (const buf of bufs) {\n                                        concats.set(buf, p);\n                                        p += buf.byteLength;\n                                    }\n                                    concats.set(chunk.slice(pos, pos + len), p);\n                                    bufs = [];\n                                    yield yield __await(concats);\n                                }\n                                else {\n                                    yield yield __await(chunk.slice(pos, pos + len));\n                                }\n                                pos += len;\n                                state = 0;\n                            }\n                            break;\n                    }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = source_1.return)) yield __await(_b.call(source_1));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    });\n}\n","import { TokenErrorResponse } from 'dexie-cloud-common';\n\nexport class TokenErrorResponseError extends Error {\n  title: string;\n  messageCode:\n    | 'INVALID_OTP'\n    | 'INVALID_EMAIL'\n    | 'LICENSE_LIMIT_REACHED'\n    | 'GENERIC_ERROR';\n  message: string;\n  messageParams?: { [param: string]: string };\n\n  constructor({\n    title,\n    message,\n    messageCode,\n    messageParams,\n  }: TokenErrorResponse) {\n    super(message);\n    this.name = 'TokenErrorResponseError';\n    this.title = title;\n    this.messageCode = messageCode;\n    this.messageParams = messageParams;\n  }\n}\n","import Dexie from 'dexie';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { DXCAlert } from '../types/DXCAlert';\nimport { DXCInputField } from '../types/DXCInputField';\nimport { DXCUserInteraction } from '../types/DXCUserInteraction';\n\nexport interface DXCUserInteractionRequest {\n  type: DXCUserInteraction['type'];\n  title: string;\n  alerts: DXCAlert[];\n  submitLabel?: string;\n  cancelLabel?: string | null;\n  fields: { [name: string]: DXCInputField };\n}\n\nexport function interactWithUser<T extends DXCUserInteractionRequest>(\n  userInteraction: BehaviorSubject<DXCUserInteraction | undefined>,\n  req: T\n): Promise<{\n  [P in keyof T['fields']]: string;\n}> {\n  let done = false;\n  return new Promise<{\n    [P in keyof T['fields']]: string;\n  }>((resolve, reject) => {\n    const interactionProps = {\n      submitLabel: 'Submit',\n      cancelLabel: 'Cancel',\n      ...req,\n      onSubmit: (res: {\n        [P in keyof T['fields']]: string;\n      }) => {\n        userInteraction.next(undefined);\n        done = true;\n        resolve(res);\n      },\n      onCancel: () => {\n        userInteraction.next(undefined);\n        done = true;\n        reject(new Dexie.AbortError('User cancelled'));\n      },\n    } as DXCUserInteraction;\n    userInteraction.next(interactionProps);\n    // Start subscribing for external updates to db.cloud.userInteraction, and if so, cancel this request.\n    /*const subscription = userInteraction.subscribe((currentInteractionProps) => {\n      if (currentInteractionProps !== interactionProps) {\n        if (subscription) subscription.unsubscribe();\n        if (!done) {\n          reject(new Dexie.AbortError(\"User cancelled\"));\n        }\n      }\n    });*/\n  });\n}\n\nexport function alertUser(\n  userInteraction: BehaviorSubject<DXCUserInteraction | undefined>,\n  title: string,\n  ...alerts: DXCAlert[]\n) {\n  return interactWithUser(userInteraction, {\n    type: 'message-alert',\n    title,\n    alerts,\n    fields: {},\n    submitLabel: 'OK',\n    cancelLabel: null,\n  });\n}\n\nexport async function promptForEmail(\n  userInteraction: BehaviorSubject<DXCUserInteraction | undefined>,\n  title: string,\n  emailHint?: string\n) {\n  let email = emailHint || '';\n  // Regular expression for email validation\n  // ^[\\w-+.]+@([\\w-]+\\.)+[\\w-]{2,10}(\\sas\\s[\\w-+.]+@([\\w-]+\\.)+[\\w-]{2,10})?$\n  //\n  // ^[\\w-+.]+ : Matches the start of the string. Allows one or more word characters\n  // (a-z, A-Z, 0-9, and underscore), hyphen, plus, or dot.\n  //\n  // @ : Matches the @ symbol.\n  // ([\\w-]+\\.)+ : Matches one or more word characters or hyphens followed by a dot.\n  //   The plus sign outside the parentheses means this pattern can repeat one or more times,\n  //   allowing for subdomains.\n  // [\\w-]{2,10} : Matches between 2 and 10 word characters or hyphens. This is typically for\n  //   the domain extension like .com, .net, etc.\n  // (\\sas\\s[\\w-+.]+@([\\w-]+\\.)+[\\w-]{2,10})?$ : This part is optional (due to the ? at the end).\n  //   If present, it matches \" as \" followed by another valid email address. This allows for the\n  //   input to be either a single email address or two email addresses separated by \" as \". \n  //\n  // The use case for \"<email1> as <email2>\"\" is for when a database owner with full access to the\n  // database needs to impersonate another user in the database in order to troubleshoot. This\n  // format will only be possible to use when email1 is the owner of an API client with GLOBAL_READ\n  // and GLOBAL_WRITE permissions on the database. The email will be checked on the server before\n  // allowing it and giving out a token for email2, using the OTP sent to email1.\n  while (!email || !/^[\\w-+.]+@([\\w-]+\\.)+[\\w-]{2,10}(\\sas\\s[\\w-+.]+@([\\w-]+\\.)+[\\w-]{2,10})?$/.test(email)) {\n    email = (\n      await interactWithUser(userInteraction, {\n        type: 'email',\n        title,\n        alerts: email\n          ? [\n              {\n                type: 'error',\n                messageCode: 'INVALID_EMAIL',\n                message: 'Please enter a valid email address',\n                messageParams: {},\n              },\n            ]\n          : [],\n        fields: {\n          email: {\n            type: 'email',\n            placeholder: 'you@somedomain.com',\n          },\n        },\n      })\n    ).email;\n  }\n  return email;\n}\n\nexport async function promptForOTP(\n  userInteraction: BehaviorSubject<DXCUserInteraction | undefined>,\n  email: string,\n  alert?: DXCAlert\n) {\n  const alerts: DXCAlert[] = [\n    {\n      type: 'info',\n      messageCode: 'OTP_SENT',\n      message: `A One-Time password has been sent to {email}`,\n      messageParams: { email },\n    },\n  ];\n  if (alert) {\n    alerts.push(alert);\n  }\n  const { otp } = await interactWithUser(userInteraction, {\n    type: 'otp',\n    title: 'Enter OTP',\n    alerts,\n    fields: {\n      otp: {\n        type: 'otp',\n        label: 'OTP',\n        placeholder: 'Paste OTP here',\n      },\n    },\n  });\n  return otp;\n}\n\nexport async function confirmLogout(\n  userInteraction: BehaviorSubject<DXCUserInteraction | undefined>,\n  currentUserId: string,\n  numUnsyncedChanges: number\n) {\n  const alerts: DXCAlert[] = [\n    {\n      type: 'warning',\n      messageCode: 'LOGOUT_CONFIRMATION',\n      message: `{numUnsyncedChanges} unsynced changes will get lost!\n                Logout anyway?`,\n      messageParams: {\n        currentUserId,\n        numUnsyncedChanges: numUnsyncedChanges.toString(),\n      }\n    },\n  ];\n  return await interactWithUser(userInteraction, {\n    type: 'logout-confirmation',\n    title: 'Confirm Logout',\n    alerts,\n    fields: {},\n    submitLabel: 'Confirm logout',\n    cancelLabel: 'Cancel'\n  })\n    .then(() => true)\n    .catch(() => false);\n}\n","import Dexie from 'dexie';\nimport type {\n  RefreshTokenRequest,\n  TokenErrorResponse,\n  TokenFinalResponse,\n} from 'dexie-cloud-common';\nimport { b64encode } from 'dreambase-library/dist/common/base64';\nimport { BehaviorSubject } from 'rxjs';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { UserLogin } from '../db/entities/UserLogin';\nimport { DXCAlert } from '../types/DXCAlert';\nimport {\n  DXCMessageAlert,\n  DXCUserInteraction,\n} from '../types/DXCUserInteraction';\nimport { TokenErrorResponseError } from './TokenErrorResponseError';\nimport { alertUser, interactWithUser } from './interactWithUser';\nimport { InvalidLicenseError } from '../InvalidLicenseError';\nimport { LoginHints } from '../DexieCloudAPI';\n\nexport type FetchTokenCallback = (tokenParams: {\n  public_key: string;\n  hints?: LoginHints;\n}) => Promise<TokenFinalResponse | TokenErrorResponse>;\n\nexport async function loadAccessToken(\n  db: DexieCloudDB\n): Promise<UserLogin | null> {\n  const currentUser = await db.getCurrentUser();\n  const {\n    accessToken,\n    accessTokenExpiration,\n    refreshToken,\n    refreshTokenExpiration,\n    claims,\n  } = currentUser;\n  if (!accessToken) return null;\n  const expTime = accessTokenExpiration?.getTime() ?? Infinity;\n  if (expTime > Date.now() && (currentUser.license?.status || 'ok') === 'ok') {\n    return currentUser;\n  }\n  if (!refreshToken) {\n    throw new Error(`Refresh token missing`);\n  }\n  const refreshExpTime = refreshTokenExpiration?.getTime() ?? Infinity;\n  if (refreshExpTime <= Date.now()) {\n    throw new Error(`Refresh token has expired`);\n  }\n  const refreshedLogin = await refreshAccessToken(\n    db.cloud.options!.databaseUrl,\n    currentUser\n  );\n  await db.table('$logins').update(claims.sub, {\n    accessToken: refreshedLogin.accessToken,\n    accessTokenExpiration: refreshedLogin.accessTokenExpiration,\n    claims: refreshedLogin.claims,\n    license: refreshedLogin.license,\n  });\n  return refreshedLogin;\n}\n\nexport async function authenticate(\n  url: string,\n  context: UserLogin,\n  fetchToken: FetchTokenCallback,\n  userInteraction: BehaviorSubject<DXCUserInteraction | undefined>,\n  hints?: LoginHints\n): Promise<UserLogin> {\n  if (\n    context.accessToken &&\n    context.accessTokenExpiration!.getTime() > Date.now()\n  ) {\n    return context;\n  } else if (\n    context.refreshToken &&\n    (!context.refreshTokenExpiration ||\n      context.refreshTokenExpiration.getTime() > Date.now())\n  ) {\n    return await refreshAccessToken(url, context);\n  } else {\n    return await userAuthenticate(context, fetchToken, userInteraction, hints);\n  }\n}\n\nexport async function refreshAccessToken(\n  url: string,\n  login: UserLogin\n): Promise<UserLogin> {\n  if (!login.refreshToken)\n    throw new Error(`Cannot refresh token - refresh token is missing.`);\n  if (!login.nonExportablePrivateKey)\n    throw new Error(\n      `login.nonExportablePrivateKey is missing - cannot sign refresh token without a private key.`\n    );\n\n  const time_stamp = Date.now();\n  const signing_algorithm = 'RSASSA-PKCS1-v1_5';\n  const textEncoder = new TextEncoder();\n  const data = textEncoder.encode(login.refreshToken + time_stamp);\n  const binarySignature = await crypto.subtle.sign(\n    signing_algorithm,\n    login.nonExportablePrivateKey,\n    data\n  );\n  const signature = b64encode(binarySignature);\n\n  const tokenRequest: RefreshTokenRequest = {\n    grant_type: 'refresh_token',\n    refresh_token: login.refreshToken,\n    scopes: ['ACCESS_DB'],\n    signature,\n    signing_algorithm,\n    time_stamp,\n  };\n  const res = await fetch(`${url}/token`, {\n    body: JSON.stringify(tokenRequest),\n    method: 'post',\n    headers: { 'Content-Type': 'application/json' },\n    mode: 'cors',\n  });\n  if (res.status !== 200)\n    throw new Error(`RefreshToken: Status ${res.status} from ${url}/token`);\n  const response: TokenFinalResponse | TokenErrorResponse = await res.json();\n  if (response.type === 'error') {\n    throw new TokenErrorResponseError(response);\n  }\n  login.accessToken = response.accessToken;\n  login.accessTokenExpiration = response.accessTokenExpiration\n    ? new Date(response.accessTokenExpiration)\n    : undefined;\n  login.claims = response.claims;\n  login.license = {\n    type: response.userType,\n    status: response.claims.license || 'ok',\n  }\n  if (response.evalDaysLeft != null) {\n    login.license.evalDaysLeft = response.evalDaysLeft;\n  }\n  if (response.userValidUntil != null) {\n    login.license.validUntil = new Date(response.userValidUntil);\n  }\n  if (response.data) {\n    login.data = response.data;\n  }\n  return login;\n}\n\nasync function userAuthenticate(\n  context: UserLogin,\n  fetchToken: FetchTokenCallback,\n  userInteraction: BehaviorSubject<DXCUserInteraction | undefined>,\n  hints?: LoginHints\n) {\n  if (!crypto.subtle) {\n    if (typeof location !== 'undefined' && location.protocol === 'http:') {\n      throw new Error(`Dexie Cloud Addon needs to use WebCrypto, but your browser has disabled it due to being served from an insecure location. Please serve it from https or http://localhost:<port> (See https://stackoverflow.com/questions/46670556/how-to-enable-crypto-subtle-for-unsecure-origins-in-chrome/46671627#46671627)`);\n    } else {\n      throw new Error(`This browser does not support WebCrypto.`);\n    }\n  }\n  const { privateKey, publicKey } = await crypto.subtle.generateKey(\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      modulusLength: 2048,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n      hash: { name: 'SHA-256' },\n    },\n    false, // Non-exportable...\n    ['sign', 'verify']\n  );\n  if (!privateKey || !publicKey)\n    throw new Error(`Could not generate RSA keypair`); // Typings suggest these can be undefined...\n  context.nonExportablePrivateKey = privateKey; //...but storable!\n  const publicKeySPKI = await crypto.subtle.exportKey('spki', publicKey);\n  const publicKeyPEM = spkiToPEM(publicKeySPKI);\n  context.publicKey = publicKey;\n\n  try {\n    const response2 = await fetchToken({\n      public_key: publicKeyPEM,\n      hints,\n    });\n\n    if (response2.type === 'error') {\n      throw new TokenErrorResponseError(response2);\n    }\n\n    if (response2.type !== 'tokens')\n      throw new Error(\n        `Unexpected response type from token endpoint: ${(response2 as any).type}`\n      );\n\n    /*const licenseStatus = response2.claims.license || 'ok';\n    if (licenseStatus !== 'ok') {\n      throw new InvalidLicenseError(licenseStatus);\n    }*/\n\n    context.accessToken = response2.accessToken;\n    context.accessTokenExpiration = new Date(response2.accessTokenExpiration);\n    context.refreshToken = response2.refreshToken;\n    if (response2.refreshTokenExpiration) {\n      context.refreshTokenExpiration = new Date(\n        response2.refreshTokenExpiration\n      );\n    }\n    context.userId = response2.claims.sub;\n    context.email = response2.claims.email;\n    context.name = response2.claims.name;\n    context.claims = response2.claims;\n    context.license = {\n      type: response2.userType,\n      status: response2.claims.license || 'ok',\n    }\n    context.data = response2.data;\n    if (response2.evalDaysLeft != null) {\n      context.license.evalDaysLeft = response2.evalDaysLeft;\n    }\n    if (response2.userValidUntil != null) {\n      context.license.validUntil = new Date(response2.userValidUntil);\n    }\n\n    if (response2.alerts && response2.alerts.length > 0) {\n      await interactWithUser(userInteraction, {\n        type: 'message-alert',\n        title: 'Authentication Alert',\n        fields: {},\n        alerts: response2.alerts as DXCAlert[],\n      });\n    }\n    return context;\n  } catch (error) {\n    if (error instanceof TokenErrorResponseError) {\n      await alertUser(userInteraction, error.title, {\n        type: 'error',\n        messageCode: error.messageCode,\n        message: error.message,\n        messageParams: {},\n      });\n      throw error;\n    }\n    let message = `We're having a problem authenticating right now.`;\n    console.error (`Error authenticating`, error);\n    if (error instanceof TypeError) {\n      const isOffline = typeof navigator !== undefined && !navigator.onLine;\n      if (isOffline) {\n        message = `You seem to be offline. Please connect to the internet and try again.`;\n      } else if (Dexie.debug || (typeof location !== 'undefined' && (location.hostname === 'localhost' || location.hostname === '127.0.0.1'))) {\n        // The audience is most likely the developer. Suggest to whitelist the localhost origin:\n        message = `Could not connect to server. Please verify that your origin '${location.origin}' is whitelisted using \\`npx dexie-cloud whitelist\\``;\n      } else {\n        message = `Could not connect to server. Please verify the connection.`;\n      }\n      await alertUser(userInteraction, 'Authentication Failed', {\n        type: 'error',\n        messageCode: 'GENERIC_ERROR',\n        message,\n        messageParams: {},\n      }).catch(() => {});  \n    }\n\n    throw error;\n  }\n}\n\nfunction spkiToPEM(keydata: ArrayBuffer) {\n  const keydataB64 = b64encode(keydata);\n  const keydataB64Pem = formatAsPem(keydataB64);\n  return keydataB64Pem;\n}\n\nfunction formatAsPem(str: string) {\n  let finalString = '-----BEGIN PUBLIC KEY-----\\n';\n\n  while (str.length > 0) {\n    finalString += str.substring(0, 64) + '\\n';\n    str = str.substring(64);\n  }\n\n  finalString = finalString + '-----END PUBLIC KEY-----';\n\n  return finalString;\n}\n","const { toString: toStr } = {};\nfunction getToStringTag(val) {\n    return toStr.call(val).slice(8, -1);\n}\nexport function escapeDollarProps(value) {\n    const keys = Object.keys(value);\n    let dollarKeys = null;\n    for (let i = 0, l = keys.length; i < l; ++i) {\n        if (keys[i][0] === \"$\") {\n            dollarKeys = dollarKeys || [];\n            dollarKeys.push(keys[i]);\n        }\n    }\n    if (!dollarKeys)\n        return value;\n    const clone = { ...value };\n    for (const k of dollarKeys) {\n        delete clone[k];\n    }\n    for (const k of dollarKeys) {\n        clone[\"$\" + k] = value[k];\n    }\n    return clone;\n}\nconst ObjectDef = {\n    replace: escapeDollarProps,\n};\nexport function TypesonSimplified(...typeDefsInputs) {\n    const typeDefs = typeDefsInputs.reduce((p, c) => ({ ...p, ...c }), typeDefsInputs.reduce((p, c) => ({ ...c, ...p }), {}));\n    const protoMap = new WeakMap();\n    return {\n        stringify(value, alternateChannel, space) {\n            const json = JSON.stringify(value, function (key) {\n                const realVal = this[key];\n                const typeDef = getTypeDef(realVal);\n                return typeDef\n                    ? typeDef.replace(realVal, alternateChannel, typeDefs)\n                    : realVal;\n            }, space);\n            return json;\n        },\n        parse(tson, alternateChannel) {\n            const stack = [];\n            return JSON.parse(tson, function (key, value) {\n                //\n                // Parent Part\n                //\n                const type = value === null || value === void 0 ? void 0 : value.$t;\n                if (type) {\n                    const typeDef = typeDefs[type];\n                    value = typeDef\n                        ? typeDef.revive(value, alternateChannel, typeDefs)\n                        : value;\n                }\n                let top = stack[stack.length - 1];\n                if (top && top[0] === value) {\n                    // Do what the kid told us to\n                    // Unescape dollar props\n                    value = { ...value };\n                    // Delete keys that children wanted us to delete\n                    for (const k of top[1])\n                        delete value[k];\n                    // Set keys that children wanted us to set\n                    for (const [k, v] of Object.entries(top[2])) {\n                        value[k] = v;\n                    }\n                    stack.pop();\n                }\n                //\n                // Child part\n                //\n                if (value === undefined || (key[0] === \"$\" && key !== \"$t\")) {\n                    top = stack[stack.length - 1];\n                    let deletes;\n                    let mods;\n                    if (top && top[0] === this) {\n                        deletes = top[1];\n                        mods = top[2];\n                    }\n                    else {\n                        stack.push([this, (deletes = []), (mods = {})]);\n                    }\n                    if (key[0] === \"$\" && key !== \"$t\") {\n                        // Unescape props (also preserves undefined if this is a combo)\n                        deletes.push(key);\n                        mods[key.substr(1)] = value;\n                    }\n                    else {\n                        // Preserve undefined\n                        mods[key] = undefined;\n                    }\n                }\n                return value;\n            });\n        },\n    };\n    function getTypeDef(realVal) {\n        const type = typeof realVal;\n        switch (typeof realVal) {\n            case \"object\":\n            case \"function\": {\n                // \"object\", \"function\", null\n                if (realVal === null)\n                    return null;\n                const proto = Object.getPrototypeOf(realVal);\n                if (!proto)\n                    return ObjectDef;\n                let typeDef = protoMap.get(proto);\n                if (typeDef !== undefined)\n                    return typeDef; // Null counts to! So the caching of Array.prototype also counts.\n                const toStringTag = getToStringTag(realVal);\n                const entry = Object.entries(typeDefs).find(([typeName, typeDef]) => { var _a, _b; return (_b = (_a = typeDef === null || typeDef === void 0 ? void 0 : typeDef.test) === null || _a === void 0 ? void 0 : _a.call(typeDef, realVal, toStringTag)) !== null && _b !== void 0 ? _b : typeName === toStringTag; });\n                typeDef = entry === null || entry === void 0 ? void 0 : entry[1];\n                if (!typeDef) {\n                    typeDef = Array.isArray(realVal)\n                        ? null\n                        : typeof realVal === \"function\"\n                            ? typeDefs.function || null\n                            : ObjectDef;\n                }\n                protoMap.set(proto, typeDef);\n                return typeDef;\n            }\n            default:\n                return typeDefs[type];\n        }\n    }\n}\n","export const BisonBinaryTypes = {\n    Blob: {\n        test: (blob, toStringTag) => toStringTag === \"Blob\",\n        replace: (blob, altChannel) => {\n            const i = altChannel.length;\n            altChannel.push(blob);\n            return {\n                $t: \"Blob\",\n                mimeType: blob.type,\n                i,\n            };\n        },\n        revive: ({ i, mimeType }, altChannel) => new Blob([altChannel[i]], { type: mimeType }),\n    },\n};\n","export default {\n    number: {\n        replace: (num) => {\n            switch (true) {\n                case isNaN(num):\n                    return { $t: \"number\", v: \"NaN\" };\n                case num === Infinity:\n                    return { $t: \"number\", v: \"Infinity\" };\n                case num === -Infinity:\n                    return { $t: \"number\", v: \"-Infinity\" };\n                default:\n                    return num;\n            }\n        },\n        revive: ({ v }) => Number(v),\n    },\n};\n","const bigIntDef = {\n    bigint: {\n        replace: (realVal) => {\n            return { $t: \"bigint\", v: \"\" + realVal };\n        },\n        revive: (obj) => BigInt(obj.v),\n    },\n};\nexport default bigIntDef;\n","export default {\n    Date: {\n        replace: (date) => ({\n            $t: \"Date\",\n            v: isNaN(date.getTime()) ? \"NaN\" : date.toISOString(),\n        }),\n        revive: ({ v }) => new Date(v === \"NaN\" ? NaN : Date.parse(v)),\n    },\n};\n","export default {\n    Set: {\n        replace: (set) => ({\n            $t: \"Set\",\n            v: Array.from(set.entries()),\n        }),\n        revive: ({ v }) => new Set(v),\n    },\n};\n","export default {\n    Map: {\n        replace: (map) => ({\n            $t: \"Map\",\n            v: Array.from(map.entries()),\n        }),\n        revive: ({ v }) => new Map(v),\n    },\n};\n","export const _global = typeof globalThis !== \"undefined\" // All modern environments (node, bun, deno, browser, workers, webview etc)\n    ? globalThis\n    : typeof self !== \"undefined\" // Older browsers, workers, webview, window etc\n        ? self\n        : typeof global !== \"undefined\" // Older versions of node\n            ? global\n            : undefined; // Unsupported environment. No idea to return 'this' since we are in a module or a function scope anyway.\n","import { _global } from \"../../common/_global.js\";\nexport default [\n    \"Int8Array\",\n    \"Uint8Array\",\n    \"Uint8ClampedArray\",\n    \"Int16Array\",\n    \"Uint16Array\",\n    \"Int32Array\",\n    \"Uint32Array\",\n    \"Float32Array\",\n    \"Float64Array\",\n    \"DataView\",\n    \"BigInt64Array\",\n    \"BigUint64Array\",\n].reduce((specs, typeName) => ({\n    ...specs,\n    [typeName]: {\n        // Replace passes the the typed array into $t, buffer so that\n        // the ArrayBuffer typedef takes care of further handling of the buffer:\n        // {$t:\"Uint8Array\",buffer:{$t:\"ArrayBuffer\",idx:0}}\n        // CHANGED ABOVE! Now shortcutting that for more sparse format of the typed arrays\n        // to contain the b64 property directly.\n        replace: (a, _, typeDefs) => {\n            const result = {\n                $t: typeName,\n                v: typeDefs.ArrayBuffer.replace(a.byteOffset === 0 && a.byteLength === a.buffer.byteLength\n                    ? a.buffer\n                    : a.buffer.slice(a.byteOffset, a.byteOffset + a.byteLength), _, typeDefs).v,\n            };\n            return result;\n        },\n        revive: ({ v }, _, typeDefs) => {\n            const TypedArray = _global[typeName];\n            return (TypedArray &&\n                new TypedArray(typeDefs.ArrayBuffer.revive({ v }, _, typeDefs)));\n        },\n    },\n}), {});\n","import { b64decode, b64encode } from \"./base64.js\";\nexport function b64LexEncode(b) {\n    return b64ToLex(b64encode(b));\n}\nexport function b64LexDecode(b64Lex) {\n    return b64decode(lexToB64(b64Lex));\n}\nexport function b64ToLex(base64) {\n    var encoded = \"\";\n    for (var i = 0, length = base64.length; i < length; i++) {\n        encoded += ENCODE_TABLE[base64[i]];\n    }\n    return encoded;\n}\nexport function lexToB64(base64lex) {\n    // only accept string input\n    if (typeof base64lex !== \"string\") {\n        throw new Error(\"invalid decoder input: \" + base64lex);\n    }\n    var base64 = \"\";\n    for (var i = 0, length = base64lex.length; i < length; i++) {\n        base64 += DECODE_TABLE[base64lex[i]];\n    }\n    return base64;\n}\nconst DECODE_TABLE = {\n    \"-\": \"=\",\n    \"0\": \"A\",\n    \"1\": \"B\",\n    \"2\": \"C\",\n    \"3\": \"D\",\n    \"4\": \"E\",\n    \"5\": \"F\",\n    \"6\": \"G\",\n    \"7\": \"H\",\n    \"8\": \"I\",\n    \"9\": \"J\",\n    A: \"K\",\n    B: \"L\",\n    C: \"M\",\n    D: \"N\",\n    E: \"O\",\n    F: \"P\",\n    G: \"Q\",\n    H: \"R\",\n    I: \"S\",\n    J: \"T\",\n    K: \"U\",\n    L: \"V\",\n    M: \"W\",\n    N: \"X\",\n    O: \"Y\",\n    P: \"Z\",\n    Q: \"a\",\n    R: \"b\",\n    S: \"c\",\n    T: \"d\",\n    U: \"e\",\n    V: \"f\",\n    W: \"g\",\n    X: \"h\",\n    Y: \"i\",\n    Z: \"j\",\n    _: \"k\",\n    a: \"l\",\n    b: \"m\",\n    c: \"n\",\n    d: \"o\",\n    e: \"p\",\n    f: \"q\",\n    g: \"r\",\n    h: \"s\",\n    i: \"t\",\n    j: \"u\",\n    k: \"v\",\n    l: \"w\",\n    m: \"x\",\n    n: \"y\",\n    o: \"z\",\n    p: \"0\",\n    q: \"1\",\n    r: \"2\",\n    s: \"3\",\n    t: \"4\",\n    u: \"5\",\n    v: \"6\",\n    w: \"7\",\n    x: \"8\",\n    y: \"9\",\n    z: \"+\",\n    \"|\": \"/\",\n};\nconst ENCODE_TABLE = {};\nfor (const c of Object.keys(DECODE_TABLE)) {\n    ENCODE_TABLE[DECODE_TABLE[c]] = c;\n}\n","import { b64LexDecode, b64LexEncode } from \"../../common/b64lex.js\";\nexport default {\n    ArrayBuffer: {\n        replace: (ab) => ({\n            $t: \"ArrayBuffer\",\n            v: b64LexEncode(ab),\n        }),\n        revive: ({ v }) => {\n            const ba = b64LexDecode(v);\n            return ba.buffer.byteLength === ba.byteLength\n                ? ba.buffer\n                : ba.buffer.slice(ba.byteOffset, ba.byteOffset + ba.byteLength);\n        },\n    },\n};\n","export class FakeBlob {\n    constructor(buf, type) {\n        this.buf = buf;\n        this.type = type;\n    }\n}\n","export function readBlobSync(b) {\n    const req = new XMLHttpRequest();\n    req.overrideMimeType(\"text/plain; charset=x-user-defined\");\n    req.open(\"GET\", URL.createObjectURL(b), false); // Sync\n    req.send();\n    if (req.status !== 200 && req.status !== 0) {\n        throw new Error(\"Bad Blob access: \" + req.status);\n    }\n    return req.responseText;\n}\n","export function string2ArrayBuffer(str) {\n    const array = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; ++i) {\n        array[i] = str.charCodeAt(i); // & 0xff;\n    }\n    return array.buffer;\n}\nexport function arrayBuffer2String(buf) {\n    // TODO: Optimize\n    return new Uint8Array(buf).reduce((s, byte) => s + String.fromCharCode(byte), \"\");\n}\n","import { b64decode, b64encode } from \"../../common/base64.js\";\nimport { FakeBlob } from \"../FakeBlob.js\";\nimport { readBlobSync } from \"../readBlobSync.js\";\nimport { string2ArrayBuffer } from \"../string2ArrayBuffer.js\";\nexport default {\n    Blob: {\n        test: (blob, toStringTag) => toStringTag === \"Blob\" || blob instanceof FakeBlob,\n        replace: (blob) => ({\n            $t: \"Blob\",\n            v: blob instanceof FakeBlob\n                ? b64encode(blob.buf)\n                : b64encode(string2ArrayBuffer(readBlobSync(blob))),\n            type: blob.type,\n        }),\n        revive: ({ type, v }) => {\n            const ab = b64decode(v);\n            return typeof Blob !== undefined\n                ? new Blob([ab])\n                : new FakeBlob(ab.buffer, type);\n        },\n    },\n};\n","import numberDef from \"../types/number.js\";\nimport bigintDef from \"../types/bigint.js\";\nimport DateDef from \"../types/Date.js\";\nimport SetDef from \"../types/Set.js\";\nimport MapDef from \"../types/Map.js\";\nimport TypedArraysDefs from \"../types/TypedArray.js\";\nimport ArrayBufferDef from \"../types/ArrayBuffer.js\";\nimport BlobDef from \"../types/Blob.js\";\nconst builtin = {\n    ...numberDef,\n    ...bigintDef,\n    ...DateDef,\n    ...SetDef,\n    ...MapDef,\n    ...TypedArraysDefs,\n    ...ArrayBufferDef,\n    ...BlobDef, // Should be moved to another preset for DOM types (or universal? since it supports node as well with FakeBlob)\n};\nexport default builtin;\n","import { BisonBinaryTypes } from \"./BisonBinaryTypes.js\";\nimport builtin from \"./presets/builtin.js\";\nimport { TypesonSimplified } from \"./TypesonSimplified.js\";\nexport function Bison(...typeDefsInputs) {\n    const tson = TypesonSimplified(builtin, BisonBinaryTypes, ...typeDefsInputs);\n    return {\n        toBinary(value) {\n            const [blob, json] = this.stringify(value);\n            const lenBuf = new ArrayBuffer(4);\n            new DataView(lenBuf).setUint32(0, blob.size);\n            return new Blob([lenBuf, blob, json]);\n        },\n        stringify(value) {\n            const binaries = [];\n            const json = tson.stringify(value, binaries);\n            const blob = new Blob(binaries.map((b) => {\n                const lenBuf = new ArrayBuffer(4);\n                new DataView(lenBuf).setUint32(0, \"byteLength\" in b ? b.byteLength : b.size);\n                return new Blob([lenBuf, b]);\n            }));\n            return [blob, json];\n        },\n        async parse(json, binData) {\n            let pos = 0;\n            const arrayBuffers = [];\n            const buf = await readBlobBinary(binData);\n            const view = new DataView(buf);\n            while (pos < buf.byteLength) {\n                const len = view.getUint32(pos);\n                pos += 4;\n                const ab = buf.slice(pos, pos + len);\n                pos += len;\n                arrayBuffers.push(ab);\n            }\n            return tson.parse(json, arrayBuffers);\n        },\n        async fromBinary(blob) {\n            const len = new DataView(await readBlobBinary(blob.slice(0, 4))).getUint32(0);\n            const binData = blob.slice(4, len + 4);\n            const json = await readBlob(blob.slice(len + 4));\n            return await this.parse(json, binData);\n        },\n    };\n}\nexport function readBlob(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onabort = (ev) => reject(new Error(\"file read aborted\"));\n        reader.onerror = (ev) => reject(ev.target.error);\n        reader.onload = (ev) => resolve(ev.target.result);\n        reader.readAsText(blob);\n    });\n}\nexport function readBlobBinary(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onabort = (ev) => reject(new Error(\"file read aborted\"));\n        reader.onerror = (ev) => reject(ev.target.error);\n        reader.onload = (ev) => resolve(ev.target.result);\n        reader.readAsArrayBuffer(blob);\n    });\n}\n","/** The undefined type is not part of builtin but can be manually added.\n * The reason for supporting undefined is if the following object should be revived correctly:\n *\n *    {foo: undefined}\n *\n * Without including this typedef, the revived object would just be {}.\n * If including this typedef, the revived object would be {foo: undefined}.\n */\nexport default {\n    undefined: {\n        replace: () => ({\n            $t: \"undefined\"\n        }),\n        revive: () => undefined,\n    },\n};\n","import { b64decode, b64encode } from \"../../common/base64.js\";\nimport { readBlobSync } from \"../readBlobSync.js\";\nimport { string2ArrayBuffer } from \"../string2ArrayBuffer.js\";\nexport default {\n    File: {\n        test: (file, toStringTag) => toStringTag === \"File\",\n        replace: (file) => ({\n            $t: \"File\",\n            v: b64encode(string2ArrayBuffer(readBlobSync(file))),\n            type: file.type,\n            name: file.name,\n            lastModified: new Date(file.lastModified).toISOString(),\n        }),\n        revive: ({ type, v, name, lastModified }) => {\n            const ab = b64decode(v);\n            return new File([ab], name, {\n                type,\n                lastModified: new Date(lastModified).getTime(),\n            });\n        },\n    },\n};\n","import { TypesonSimplified } from 'dreambase-library/dist/typeson-simplified/TypesonSimplified';\nimport { Bison } from 'dreambase-library/dist/typeson-simplified/Bison';\nimport undefinedDef from 'dreambase-library/dist/typeson-simplified/types/undefined.js';\nimport tsonBuiltinDefs from 'dreambase-library/dist/typeson-simplified/presets/builtin.js';\nimport { TypeDefSet } from 'dreambase-library/dist/typeson-simplified/TypeDefSet';\nimport { PropModSpec, PropModification } from 'dexie';\nimport FileDef from \"dreambase-library/dist/typeson-simplified/types/File.js\";\n\n// Since server revisions are stored in bigints, we need to handle clients without\n// bigint support to not fail when serverRevision is passed over to client.\n// We need to not fail when reviving it and we need to somehow store the information.\n// Since the revived version will later on be put into indexedDB we have another\n// issue: When reading it back from indexedDB we will get a poco object that we\n// cannot replace correctly when sending it to server. So we will also need\n// to do an explicit workaround in the protocol where a bigint is supported.\n// The workaround should be there regardless if browser supports BigInt or not, because\n// the serverRev might have been stored in IDB before the browser was upgraded to support bigint.\n//\n// if (typeof serverRev.rev !== \"bigint\")\n//   if (hasBigIntSupport)\n//     serverRev.rev = bigIntDef.bigint.revive(server.rev)\n//   else\n//     serverRev.rev = new FakeBigInt(server.rev)\nexport const hasBigIntSupport =\n  typeof BigInt === 'function' && typeof BigInt(0) === 'bigint';\n\nfunction getValueOfBigInt(x: bigint | FakeBigInt | string) {\n  if (typeof x === 'bigint') {\n    return x;\n  }\n  if (hasBigIntSupport) {\n    return typeof x === 'string' ? BigInt(x) : BigInt(x.v);\n  } else {\n    return typeof x === 'string' ? Number(x) : Number(x.v);\n  }\n}\n\nexport function compareBigInts(\n  a: bigint | FakeBigInt | string,\n  b: bigint | FakeBigInt | string\n) {\n  const valA = getValueOfBigInt(a);\n  const valB = getValueOfBigInt(b);\n  return valA < valB ? -1 : valA > valB ? 1 : 0;\n}\nexport class FakeBigInt {\n  v: string;\n  toString() {\n    return this.v;\n  }\n  constructor(value: string) {\n    this.v = value;\n  }\n}\n\nconst bigIntDef = hasBigIntSupport\n  ? {}\n  : {\n      bigint: {\n        test: (val: any) => val instanceof FakeBigInt,\n        replace: (fakeBigInt: any) => {\n          return {\n            $t: 'bigint',\n            ...fakeBigInt,\n          };\n        },\n        revive: ({ v }: { $t: 'bigint'; v: string }) =>\n          new FakeBigInt(v) as any as bigint,\n      },\n    };\n\nconst defs: TypeDefSet = {\n  ...undefinedDef,\n  ...bigIntDef,\n  ...FileDef,\n  PropModification: {\n    test: (val: any) => val instanceof PropModification,\n    replace: (propModification: any) => {\n      return {\n        $t: 'PropModification',\n        ...propModification['@@propmod'],\n      };\n    },\n    revive: ({\n      $t, // strip '$t'\n      ...propModSpec // keep the rest\n    }: {\n      $t: 'PropModification';\n    } & PropModSpec) => new PropModification(propModSpec),\n  },\n};\n\nexport const TSON = TypesonSimplified(tsonBuiltinDefs, defs);\n\nexport const BISON = Bison(defs);\n","export class HttpError extends Error {\n  httpStatus: number;\n  constructor(\n    res: Response,\n    message?: string)\n  {\n    super(message || `${res.status} ${res.statusText}`);\n    this.httpStatus = res.status;\n  }\n\n  get name() {\n    return \"HttpError\";\n  }\n}\n","import Dexie, { DBCoreSchema } from 'dexie';\nimport {\n  DBInsertOperation,\n  DBOperation,\n  DBOperationsSet,\n  DBOpPrimaryKey,\n} from 'dexie-cloud-common';\nimport { UserLogin } from '../db/entities/UserLogin';\n\nexport function encodeIdsForServer(\n  schema: DBCoreSchema,\n  currentUser: UserLogin,\n  changes: DBOperationsSet\n): DBOperationsSet {\n  const rv: DBOperationsSet = [];\n  for (let change of changes) {\n    const { table, muts } = change;\n    const tableSchema = schema.tables.find((t) => t.name === table);\n    if (!tableSchema)\n      throw new Error(\n        `Internal error: table ${table} not found in DBCore schema`\n      );\n    const { primaryKey } = tableSchema;\n    let changeClone = change;\n    muts.forEach((mut, mutIndex) => {\n      const rewriteValues =\n        !primaryKey.outbound &&\n        (mut.type === 'upsert' || mut.type === 'insert');\n      mut.keys.forEach((key, keyIndex) => {\n        if (Array.isArray(key)) {\n          // Server only support string keys. Dexie Cloud client support strings or array of strings.\n          if (changeClone === change)\n            changeClone = cloneChange(change, rewriteValues);\n          const mutClone = changeClone.muts[mutIndex];\n          const rewrittenKey = JSON.stringify(key);\n          mutClone.keys[keyIndex] = rewrittenKey;\n          /* Bug (#1777)\n            We should not rewrite values. It will fail because the key is array and the value is string.\n            Only the keys should be rewritten and it's already done on the server.\n            We should take another round of revieweing how key transformations are being done between\n            client and server and let the server do the key transformations entirely instead now that\n            we have the primary key schema on the server making it possible to do so.\n            if (rewriteValues) {\n            Dexie.setByKeyPath(\n              (mutClone as DBInsertOperation).values[keyIndex],\n              primaryKey.keyPath!,\n              rewrittenKey\n            );\n          }*/\n        } else if (key[0] === '#') {\n          // Private ID - translate!\n          if (changeClone === change)\n            changeClone = cloneChange(change, rewriteValues);\n          const mutClone = changeClone.muts[mutIndex];\n          if (!currentUser.isLoggedIn)\n            throw new Error(\n              `Internal error: Cannot sync private IDs before authenticated`\n            );\n          const rewrittenKey = `${key}:${currentUser.userId}`;\n          mutClone.keys[keyIndex] = rewrittenKey;\n          if (rewriteValues) {\n            Dexie.setByKeyPath(\n              (mutClone as DBInsertOperation).values[keyIndex],\n              primaryKey.keyPath!,\n              rewrittenKey\n            );\n          }\n        }\n      });\n    });\n    rv.push(changeClone);\n  }\n  return rv;\n}\n\nfunction cloneChange(change: DBOperationsSet[number], rewriteValues: boolean) {\n  // clone on demand:\n  return {\n    ...change,\n    muts: rewriteValues\n      ? change.muts.map((m) => {\n          return (m.type === 'insert' || m.type === 'upsert') && m.values\n            ? {\n                ...m,\n                keys: m.keys.slice(),\n                values: m.values.slice(),\n              }\n            : {\n                ...m,\n                keys: m.keys.slice(),\n              };\n        })\n      : change.muts.map((m) => ({ ...m, keys: m.keys.slice() })),\n  };\n}\n","import { DexieCloudDB } from '../db/DexieCloudDB';\n\n// If we get Ratelimit-Limit and Ratelimit-Remaining where Ratelimit-Remaining is below\n// (Ratelimit-Limit / 2), we should delay the next sync by (Ratelimit-Reset / Ratelimit-Remaining)\n// seconds (given that there is a Ratelimit-Reset header).\n\nlet syncRatelimitDelays = new WeakMap<DexieCloudDB, Date>();\n\nexport async function checkSyncRateLimitDelay(db: DexieCloudDB) {\n  const delatMilliseconds = (syncRatelimitDelays.get(db)?.getTime() ?? 0) - Date.now();\n  if (delatMilliseconds > 0) {\n    console.debug(`Stalling sync request ${delatMilliseconds} ms to spare ratelimits`);\n    await new Promise(resolve => setTimeout(resolve, delatMilliseconds));\n  }\n}\n\nexport function updateSyncRateLimitDelays(db: DexieCloudDB, res: Response) {\n  const limit = res.headers.get('Ratelimit-Limit');\n  const remaining = res.headers.get('Ratelimit-Remaining');\n  const reset = res.headers.get('Ratelimit-Reset');\n  if (limit && remaining && reset) {\n    const limitNum = Number(limit);\n    const remainingNum = Math.max(0, Number(remaining));\n    const willResetInSeconds = Number(reset);\n    if (remainingNum < limitNum / 2) {\n      const delay = Math.ceil(willResetInSeconds / (remainingNum + 1));\n      syncRatelimitDelays.set(db, new Date(Date.now() + delay * 1000));\n      console.debug(`Sync ratelimit delay set to ${delay} seconds`);\n    } else {\n      syncRatelimitDelays.delete(db);\n      console.debug(`Sync ratelimit delay cleared`);\n    }\n  }\n}\n","import { DexieCloudDB } from '../db/DexieCloudDB';\nimport { PersistedSyncState } from '../db/entities/PersistedSyncState';\nimport { loadAccessToken } from '../authentication/authenticate';\nimport { BISON, TSON } from '../TSON';\nimport { getSyncableTables } from '../helpers/getSyncableTables';\nimport { BaseRevisionMapEntry } from '../db/entities/BaseRevisionMapEntry';\nimport { HttpError } from '../errors/HttpError';\nimport {\n  DBOperationsSet,\n  DexieCloudSchema,\n  SyncRequest,\n  SyncResponse,\n  YClientMessage,\n} from 'dexie-cloud-common';\nimport { encodeIdsForServer } from './encodeIdsForServer';\nimport { UserLogin } from '../db/entities/UserLogin';\nimport { updateSyncRateLimitDelays } from './ratelimit';\n//import {BisonWebStreamReader} from \"dreambase-library/dist/typeson-simplified/BisonWebStreamReader\";\n\nexport async function syncWithServer(\n  changes: DBOperationsSet,\n  y: YClientMessage[],\n  syncState: PersistedSyncState | undefined,\n  baseRevs: BaseRevisionMapEntry[],\n  db: DexieCloudDB,\n  databaseUrl: string,\n  schema: DexieCloudSchema | null,\n  clientIdentity: string,\n  currentUser: UserLogin\n): Promise<SyncResponse> {\n  //\n  // Push changes to server using fetch\n  //\n  const headers: HeadersInit = {\n    Accept: 'application/json, application/x-bison, application/x-bison-stream',\n    'Content-Type': 'application/tson',\n  };\n  const updatedUser = await loadAccessToken(db);\n  /*\n  if (updatedUser?.license && changes.length > 0) {\n    if (updatedUser.license.status === 'expired') {\n      throw new Error(`License has expired`);\n    }\n    if (updatedUser.license.status === 'deactivated') {\n      throw new Error(`License deactivated`);\n    }\n  }\n  */\n  const accessToken = updatedUser?.accessToken;\n  if (accessToken) {\n    headers.Authorization = `Bearer ${accessToken}`;\n  }\n\n  const syncRequest: SyncRequest = {\n    v: 2,\n    dbID: syncState?.remoteDbId,\n    clientIdentity,\n    schema: schema || {},\n    lastPull: syncState\n      ? {\n          serverRevision: syncState.serverRevision!,\n          yServerRevision: syncState.yServerRevision,\n          realms: syncState.realms,\n          inviteRealms: syncState.inviteRealms,\n        }\n      : undefined,\n    baseRevs,\n    changes: encodeIdsForServer(db.dx.core.schema, currentUser, changes),\n    y,\n  };\n  console.debug('Sync request', syncRequest);\n  db.syncStateChangedEvent.next({\n    phase: 'pushing',\n  });\n  const body = TSON.stringify(syncRequest);\n  const res = await fetch(`${databaseUrl}/sync`, {\n    method: 'post',\n    headers,\n    credentials: 'include', // For Arr Affinity cookie only, for better Rate-Limit counting only.\n    body,\n  });\n  //const contentLength = Number(res.headers.get('content-length'));\n  db.syncStateChangedEvent.next({\n    phase: 'pulling',\n  });\n\n  updateSyncRateLimitDelays(db, res);\n\n  if (!res.ok) {\n    throw new HttpError(res);\n  }\n\n  switch (res.headers.get('content-type')) {\n    case 'application/x-bison':\n      return BISON.fromBinary(await res.blob());\n    case 'application/x-bison-stream': //return BisonWebStreamReader(BISON, res);\n    default:\n    case 'application/json': {\n      const text = await res.text();\n      const syncRes = TSON.parse(text);\n      return syncRes;\n    }\n  }\n}\n","import Dexie from \"dexie\";\n\nexport interface CancelToken {\n  cancelled: boolean;\n}\n\nexport function throwIfCancelled(cancelToken?: CancelToken) {\n  if (cancelToken?.cancelled) throw new Dexie.AbortError(`Operation was cancelled`);\n}\n","/* Need this because navigator.onLine seems to say \"false\" when it is actually online.\n  This function relies initially on navigator.onLine but then uses online and offline events\n  which seem to be more reliable.\n*/\nexport let isOnline = false;\nif (typeof self !== 'undefined' && typeof navigator !== 'undefined') {\n  isOnline = navigator.onLine;\n  self.addEventListener('online', ()=>isOnline = true);\n  self.addEventListener('offline', ()=>isOnline = false);\n}\n","import { DexieCloudDB } from '../db/DexieCloudDB';\nimport { DexieCloudSchema, SyncResponse } from 'dexie-cloud-common';\n\nexport async function updateBaseRevs(db: DexieCloudDB, schema: DexieCloudSchema, latestRevisions: { [table: string]: number; }, serverRev: any) {\n  await db.$baseRevs.bulkPut(\n    Object.keys(schema)\n      .filter((table) => schema[table].markedForSync)\n      .map((tableName) => {\n        const lastClientRevOnPreviousServerRev = latestRevisions[tableName] || 0;\n        return {\n          tableName,\n          clientRev: lastClientRevOnPreviousServerRev + 1,\n          serverRev,\n        };\n      })\n  );\n}\n","import { DBOperationsSet } from 'dexie-cloud-common';\n\nexport function getLatestRevisionsPerTable(\n  clientChangeSet: DBOperationsSet,\n  lastRevisions = {} as { [table: string]: number; }) {\n  for (const { table, muts } of clientChangeSet) {\n    const lastRev = muts.length > 0 ? muts[muts.length - 1].rev : null;\n    lastRevisions[table] = lastRev || lastRevisions[table] || 0;\n  }\n  return lastRevisions;\n}\n","import Dexie, { Table, cmp } from 'dexie';\n\nexport async function bulkUpdate(\n  table: Table,\n  keys: any[],\n  changeSpecs: { [keyPath: string]: any }[]\n) {\n  const objs = await table.bulkGet(keys);\n  const resultKeys: any[] = [];\n  const resultObjs: any[] = [];\n  keys.forEach((key, idx) => {\n    const obj = objs[idx];\n    if (obj) {\n      for (const [keyPath, value] of Object.entries(changeSpecs[idx])) {\n        if (keyPath === table.schema.primKey.keyPath) {\n          if (cmp(value, key) !== 0) {\n            throw new Error(`Cannot change primary key`);\n          }\n        } else {\n          Dexie.setByKeyPath(obj, keyPath, value);\n        }\n      }\n      resultKeys.push(key);\n      resultObjs.push(obj);\n    }\n  });\n  await (table.schema.primKey.keyPath == null\n    ? table.bulkPut(resultObjs, resultKeys)\n    : table.bulkPut(resultObjs));\n}\n","import { DexieCloudDB } from '../db/DexieCloudDB';\nimport Dexie from 'dexie';\nimport { bulkUpdate } from '../helpers/bulkUpdate';\nimport { DBOperationsSet } from 'dexie-cloud-common';\n\nexport async function applyServerChanges(\n  changes: DBOperationsSet<string>,\n  db: DexieCloudDB\n) {\n  console.debug('Applying server changes', changes, Dexie.currentTransaction);\n  for (const { table: tableName, muts } of changes) {\n    const table = db.table(tableName);\n    if (!table) continue; // If server sends changes on a table we don't have, ignore it.\n    const { primaryKey } = table.core.schema;\n    const keyDecoder = (key: string) => {\n      switch (key[0]) {\n        case '[':\n          // Decode JSON array\n          if (key.endsWith(']'))\n            try {\n              // On server, array keys are transformed to JSON string representation\n              return JSON.parse(key);\n            } catch {}\n          return key;\n        case '#':\n          // Decode private ID (do the opposite from what's done in encodeIdsForServer())\n          if (key.endsWith(':' + db.cloud.currentUserId)) {\n            return key.substr(\n              0,\n              key.length - db.cloud.currentUserId.length - 1\n            );\n          }\n          return key;\n        default:\n          return key;\n      }\n    };\n    for (const mut of muts) {\n      const keys = mut.keys.map(keyDecoder);\n      switch (mut.type) {\n        case 'insert':\n          if (primaryKey.outbound) {\n            await table.bulkAdd(mut.values, keys);\n          } else {\n            keys.forEach((key, i) => {\n              // Make sure inbound keys are consistent\n              Dexie.setByKeyPath(mut.values[i], primaryKey.keyPath!, key);\n            });\n            await table.bulkAdd(mut.values);\n          }\n          break;\n        case 'upsert':\n          if (primaryKey.outbound) {\n            await table.bulkPut(mut.values, keys);\n          } else {\n            keys.forEach((key, i) => {\n              // Make sure inbound keys are consistent\n              Dexie.setByKeyPath(mut.values[i], primaryKey.keyPath!, key);\n            });\n            await table.bulkPut(mut.values);\n          }\n          break;\n        case 'modify':\n          if (keys.length === 1) {\n            await table.update(keys[0], mut.changeSpec);\n          } else {\n            await table.where(':id').anyOf(keys).modify(mut.changeSpec);\n          }\n          break;\n        case 'update':\n          await bulkUpdate(table, keys, mut.changeSpecs);\n          break;\n        case 'delete':\n          await table.bulkDelete(keys);\n          break;\n      }\n    }\n  }\n}\n","\nexport const DEXIE_CLOUD_SYNCER_ID = 'dexie-cloud-syncer';\n","import type { Table, YUpdateRow } from 'dexie';\n\nexport function listUpdatesSince(yTable: Table, sinceIncluding: number): Promise<YUpdateRow[]> {\n  return yTable\n    .where('i')\n    .between(sinceIncluding, Infinity, true)\n    .toArray();\n}\n","import type * as Y from 'yjs';\nimport type { DexieCloudDB } from '../db/DexieCloudDB';\n\nexport function $Y(db: DexieCloudDB): typeof Y {\n    const $Y = db.dx._options.Y;\n    if (!$Y) throw new Error('Y library not supplied to Dexie constructor');\n    return $Y as typeof Y;\n}\n\n","import { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { YTable } from \"./YTable\";\n\nexport function getUpdatesTable(db: DexieCloudDB, table: string, ydocProp: string): YTable {\n  const utbl = db.table(table)?.schema.yProps?.find(p => p.prop === ydocProp)?.updatesTable;\n  if (!utbl) throw new Error(`No updatesTable found for ${table}.${ydocProp}`);\n  return db.table(utbl);\n}\n","import { cmp, DexieYProvider, InsertType, YSyncState, YUpdateRow } from 'dexie';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { YServerMessage } from 'dexie-cloud-common';\nimport { DEXIE_CLOUD_SYNCER_ID } from '../sync/DEXIE_CLOUD_SYNCER_ID';\nimport { getUpdatesTable } from './getUpdatesTable';\n\nexport async function applyYServerMessages(\n  yMessages: YServerMessage[],\n  db: DexieCloudDB\n): Promise<{\n  receivedUntils: { [yTable: string]: number };\n  resyncNeeded: boolean;\n  yServerRevision?: string\n}> {\n  const receivedUntils: { [yTable: string]: number } = {};\n  let resyncNeeded = false;\n  let yServerRevision: string | undefined;\n  for (const m of yMessages) {\n    switch (m.type) {\n      case 'u-s': {\n        const utbl = getUpdatesTable(db, m.table, m.prop);\n        receivedUntils[utbl.name] = await utbl.add({\n          k: m.k,\n          u: m.u,\n        } satisfies InsertType<YUpdateRow, 'i'>);\n        break;\n      }\n      case 'u-ack': {\n        const utbl = getUpdatesTable(db, m.table, m.prop);\n        await db.transaction('rw', utbl, async (tx) => {\n          let syncer = (await tx\n            .table(utbl.name)\n            .get(DEXIE_CLOUD_SYNCER_ID)) as YSyncState | undefined;\n          await tx.table(utbl.name).put({\n            ...(syncer || { i: DEXIE_CLOUD_SYNCER_ID }),\n            unsentFrom: Math.max(syncer?.unsentFrom || 1, m.i + 1),\n          } as YSyncState);\n        });\n        break;\n      }\n      case 'u-reject': {\n        // Acces control or constraint rejected the update.\n        // We delete it. It's not going to be sent again.\n        // What's missing is a way to notify consumers, such as Tiptap editor, that the update was rejected.\n        // This is only an issue when the document is open. We could find the open document and\n        // in a perfect world, we should send a reverse update to the open document to undo the change.\n        // See my question in https://discuss.yjs.dev/t/generate-an-inverse-update/2765\n        console.debug(`Y update rejected. Deleting it.`);\n        const utbl = getUpdatesTable(db, m.table, m.prop);\n        // Delete the rejected update and all local updates since (avoid holes in the CRDT)\n        // and destroy it's open document if there is one.\n        const primaryKey = (await utbl.get(m.i))?.k;\n        if (primaryKey != null) {\n          await db.transaction('rw', utbl, (tx) => {\n            // @ts-ignore\n            tx.idbtrans._rejecting_y_ypdate = true; // Inform ydoc triggers that we delete because of a rejection and not GC\n            return utbl\n              .where('i')\n              .aboveOrEqual(m.i)\n              .filter(\n                (u) => cmp(u.k, primaryKey) === 0 && ((u.f || 0) & 1) === 1\n              )\n              .delete();\n          });\n          // Destroy active doc\n          const activeDoc = DexieYProvider.getDocCache(db.dx).find(\n            m.table,\n            primaryKey,\n            m.prop\n          );\n          if (activeDoc) activeDoc.destroy(); // Destroy the document so that editors don't continue to work on it\n        }\n        break;\n      }\n      case 'in-sync': {\n        const doc = DexieYProvider.getDocCache(db.dx).find(\n          m.table,\n          m.k,\n          m.prop\n        );\n        if (doc && !doc.isSynced) {\n          doc.emit('sync', [true]);\n        }\n        break;\n      }\n      case 'y-complete-sync-done': {\n        yServerRevision = m.yServerRev;\n        break;\n      }\n      case 'outdated-server-rev':\n        resyncNeeded = true;\n        break;\n    }\n  }\n\n  return {\n    receivedUntils,\n    resyncNeeded,\n    yServerRevision\n  };\n}\n","import {\n  asyncIterablePipeline,\n  consumeChunkedBinaryStream,\n  getFetchResponseBodyGenerator,\n} from 'dexie-cloud-common';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { PersistedSyncState } from '../db/entities/PersistedSyncState';\nimport { TSON } from '../TSON';\nimport { loadAccessToken } from '../authentication/authenticate';\nimport {\n  Decoder,\n  readUint8,\n  readVarString,\n  readAny,\n  readVarUint8Array,\n  hasContent,\n} from 'lib0/decoding';\nimport { getUpdatesTable } from './getUpdatesTable';\nimport Dexie, { InsertType, YUpdateRow } from 'dexie';\n\nconst BINSTREAM_TYPE_REALMID = 1;\nconst BINSTREAM_TYPE_TABLE_AND_PROP = 2;\nconst BINSTREAM_TYPE_DOCUMENT = 3;\n\nexport async function downloadYDocsFromServer(\n  db: DexieCloudDB,\n  databaseUrl: string,\n  { yDownloadedRealms, realms }: PersistedSyncState\n) {\n  if (\n    yDownloadedRealms &&\n    realms &&\n    realms.every((realmId) => yDownloadedRealms[realmId] === '*')\n  ) {\n    return; // Already done!\n  }\n  console.debug('Downloading Y.Docs from added realms');\n  const user = await loadAccessToken(db);\n  const headers: HeadersInit = {\n    'Content-Type': 'application/json',\n    Accept: 'application/octet-stream',\n  };\n  if (user) {\n    headers.Authorization = `Bearer ${user.accessToken}`;\n  }\n  const res = await fetch(`${databaseUrl}/y/download`, {\n    body: TSON.stringify({ downloadedRealms: yDownloadedRealms || {} }),\n    method: 'POST',\n    headers,\n    credentials: 'include',\n  });\n  if (!res.ok) {\n    throw new Error(\n      `Failed to download Yjs documents from server. Status: ${res.status}`\n    );\n  }\n  await asyncIterablePipeline(\n    getFetchResponseBodyGenerator(res),\n    consumeChunkedBinaryStream,\n    consumeDownloadChunks\n  );\n\n  async function* consumeDownloadChunks(chunks: AsyncIterable<Uint8Array>) {\n    let currentRealmId: string | null = null;\n    let currentTable: string | null = null;\n    let currentProp: string | null = null;\n    let docsToInsert: InsertType<YUpdateRow, 'i'>[] = [];\n\n    async function storeCollectedDocs(completedRealm: boolean) {\n      const lastDoc = docsToInsert[docsToInsert.length - 1];\n      if (docsToInsert.length > 0) {\n        if (!currentRealmId || !currentTable || !currentProp) {\n          throw new Error(`Protocol error from ${databaseUrl}/y/download`);\n        }\n        const yTable = getUpdatesTable(db, currentTable, currentProp);\n        await yTable.bulkAdd(docsToInsert);\n        docsToInsert = [];\n      }\n      if (\n        currentRealmId &&\n        ((currentTable && currentProp && lastDoc) || completedRealm)\n      ) {\n        await db.$syncState.update('syncState', (syncState: PersistedSyncState) => {\n          const yDownloadedRealms = syncState.yDownloadedRealms || {};\n          yDownloadedRealms[currentRealmId!] = completedRealm\n            ? '*'\n            : {\n                tbl: currentTable!,\n                prop: currentProp!,\n                key: lastDoc.k!,\n              };\n          syncState.yDownloadedRealms = yDownloadedRealms;\n        });\n      }\n    }\n\n    try {\n      for await (const chunk of chunks) {\n        const decoder = new Decoder(chunk);\n        while (hasContent(decoder)) {\n          switch (readUint8(decoder)) {\n            case BINSTREAM_TYPE_REALMID:\n              await storeCollectedDocs(true);\n              currentRealmId = readVarString(decoder);\n              break;\n            case BINSTREAM_TYPE_TABLE_AND_PROP:\n              await storeCollectedDocs(false); // still on same realm\n              currentTable = readVarString(decoder);\n              currentProp = readVarString(decoder);\n              break;\n            case BINSTREAM_TYPE_DOCUMENT: {\n              const k = readAny(decoder);\n              const u = readVarUint8Array(decoder);\n              docsToInsert.push({\n                k,\n                u,\n              });\n              break;\n            }\n          }\n        }\n        await storeCollectedDocs(false); // Chunk full - migth still be on same realm\n      }\n      await storeCollectedDocs(true); // Everything downloaded - finalize last downloaded realm to \"*\"\n    } catch (error) {\n      if (!(error instanceof Dexie.DexieError)) {\n        // Network error might have happened.\n        // Store what we've collected so far:\n        await storeCollectedDocs(false);\n      }\n      throw error;\n    }\n  }\n}\n","import { __asyncValues } from \"tslib\";\nexport async function asyncIterablePipeline(source, ...stages) {\n    var _a, e_1, _b, _c;\n    // Chain generators by sending outdata from one to another\n    let result = source(); // Start with the source generator\n    for (let i = 0; i < stages.length; i++) {\n        result = stages[i](result); // Pass on the result to next generator\n    }\n    try {\n        // Start running the machine. If the last stage is a sink, it will consume the data and never emit anything\n        // to us here...\n        for (var _d = true, result_1 = __asyncValues(result), result_1_1; result_1_1 = await result_1.next(), _a = result_1_1.done, !_a; _d = true) {\n            _c = result_1_1.value;\n            _d = false;\n            const chunk = _c;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (!_d && !_a && (_b = result_1.return)) await _b.call(result_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\n","import { __asyncGenerator, __await } from \"tslib\";\nexport function getFetchResponseBodyGenerator(res) {\n    return function () {\n        return __asyncGenerator(this, arguments, function* () {\n            if (!res.body)\n                throw new Error(\"Response body is not readable\");\n            const reader = res.body.getReader();\n            try {\n                while (true) {\n                    const { done, value } = yield __await(reader.read());\n                    if (done)\n                        return yield __await(void 0);\n                    yield yield __await(value);\n                }\n            }\n            finally {\n                reader.releaseLock();\n            }\n        });\n    };\n}\n","import { getMutationTable } from '../helpers/getMutationTable';\nimport { getSyncableTables } from '../helpers/getSyncableTables';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { listSyncifiedChanges } from './listSyncifiedChanges';\nimport { getTablesToSyncify } from './getTablesToSyncify';\nimport { listClientChanges } from './listClientChanges';\nimport { syncWithServer } from './syncWithServer';\nimport { modifyLocalObjectsWithNewUserId } from './modifyLocalObjectsWithNewUserId';\nimport { throwIfCancelled } from '../helpers/CancelToken';\nimport { DexieCloudOptions } from '../DexieCloudOptions';\nimport { BaseRevisionMapEntry } from '../db/entities/BaseRevisionMapEntry';\nimport { getTableFromMutationTable } from '../helpers/getTableFromMutationTable';\nimport {\n  applyOperations,\n  DBKeyMutationSet,\n  DBOperationsSet,\n  DexieCloudSchema,\n  randomString,\n  subtractChanges,\n  SyncResponse,\n  toDBOperationSet,\n} from 'dexie-cloud-common';\nimport { PersistedSyncState } from '../db/entities/PersistedSyncState';\nimport { isOnline } from './isOnline';\nimport { updateBaseRevs } from './updateBaseRevs';\nimport { getLatestRevisionsPerTable } from './getLatestRevisionsPerTable';\nimport { applyServerChanges } from './applyServerChanges';\nimport { checkSyncRateLimitDelay } from './ratelimit';\nimport { listYClientMessagesAndStateVector } from '../yjs/listYClientMessagesAndStateVector';\nimport { applyYServerMessages } from '../yjs/applyYMessages';\nimport { updateYSyncStates } from '../yjs/updateYSyncStates';\nimport { downloadYDocsFromServer } from '../yjs/downloadYDocsFromServer';\nimport { UpdateSpec } from 'dexie';\n\nexport const CURRENT_SYNC_WORKER = 'currentSyncWorker';\n\nexport interface SyncOptions {\n  isInitialSync?: boolean;\n  cancelToken?: { cancelled: boolean };\n  justCheckIfNeeded?: boolean;\n  retryImmediatelyOnFetchError?: boolean;\n  purpose?: 'pull' | 'push';\n}\n\nexport function sync(\n  db: DexieCloudDB,\n  options: DexieCloudOptions,\n  schema: DexieCloudSchema,\n  syncOptions?: SyncOptions\n): Promise<boolean> {\n  return _sync(db, options, schema, syncOptions)\n    .then((result) => {\n      if (!syncOptions?.justCheckIfNeeded) { // && syncOptions?.purpose !== 'push') {\n        db.syncStateChangedEvent.next({\n          phase: 'in-sync',\n        });\n      }\n      return result;\n    })\n    .catch(async (error: any) => {\n      if (syncOptions?.justCheckIfNeeded) return Promise.reject(error); // Just rethrow.\n      console.debug('Error from _sync', {\n        isOnline,\n        syncOptions,\n        error,\n      });\n      if (\n        isOnline &&\n        syncOptions?.retryImmediatelyOnFetchError &&\n        error?.name === 'TypeError' &&\n        /fetch/.test(error?.message)\n      ) {\n        db.syncStateChangedEvent.next({\n          phase: 'error',\n          error,\n        });\n        // Retry again in 500 ms but if it fails again, don't retry.\n        await new Promise((resolve) => setTimeout(resolve, 500));\n        return await sync(db, options, schema, {\n          ...syncOptions,\n          retryImmediatelyOnFetchError: false,\n        });\n      }\n      // Make sure that no matter whether sync() explodes or not,\n      // always update the timestamp. Also store the error.\n      await db.$syncState.update('syncState', {\n        timestamp: new Date(),\n        error: '' + error,\n      });\n      db.syncStateChangedEvent.next({\n        phase: isOnline ? 'error' : 'offline',\n        error: new Error('' + error?.message || error),\n      });\n      return Promise.reject(error);\n    });\n}\n\nasync function _sync(\n  db: DexieCloudDB,\n  options: DexieCloudOptions,\n  schema: DexieCloudSchema,\n  { isInitialSync, cancelToken, justCheckIfNeeded, purpose }: SyncOptions = {\n    isInitialSync: false,\n  }\n): Promise<boolean> {\n  if (!justCheckIfNeeded) {\n    console.debug('SYNC STARTED', { isInitialSync, purpose });\n  }\n  if (!db.cloud.options?.databaseUrl)\n    throw new Error(\n      `Internal error: sync must not be called when no databaseUrl is configured`\n    );\n  const { databaseUrl } = options;\n  const currentUser = await db.getCurrentUser(); // Keep same value across entire sync flow:\n  const tablesToSync = currentUser.isLoggedIn ? getSyncableTables(db) : [];\n\n  const mutationTables = tablesToSync.map((tbl) =>\n    db.table(getMutationTable(tbl.name))\n  );\n\n  // If this is not the initial sync,\n  // go through tables that were previously not synced but should now be according to\n  // logged in state and the sync table whitelist in db.cloud.options.\n  //\n  // Prepare for syncification by modifying locally unauthorized objects:\n  //\n  const persistedSyncState = await db.getPersistedSyncState();\n  const readyForSyncification = currentUser.isLoggedIn;\n  const tablesToSyncify = readyForSyncification\n    ? getTablesToSyncify(db, persistedSyncState)\n    : [];\n  throwIfCancelled(cancelToken);\n  const doSyncify = tablesToSyncify.length > 0;\n\n  if (doSyncify) {\n    if (justCheckIfNeeded) return true;\n    //console.debug('sync doSyncify is true');\n    await db.transaction('rw', tablesToSyncify, async (tx) => {\n      // @ts-ignore\n      tx.idbtrans.disableChangeTracking = true;\n      // @ts-ignore\n      tx.idbtrans.disableAccessControl = true; // TODO: Take care of this flag in access control middleware!\n      await modifyLocalObjectsWithNewUserId(\n        tablesToSyncify,\n        currentUser,\n        persistedSyncState?.realms\n      );\n    });\n    throwIfCancelled(cancelToken);\n  }\n  //\n  // List changes to sync\n  //\n  const [clientChangeSet, syncState, baseRevs, {yMessages, lastUpdateIds}] = await db.transaction(\n    'r',\n    db.tables,\n    async () => {\n      const syncState = await db.getPersistedSyncState();\n      const baseRevs = await db.$baseRevs.toArray();\n      let clientChanges = await listClientChanges(mutationTables, db);\n      const yResults = await listYClientMessagesAndStateVector(db, tablesToSync);\n      throwIfCancelled(cancelToken);\n      if (doSyncify) {\n        const alreadySyncedRealms = [\n          ...(persistedSyncState?.realms || []),\n          ...(persistedSyncState?.inviteRealms || []),\n        ];\n        const syncificationInserts = await listSyncifiedChanges(\n          tablesToSyncify,\n          currentUser,\n          schema!,\n          alreadySyncedRealms\n        );\n        throwIfCancelled(cancelToken);\n        clientChanges = clientChanges.concat(syncificationInserts);\n        return [clientChanges, syncState, baseRevs, yResults];\n      }\n      return [clientChanges, syncState, baseRevs, yResults];\n    }\n  );\n\n  const pushSyncIsNeeded = clientChangeSet.some((set) =>\n    set.muts.some((mut) => mut.keys.length > 0)\n  ) || yMessages.some(m => m.type === 'u-c');\n  if (justCheckIfNeeded) {\n    console.debug('Sync is needed:', pushSyncIsNeeded);\n    return pushSyncIsNeeded;\n  }\n  if (purpose === 'push' && !pushSyncIsNeeded) {\n    // The purpose of this request was to push changes\n    return false;\n  }\n\n  const latestRevisions = getLatestRevisionsPerTable(\n    clientChangeSet,\n    syncState?.latestRevisions\n  );\n\n  const clientIdentity = syncState?.clientIdentity || randomString(16);\n\n  //\n  // Push changes to server\n  //\n  throwIfCancelled(cancelToken);\n  const res = await syncWithServer(\n    clientChangeSet,\n    yMessages,\n    syncState,\n    baseRevs,\n    db,\n    databaseUrl,\n    schema,\n    clientIdentity,\n    currentUser\n  );\n  console.debug('Sync response', res);\n\n  //\n  // Apply changes locally and clear old change entries:\n  //\n  const {done, newSyncState} = await db.transaction('rw', db.tables, async (tx) => {\n    // @ts-ignore\n    tx.idbtrans.disableChangeTracking = true;\n    // @ts-ignore\n    tx.idbtrans.disableAccessControl = true; // TODO: Take care of this flag in access control middleware!\n\n    // Update db.cloud.schema from server response.\n    // Local schema MAY include a subset of tables, so do not force all tables into local schema.\n    for (const tableName of Object.keys(schema)) {\n      if (res.schema[tableName]) {\n        // Write directly into configured schema. This code can only be executed alone.\n        schema[tableName] = res.schema[tableName];\n      }\n    }\n    await db.$syncState.put(schema, 'schema');\n\n    // List mutations that happened during our exchange with the server:\n    const addedClientChanges = await listClientChanges(mutationTables, db, {\n      since: latestRevisions,\n    });\n\n    //\n    // Delete changes now as server has return success\n    // (but keep changes that haven't reached server yet)\n    //\n    for (const mutTable of mutationTables) {\n      const tableName = getTableFromMutationTable(mutTable.name);\n      if (\n        !addedClientChanges.some(\n          (ch) => ch.table === tableName && ch.muts.length > 0\n        )\n      ) {\n        // No added mutations for this table during the time we sent changes\n        // to the server.\n        // It is therefore safe to clear all changes (which is faster than\n        // deleting a range)\n        await Promise.all([\n          mutTable.clear(),\n          db.$baseRevs.where({ tableName }).delete(),\n        ]);\n      } else if (latestRevisions[tableName]) {\n        const latestRev = latestRevisions[tableName] || 0;\n        await Promise.all([\n          mutTable.where('rev').belowOrEqual(latestRev).delete(),\n          db.$baseRevs\n            .where(':id')\n            .between(\n              [tableName, -Infinity],\n              [tableName, latestRev + 1],\n              true,\n              true\n            )\n            .reverse()\n            .offset(1) // Keep one entry (the one mapping muts that came during fetch --> previous server revision)\n            .delete(),\n        ]);\n      } else {\n        // In this case, the mutation table only contains added items after sending empty changeset to server.\n        // We should not clear out anything now.\n      }\n    }\n\n    // Update latestRevisions object according to additional changes:\n    getLatestRevisionsPerTable(addedClientChanges, latestRevisions);\n\n    // Update/add new entries into baseRevs map.\n    // * On tables without mutations since last serverRevision,\n    //   this will update existing entry.\n    // * On tables where mutations have been recorded since last\n    //   serverRevision, this will create a new entry.\n    // The purpose of this operation is to mark a start revision (per table)\n    // so that all client-mutations that come after this, will be mapped to current\n    // server revision.\n    await updateBaseRevs(db, schema, latestRevisions, res.serverRevision);\n\n    const syncState = await db.getPersistedSyncState();\n\n    //\n    // Delete objects from removed realms\n    //\n    await deleteObjectsFromRemovedRealms(db, res, syncState);\n\n    //\n    // Update syncState\n    //\n    const newSyncState: PersistedSyncState = syncState || {\n      syncedTables: [],\n      latestRevisions: {},\n      realms: [],\n      inviteRealms: [],\n      clientIdentity,\n    };\n    if (readyForSyncification) {\n      newSyncState.syncedTables = tablesToSync\n        .map((tbl) => tbl.name)\n        .concat(tablesToSyncify.map((tbl) => tbl.name));\n    }\n    newSyncState.latestRevisions = latestRevisions;\n    newSyncState.remoteDbId = res.dbId;\n    newSyncState.initiallySynced = true;\n    newSyncState.realms = res.realms;\n    newSyncState.inviteRealms = res.inviteRealms;\n    newSyncState.serverRevision = res.serverRevision;\n    newSyncState.yServerRevision = res.serverRevision;\n    newSyncState.timestamp = new Date();\n    delete newSyncState.error;\n\n    const filteredChanges = filterServerChangesThroughAddedClientChanges(\n      res.changes,\n      addedClientChanges\n    );\n\n    //\n    // apply server changes\n    //\n    await applyServerChanges(filteredChanges, db);\n\n    if (res.yMessages) {\n      //\n      // apply yMessages\n      //\n      const {receivedUntils, resyncNeeded, yServerRevision} = await applyYServerMessages(res.yMessages, db);\n      if (yServerRevision) {\n        newSyncState.yServerRevision = yServerRevision;\n      }\n\n      //\n      // update Y SyncStates\n      //\n      await updateYSyncStates(lastUpdateIds, receivedUntils, db);\n\n      if (resyncNeeded) {\n        newSyncState.yDownloadedRealms = {}; // Will trigger a full download of Y-documents below...\n      }\n    }\n\n    //\n    // Update regular syncState\n    //\n    db.$syncState.put(newSyncState, 'syncState');\n\n    return {\n      done: addedClientChanges.length === 0,\n      newSyncState\n    };\n  });\n  if (!done) {\n    console.debug('MORE SYNC NEEDED. Go for it again!');\n    await checkSyncRateLimitDelay(db);\n    return await _sync(db, options, schema, { isInitialSync, cancelToken });\n  }\n  const usingYProps = Object.values(schema).some(tbl => tbl.yProps?.length);\n  const serverSupportsYprops = !!res.yMessages;\n  if (usingYProps && serverSupportsYprops) {\n    try {\n      await downloadYDocsFromServer(db, databaseUrl, newSyncState);\n    } catch (error) {\n      console.error('Failed to download Yjs documents from server', error);\n    }\n  }\n  console.debug('SYNC DONE', { isInitialSync });\n  db.syncCompleteEvent.next();\n  return false; // Not needed anymore\n}\n\nasync function deleteObjectsFromRemovedRealms(\n  db: DexieCloudDB,\n  res: SyncResponse,\n  prevState: PersistedSyncState | undefined\n) {\n  const deletedRealms = new Set<string>();\n  const rejectedRealms = new Set<string>();\n  const previousRealmSet = prevState ? prevState.realms : [];\n  const previousInviteRealmSet = prevState ? prevState.inviteRealms : [];\n  const updatedRealmSet = new Set(res.realms);\n  const updatedTotalRealmSet = new Set(res.realms.concat(res.inviteRealms));\n  for (const realmId of previousRealmSet) {\n    if (!updatedRealmSet.has(realmId)) {\n      rejectedRealms.add(realmId);\n      if (!updatedTotalRealmSet.has(realmId)) {\n        deletedRealms.add(realmId);\n      }\n    }\n  }\n  for (const realmId of previousInviteRealmSet.concat(previousRealmSet)) {\n    if (!updatedTotalRealmSet.has(realmId)) {\n      deletedRealms.add(realmId);\n    }\n  }\n  if (deletedRealms.size > 0 || rejectedRealms.size > 0) {\n    const tables = getSyncableTables(db);\n    for (const table of tables) {\n      let realmsToDelete = ['realms', 'members', 'roles'].includes(table.name)\n        ? deletedRealms // These tables should spare rejected ones.\n        : rejectedRealms; // All other tables shoudl delete rejected+deleted ones\n      if (realmsToDelete.size === 0) continue;\n      if (\n        table.schema.indexes.some(\n          (idx) =>\n            idx.keyPath === 'realmId' ||\n            (Array.isArray(idx.keyPath) && idx.keyPath[0] === 'realmId')\n        )\n      ) {\n        // There's an index to use:\n        //console.debug(`REMOVAL: deleting all ${table.name} where realmId anyOf `, JSON.stringify([...realmsToDelete]));\n        await table\n          .where('realmId')\n          .anyOf([...realmsToDelete])\n          .delete();\n      } else {\n        // No index to use:\n        //console.debug(`REMOVAL: deleting all ${table.name} where realmId is any of `, JSON.stringify([...realmsToDelete]), realmsToDelete.size);\n        await table\n          .filter((obj) => !!obj?.realmId && realmsToDelete.has(obj.realmId))\n          .delete();\n      }\n    }\n  }\n  if (rejectedRealms.size > 0) {\n    // Remove rejected/deleted realms from yDownloadedRealms because of the following use case:\n    // 1. User becomes added to the realm\n    // 2. User syncs and all documents of the realm is downloaded (downloadYDocsFromServer.ts)\n    // 3. User leaves the realm and all docs are deleted locally (built-in-trigger of deleting their rows in this file)\n    // 4. User is yet again added to the realm. At this point, we must make sure the docs are not considered already downloaded.\n    const updateSpec: UpdateSpec<PersistedSyncState> = {};\n    for (const realmId of rejectedRealms) {\n      updateSpec[`yDownloadedRealms.${realmId}`] = undefined; // Setting to undefined will delete the property\n    } \n    await db.$syncState.update('syncState', updateSpec);\n  }\n}\n\nexport function filterServerChangesThroughAddedClientChanges(\n  serverChanges: DBOperationsSet<string>,\n  addedClientChanges: DBOperationsSet\n): DBOperationsSet<string> {\n  const changes: DBKeyMutationSet = {};\n  applyOperations(changes, serverChanges);\n  const localPostChanges: DBKeyMutationSet = {};\n  applyOperations(localPostChanges, addedClientChanges);\n  subtractChanges(changes, localPostChanges);\n  return toDBOperationSet(changes);\n}\n","import { getSyncableTables } from \"../helpers/getSyncableTables\";\nimport { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { PersistedSyncState } from \"../db/entities/PersistedSyncState\";\n\nexport function getTablesToSyncify(db: DexieCloudDB, syncState: PersistedSyncState | undefined) {\n  const syncedTables = syncState?.syncedTables || [];\n  const syncableTables = getSyncableTables(db);\n  const tablesToSyncify = syncableTables.filter(\n    (tbl) => !syncedTables.includes(tbl.name)\n  );\n  return tablesToSyncify;\n}\n","import { Table } from \"dexie\";\nimport { EntityCommon } from \"../db/entities/EntityCommon\";\nimport { UserLogin } from \"../db/entities/UserLogin\";\nimport { Member } from \"../db/entities/Member\";\nimport { UNAUTHORIZED_USER } from \"../authentication/UNAUTHORIZED_USER\";\nimport { Realm } from \"../db/entities/Realm\";\n\nexport async function modifyLocalObjectsWithNewUserId(\n  syncifiedTables: Table<EntityCommon>[],\n  currentUser: UserLogin,\n  alreadySyncedRealms?: string[]) {\n  const ignoredRealms = new Set(alreadySyncedRealms || []);\n  for (const table of syncifiedTables) {\n    if (table.name === \"members\") {\n      // members\n      await table.toCollection().modify((member: Member) => {\n        if (!ignoredRealms.has(member.realmId) && (!member.userId || member.userId === UNAUTHORIZED_USER.userId)) {\n          member.userId = currentUser.userId;\n        }\n      });\n    } else if (table.name === \"roles\") {\n      // roles\n      // No changes needed.\n    } else if (table.name === \"realms\") {\n      // realms\n      await table.toCollection().modify((realm: Realm) => {\n        if (!ignoredRealms.has(realm.realmId) && (realm.owner === undefined || realm.owner === UNAUTHORIZED_USER.userId)) {\n          realm.owner = currentUser.userId;\n        }\n      });\n    } else {\n      // application entities\n      await table.toCollection().modify((obj) => {\n        if (!obj.realmId || !ignoredRealms.has(obj.realmId)) {\n          if (!obj.owner || obj.owner === UNAUTHORIZED_USER.userId)\n            obj.owner = currentUser.userId;\n          if (!obj.realmId || obj.realmId === UNAUTHORIZED_USER.userId) {\n            obj.realmId = currentUser.userId;\n          }\n        }\n      });\n    }\n  }\n}\n","import type { Table, YSyncState, YUpdateRow } from 'dexie';\nimport type { YClientMessage } from 'dexie-cloud-common';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { DEXIE_CLOUD_SYNCER_ID } from '../sync/DEXIE_CLOUD_SYNCER_ID';\nimport { listUpdatesSince } from './listUpdatesSince';\nimport { $Y } from './Y';\nimport { EntityCommon } from '../db/entities/EntityCommon';\n\n/** Queries the local database for YMessages to send to server.\n * \n * There are 2 messages that this function can provide:\n *   YUpdateFromClientRequest ( for local updates )\n *   YStateVector ( for state vector of foreign updates so that server can reduce the number of udpates to send back )\n *\n * Notice that we do not do a step 1 sync phase here to get a state vector from the server. Reason we can avoid\n * the 2-step sync is that we are client-server and not client-client here and we keep track of the client changes\n * sent to server by letting server acknowledge them. There is always a chance that some client update has already\n * been sent and that the client failed to receive the ack. However, if this happens it does not matter - the change\n * would be sent again and Yjs handles duplicate changes anyway. And it's rare so we earn the cost of roundtrips by\n * avoiding the step1 sync and instead keep track of this in the `unsentFrom` property of the SyncState.\n * \n * @param db \n * @returns \n */\nexport async function listYClientMessagesAndStateVector(\n  db: DexieCloudDB,\n  tablesToSync: Table<EntityCommon>[]\n): Promise<{yMessages: YClientMessage[], lastUpdateIds: {[yTable: string]: number}}> {\n  const result: YClientMessage[] = [];\n  const lastUpdateIds: {[yTable: string]: number} = {};\n  for (const table of tablesToSync) {\n    if (table.schema.yProps) {\n      for (const yProp of table.schema.yProps) {\n        const Y = $Y(db); // This is how we retrieve the user-provided Y library\n        const yTable = db.table(yProp.updatesTable); // the updates-table for this combo of table+propName\n        const syncState = (await yTable.get(DEXIE_CLOUD_SYNCER_ID)) as\n          | YSyncState\n          | undefined;\n\n        // unsentFrom = the `i` value of updates that aren't yet sent to server (or at least not acked by the server yet)\n        const unsentFrom = syncState?.unsentFrom || 1;\n        // receivedUntil = the `i` value of updates that both we and the server knows we already have (we know it by the outcome from last syncWithServer() because server keep track of its revision numbers\n        const receivedUntil = syncState?.receivedUntil || 0;\n        // Compute the least value of these two (but since receivedUntil is inclusive we need to add +1 to it)\n        const unsyncedFrom = Math.min(unsentFrom, receivedUntil + 1);\n        // Query all these updates for all docs of this table+prop combination\n        const updates = await listUpdatesSince(yTable, unsyncedFrom);\n        if (updates.length > 0) lastUpdateIds[yTable.name] = updates[updates.length -1].i;\n\n        // Now sort them by document and whether they are local or not + ignore local updates already sent:\n        const perDoc: {\n          [docKey: string]: {\n            i: number;\n            k: any;\n            isLocal: boolean;\n            u: Uint8Array[];\n          };\n        } = {};\n        for (const update of updates) {\n          // Sort updates into buckets of the doc primary key + the flag (whether it's local or foreign)\n          const isLocal = ((update.f || 0) & 0x01) === 0x01;\n          if (isLocal && update.i < unsentFrom) continue; // This local update has already been sent and acked.\n          const docKey = JSON.stringify(update.k) + '/' + isLocal;\n          let entry = perDoc[docKey];\n          if (!entry) {\n            perDoc[docKey] = entry = {\n              i: update.i,\n              k: update.k,\n              isLocal,\n              u: [],\n            };\n            entry.u.push(update.u);\n          } else {\n            entry.u.push(update.u);\n            entry.i = Math.max(update.i, entry.i);\n          }\n        }\n\n        // Now, go through all these and:\n        // * For local updates, compute a merged update per document.\n        // * For foreign updates, compute a state vector to pass to server, so that server can\n        //   avoid re-sending updates that we already have (they might have been sent of websocket\n        //   and when that happens, we do not mark them in any way nor do we update receivedUntil -\n        //   we only update receivedUntil after a \"full sync\" (syncWithServer()))\n        for (const { k, isLocal, u, i } of Object.values(perDoc)) {\n          const mergedUpdate = u.length === 1 ? u[0] : Y.mergeUpdatesV2(u);\n          if (isLocal) {\n            result.push({\n              type: 'u-c',\n              table: table.name,\n              prop: yProp.prop,\n              k,\n              u: mergedUpdate,\n              i,\n            });\n          } else {\n            const stateVector = Y.encodeStateVectorFromUpdateV2(mergedUpdate);\n            result.push({\n              type: 'sv',\n              table: table.name,\n              prop: yProp.prop,\n              k,\n              sv: stateVector,\n            });\n          }\n        }\n      }\n    }\n  }\n  return {\n    yMessages: result,\n    lastUpdateIds\n  };\n}\n","import { UserLogin } from '../db/entities/UserLogin';\nimport { randomString } from '../helpers/randomString';\nimport { EntityCommon } from '../db/entities/EntityCommon';\nimport { Table } from 'dexie';\nimport {\n  DBOperationsSet,\n  DBUpsertOperation,\n  DexieCloudSchema,\n  isValidAtID,\n  isValidSyncableID,\n} from 'dexie-cloud-common';\n\nexport async function listSyncifiedChanges(\n  tablesToSyncify: Table<EntityCommon>[],\n  currentUser: UserLogin,\n  schema: DexieCloudSchema,\n  alreadySyncedRealms?: string[]\n): Promise<DBOperationsSet> {\n  const txid = `upload-${randomString(8)}`;\n  if (currentUser.isLoggedIn) {\n    if (tablesToSyncify.length > 0) {\n      const ignoredRealms = new Set(alreadySyncedRealms || []);\n      const upserts = await Promise.all(\n        tablesToSyncify.map(async (table) => {\n          const { extractKey } = table.core.schema.primaryKey;\n          if (!extractKey) return { table: table.name, muts: [] }; // Outbound tables are not synced.\n\n          const dexieCloudTableSchema = schema[table.name];\n          const query = dexieCloudTableSchema?.generatedGlobalId\n            ? table.filter((item) => {\n                const id = extractKey(item);\n                return (\n                  !ignoredRealms.has(item.realmId || '') &&\n                  //(id[0] !== '#' || !!item.$ts) && // Private obj need no sync if not changed\n                  isValidAtID(extractKey(item), dexieCloudTableSchema?.idPrefix)\n                );\n              })\n            : table.filter((item) => {\n                const id = extractKey(item);\n\n                return (\n                  !ignoredRealms.has(item.realmId || '') &&\n                  //(id[0] !== '#' || !!item.$ts) && // Private obj need no sync if not changed\n                  isValidSyncableID(id)\n                );\n              });\n          const unsyncedObjects = await query.toArray();\n          if (unsyncedObjects.length > 0) {\n            const mut: DBUpsertOperation = {\n              type: 'upsert',\n              values: unsyncedObjects,\n              keys: unsyncedObjects.map(extractKey),\n              userId: currentUser.userId,\n              txid,\n            };\n            return {\n              table: table.name,\n              muts: [mut],\n            };\n          } else {\n            return {\n              table: table.name,\n              muts: [],\n            };\n          }\n        })\n      );\n      return upserts.filter((op) => op.muts.length > 0);\n    }\n  }\n  return [];\n}\n","import { UpdateSpec } from 'dexie';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { PersistedSyncState } from '../db/entities/PersistedSyncState';\nimport { DEXIE_CLOUD_SYNCER_ID } from '../sync/DEXIE_CLOUD_SYNCER_ID';\nimport { YDexieCloudSyncState } from './YDexieCloudSyncState';\n\nexport async function updateYSyncStates(\n  lastUpdateIdsBeforeSync: { [yTable: string]: number },\n  receivedUntilsAfterSync: { [yTable: string]: number },\n  db: DexieCloudDB\n) {\n  // We want to update unsentFrom for each yTable to the value specified in first argument\n  //  because we got those values before we synced with server and here we are back from server\n  //  that has successfully received all those messages - no matter if the last update was a client or server update,\n  //  we can safely store unsentFrom to a value of the last update + 1 here.\n  // We also want to update receivedUntil for each yTable to the value specified in the second argument,\n  //  because that contains the highest resulted id of each update from server after storing it.\n  // We could do these two tasks separately, but that would require two update calls on the same YSyncState, so\n  // to optimize the dexie calls, we merge these two maps into a single one so we can do a single update request\n  // per yTable.\n  const mergedSpec: {\n    [yTable: string]: { unsentFrom?: number; receivedUntil?: number };\n  } = {};\n  for (const [yTable, lastUpdateId] of Object.entries(\n    lastUpdateIdsBeforeSync\n  )) {\n    mergedSpec[yTable] ??= {};\n    mergedSpec[yTable].unsentFrom = lastUpdateId + 1;\n  }\n  for (const [yTable, lastUpdateId] of Object.entries(\n    receivedUntilsAfterSync\n  )) {\n    mergedSpec[yTable] ??= {};\n    mergedSpec[yTable].receivedUntil = lastUpdateId;\n  }\n\n  // Now go through all yTables and update their YSyncStates:\n  const allYTables = Object.values(db.dx._dbSchema)\n    .filter((tblSchema) => tblSchema.yProps)\n    .map((tblSchema) => tblSchema.yProps!.map((yProp) => yProp.updatesTable))\n    .flat();\n  for (const yTable of allYTables) {\n    const mergedEntry = mergedSpec[yTable];\n    const unsentFrom = mergedEntry?.unsentFrom ?? 1;\n    const receivedUntil =\n      mergedEntry?.receivedUntil ?? // If not received anything on this table, pick the current last update id\n      // from local because we are in the same parent transaction (in sync.ts) that\n      // applied all updates from the server\n      ((\n        await db\n          .table(yTable)\n          .where('i')\n          .between(1, Infinity) // Because i might be string DEXIE_CLOUD_SYNCER_ID if not a number.\n          .reverse()\n          .limit(1)\n          .primaryKeys()\n      )[0] as number) ??\n      0;\n    // We're already in a transaction, but for the sake of\n    // code readability and correctness, let's launch an atomic sub transaction:\n    await db.transaction('rw', yTable, async () => {\n      const state: YDexieCloudSyncState | undefined = await db\n        .table(yTable)\n        .get(DEXIE_CLOUD_SYNCER_ID);\n      if (!state) {\n        await db.table<YDexieCloudSyncState>(yTable).add({\n          i: DEXIE_CLOUD_SYNCER_ID,\n          unsentFrom,\n          receivedUntil\n        });\n      } else {\n        state.unsentFrom = Math.max(unsentFrom, state.unsentFrom || 1);\n        state.receivedUntil = Math.max(receivedUntil, state.receivedUntil || 0);\n        await db.table(yTable).put(state);\n      }\n    });\n  }\n}\n","import { setByKeyPath } from '../utils.js';\nexport function subtractChanges(target, // Server change set\nchangesToSubtract // additional mutations on client during syncWithServer()\n) {\n    var _a, _b, _c;\n    for (const [table, mutationSet] of Object.entries(changesToSubtract)) {\n        for (const [key, mut] of Object.entries(mutationSet)) {\n            switch (mut.type) {\n                case 'ups':\n                    {\n                        const targetMut = (_a = target[table]) === null || _a === void 0 ? void 0 : _a[key];\n                        if (targetMut) {\n                            switch (targetMut.type) {\n                                case 'ups':\n                                    delete target[table][key];\n                                    break;\n                                case 'del':\n                                    // Leave delete operation.\n                                    // (Don't resurrect objects unintenionally (using tx(get, put) pattern locally))\n                                    break;\n                                case 'upd':\n                                    delete target[table][key];\n                                    break;\n                            }\n                        }\n                    }\n                    break;\n                case 'del':\n                    (_b = target[table]) === null || _b === void 0 ? true : delete _b[key];\n                    break;\n                case 'upd': {\n                    const targetMut = (_c = target[table]) === null || _c === void 0 ? void 0 : _c[key];\n                    if (targetMut) {\n                        switch (targetMut.type) {\n                            case 'ups':\n                                // Adjust the server upsert with locally updated values.\n                                for (const [propPath, value] of Object.entries(mut.mod)) {\n                                    setByKeyPath(targetMut.val, propPath, value);\n                                }\n                                break;\n                            case 'del':\n                                // Leave delete.\n                                break;\n                            case 'upd':\n                                // Remove the local update props from the server update mutation.\n                                for (const propPath of Object.keys(mut.mod)) {\n                                    delete targetMut.mod[propPath];\n                                }\n                                break;\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n    }\n}\n","import { randomString } from \"../utils.js\";\n/** Convert a DBKeyMutationSet (which is an internal format capable of looking up changes per ID)\n * ...into a DBOperationsSet (which is more optimal for performing DB operations into DB (bulkAdd() etc))\n *\n * @param inSet\n * @returns DBOperationsSet representing inSet\n */\nexport function toDBOperationSet(inSet, txid = \"\") {\n    // Fictive transaction:\n    if (!txid)\n        txid = randomString(16);\n    // Convert data into a temporary map to collect mutations of same table and type\n    const map = {};\n    for (const [table, ops] of Object.entries(inSet)) {\n        for (const [key, op] of Object.entries(ops)) {\n            const mapEntry = map[table] || (map[table] = {});\n            const ops = mapEntry[op.type] || (mapEntry[op.type] = []);\n            ops.push(Object.assign({ key }, op)); // DBKeyMutation doesn't contain key, so we need to bring it in.\n        }\n    }\n    // Start computing the resulting format:\n    const result = [];\n    for (const [table, ops] of Object.entries(map)) {\n        const resultEntry = {\n            table,\n            muts: [],\n        };\n        for (const [optype, muts] of Object.entries(ops)) {\n            switch (optype) {\n                case \"ups\": {\n                    const op = {\n                        type: \"upsert\",\n                        keys: muts.map(mut => mut.key),\n                        values: muts.map(mut => mut.val),\n                        txid\n                    };\n                    resultEntry.muts.push(op);\n                    break;\n                }\n                case \"upd\": {\n                    const op = {\n                        type: \"update\",\n                        keys: muts.map(mut => mut.key),\n                        changeSpecs: muts.map(mut => mut.mod),\n                        txid\n                    };\n                    resultEntry.muts.push(op);\n                    break;\n                }\n                case \"del\": {\n                    const op = {\n                        type: \"delete\",\n                        keys: muts.map(mut => mut.key),\n                        txid,\n                    };\n                    resultEntry.muts.push(op);\n                    break;\n                }\n            }\n        }\n        result.push(resultEntry);\n    }\n    return result;\n}\n","import { BehaviorSubject, firstValueFrom } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { WSConnectionMsg } from '../WSObservable';\nimport { triggerSync } from './triggerSync';\nimport Dexie from 'dexie';\nimport { computeRealmSetHash } from '../helpers/computeRealmSetHash';\nimport { DBOperationsSet } from 'dexie-cloud-common';\nimport { getSyncableTables } from '../helpers/getSyncableTables';\nimport { getMutationTable } from '../helpers/getMutationTable';\nimport { listClientChanges } from './listClientChanges';\nimport { filterServerChangesThroughAddedClientChanges } from './sync';\nimport { applyServerChanges } from './applyServerChanges';\nimport { updateBaseRevs } from './updateBaseRevs';\nimport { getLatestRevisionsPerTable } from './getLatestRevisionsPerTable';\nimport { refreshAccessToken } from '../authentication/authenticate';\n\nconst LIMIT_NUM_MESSAGES_PER_TIME = 10; // Allow a maximum of 10 messages per...\nconst TIME_WINDOW = 10_000;             // ...10 seconds.\nconst PAUSE_PERIOD = 1_000;             // Pause for 1 second if reached\n\nexport type MessagesFromServerConsumer = ReturnType<\n  typeof MessagesFromServerConsumer\n>;\n\nexport function MessagesFromServerConsumer(db: DexieCloudDB) {\n  const queue: WSConnectionMsg[] = [];\n  const readyToServe = new BehaviorSubject(true);\n  const event = new BehaviorSubject(null);\n  let isWorking = false;\n\n  let loopDetection = new Array(LIMIT_NUM_MESSAGES_PER_TIME).fill(0);\n\n  event.subscribe(async () => {\n    if (isWorking) return;\n    if (queue.length > 0) {\n      isWorking = true;\n      loopDetection.shift();\n      loopDetection.push(Date.now());\n      readyToServe.next(false);\n      try {\n        await consumeQueue();\n      } finally {\n        if (\n          loopDetection[loopDetection.length - 1] - loopDetection[0] <\n          TIME_WINDOW\n        ) {\n          // Ten loops within 10 seconds. Slow down!\n          // This is a one-time event. Just pause 10 seconds.\n          console.warn(`Slowing down websocket loop for ${PAUSE_PERIOD} milliseconds`);\n          await new Promise((resolve) => setTimeout(resolve, PAUSE_PERIOD));\n        }\n        isWorking = false;\n        readyToServe.next(true);\n      }\n    }\n  });\n\n  function enqueue(msg: WSConnectionMsg) {\n    queue.push(msg);\n    event.next(null);\n  }\n\n  async function consumeQueue() {\n    while (queue.length > 0) {\n      const msg = queue.shift();\n      try {\n        // If the sync worker or service worker is syncing, wait 'til thei're done.\n        // It's no need to have two channels at the same time - even though it wouldnt\n        // be a problem - this is an optimization.\n        await firstValueFrom(\n          db.cloud.syncState.pipe(\n            filter(({ phase }) => phase === 'in-sync' || phase === 'error')\n          )\n        );\n        console.debug('processing msg', msg);\n        const persistedSyncState = db.cloud.persistedSyncState.value;\n        //syncState.\n        if (!msg) continue;\n        switch (msg.type) {\n          case 'token-expired':\n            console.debug(\n              'WebSocket observable: Token expired. Refreshing token...'\n            );\n            const user = db.cloud.currentUser.value;\n            // Refresh access token\n            const refreshedLogin = await refreshAccessToken(\n              db.cloud.options!.databaseUrl,\n              user\n            );\n            // Persist updated access token\n            await db.table('$logins').update(user.userId, {\n              accessToken: refreshedLogin.accessToken,\n              accessTokenExpiration: refreshedLogin.accessTokenExpiration,\n              claims: refreshedLogin.claims,\n              license: refreshedLogin.license,\n              data: refreshedLogin.data,\n            });\n            // Updating $logins will trigger emission of db.cloud.currentUser observable, which\n            // in turn will lead to that connectWebSocket.ts will reconnect the socket with the\n            // new token. So we don't need to do anything more here.\n            break;\n          case 'realm-added':\n            if (\n              !persistedSyncState?.realms?.includes(msg.realm) &&\n              !persistedSyncState?.inviteRealms?.includes(msg.realm)\n            ) {\n              await db.cloud.sync({ purpose: 'pull', wait: true });\n              //triggerSync(db, 'pull');\n            }\n            break;\n          case 'realm-accepted':\n            if (!persistedSyncState?.realms?.includes(msg.realm)) {\n              await db.cloud.sync({ purpose: 'pull', wait: true });\n              //triggerSync(db, 'pull');\n            }\n            break;\n          case 'realm-removed':\n            if (\n              persistedSyncState?.realms?.includes(msg.realm) ||\n              persistedSyncState?.inviteRealms?.includes(msg.realm)\n            ) {\n              await db.cloud.sync({ purpose: 'pull', wait: true });\n              //triggerSync(db, 'pull');\n            }\n            break;\n          case 'realms-changed':\n            //triggerSync(db, 'pull');\n            await db.cloud.sync({ purpose: 'pull', wait: true });\n            break;\n          case 'changes':\n            console.debug('changes');\n            if (db.cloud.syncState.value?.phase === 'error') {\n              triggerSync(db, 'pull');\n              break;\n            }\n            await db.transaction('rw', db.dx.tables, async (tx) => {\n              // @ts-ignore\n              tx.idbtrans.disableChangeTracking = true;\n              // @ts-ignore\n              tx.idbtrans.disableAccessControl = true;\n              const [schema, syncState, currentUser] = await Promise.all([\n                db.getSchema(),\n                db.getPersistedSyncState(),\n                db.getCurrentUser(),\n              ]);\n              console.debug('ws message queue: in transaction');\n              if (!syncState || !schema || !currentUser) {\n                console.debug('required vars not present', {\n                  syncState,\n                  schema,\n                  currentUser,\n                });\n                return; // Initial sync must have taken place - otherwise, ignore this.\n              }\n              // Verify again in ACID tx that we're on same server revision.\n              if (msg.baseRev !== syncState.serverRevision) {\n                console.debug(\n                  `baseRev (${msg.baseRev}) differs from our serverRevision in syncState (${syncState.serverRevision})`\n                );\n                // Should we trigger a sync now? No. This is a normal case\n                // when another local peer (such as the SW or a websocket channel on other tab) has\n                // updated syncState from new server information but we are not aware yet. It would\n                // be unnescessary to do a sync in that case. Instead, the caller of this consumeQueue()\n                // function will do readyToServe.next(true) right after this return, which will lead\n                // to a \"ready\" message being sent to server with the new accurate serverRev we have,\n                // so that the next message indeed will be correct.\n                if (\n                  typeof msg.baseRev === 'string' && // v2 format\n                  (typeof syncState.serverRevision === 'bigint' || // v1 format\n                    typeof syncState.serverRevision === 'object') // v1 format old browser\n                ) {\n                  // The reason for the diff seems to be that server has migrated the revision format.\n                  // Do a full sync to update revision format.\n                  // If we don't do a sync request now, we could stuck in an endless loop.\n                  triggerSync(db, 'pull');\n                }\n                return; // Ignore message\n              }\n              // Verify also that the message is based on the exact same set of realms\n              const ourRealmSetHash = await Dexie.waitFor(\n                // Keep TX in non-IDB work\n                computeRealmSetHash(syncState)\n              );\n              console.debug('ourRealmSetHash', ourRealmSetHash);\n              if (ourRealmSetHash !== msg.realmSetHash) {\n                console.debug('not same realmSetHash', msg.realmSetHash);\n                triggerSync(db, 'pull');\n                // The message isn't based on the same realms.\n                // Trigger a sync instead to resolve all things up.\n                return;\n              }\n\n              // Get clientChanges\n              let clientChanges: DBOperationsSet = [];\n              if (currentUser.isLoggedIn) {\n                const mutationTables = getSyncableTables(db).map((tbl) =>\n                  db.table(getMutationTable(tbl.name))\n                );\n                clientChanges = await listClientChanges(mutationTables, db);\n                console.debug('msg queue: client changes', clientChanges);\n              }\n              if (msg.changes.length > 0) {\n                const filteredChanges =\n                  filterServerChangesThroughAddedClientChanges(\n                    msg.changes,\n                    clientChanges\n                  );\n\n                //\n                // apply server changes\n                //\n                console.debug(\n                  'applying filtered server changes',\n                  filteredChanges\n                );\n                await applyServerChanges(filteredChanges, db);\n              }\n\n              // Update latest revisions per table in case there are unsynced changes\n              // This can be a real case in future when we allow non-eagery sync.\n              // And it can actually be realistic now also, but very rare.\n              syncState.latestRevisions = getLatestRevisionsPerTable(\n                clientChanges,\n                syncState.latestRevisions\n              );\n\n              syncState.serverRevision = msg.newRev;\n\n              // Update base revs\n              console.debug('Updating baseRefs', syncState.latestRevisions);\n              await updateBaseRevs(\n                db,\n                schema!,\n                syncState.latestRevisions,\n                msg.newRev\n              );\n\n              //\n              // Update syncState\n              //\n              console.debug('Updating syncState', syncState);\n              await db.$syncState.put(syncState, 'syncState');\n            });\n            console.debug('msg queue: done with rw transaction');\n            break;\n        }\n      } catch (error) {\n        console.error(`Error in msg queue`, error);\n      }\n    }\n  }\n\n  return {\n    enqueue,\n    readyToServe,\n  };\n}\n","import Dexie, { Table } from 'dexie';\nimport { GuardedJob } from './entities/GuardedJob';\nimport { UserLogin } from './entities/UserLogin';\nimport { PersistedSyncState } from './entities/PersistedSyncState';\nimport { UNAUTHORIZED_USER } from '../authentication/UNAUTHORIZED_USER';\nimport { DexieCloudOptions } from '../DexieCloudOptions';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { BaseRevisionMapEntry } from './entities/BaseRevisionMapEntry';\nimport {\n  DBRealm,\n  DBRealmMember,\n  DBRealmRole,\n  DexieCloudSchema,\n} from 'dexie-cloud-common';\nimport { BroadcastedAndLocalEvent } from '../helpers/BroadcastedAndLocalEvent';\nimport { SyncState, SyncStatePhase } from '../types/SyncState';\nimport { MessagesFromServerConsumer } from '../sync/messagesFromServerQueue';\nimport { YClientMessage } from 'dexie-cloud-common';\n\n/*export interface DexieCloudDB extends Dexie {\n  table(name: string): Table<any, any>;\n  table(name: \"$jobs\"): Table<GuardedJob, string>;\n  table(name: \"$logins\"): Table<UserLogin, string>;\n  table(name: \"$syncState\"): Table<SyncState, \"syncState\">;\n  //table(name: \"$pendingChangesFromServer\"): Table<DBOperationsSet, number>;\n}\n*/\n\nexport interface SyncStateChangedEventData {\n  phase: SyncStatePhase;\n  error?: Error;\n  progress?: number;\n}\n\ntype SyncStateTable = Table<\n  PersistedSyncState | DexieCloudSchema | DexieCloudOptions,\n  'syncState' | 'options' | 'schema'\n>;\nexport interface DexieCloudDBBase {\n  readonly name: Dexie['name'];\n  readonly close: Dexie['close'];\n  transaction: Dexie['transaction'];\n  table: Dexie['table'];\n  readonly tables: Dexie['tables'];\n  readonly cloud: Dexie['cloud'];\n  readonly $jobs: Table<GuardedJob, string>;\n  readonly $logins: Table<UserLogin, string>;\n  readonly $syncState: SyncStateTable;\n  readonly $baseRevs: Table<BaseRevisionMapEntry, [string, number]>;\n\n  readonly realms: Table<DBRealm, string>;\n  readonly members: Table<DBRealmMember, string>;\n  readonly roles: Table<DBRealmRole, [string, string]>;\n\n  readonly localSyncEvent: Subject<{ purpose?: 'pull' | 'push' }>;\n  readonly syncStateChangedEvent: BroadcastedAndLocalEvent<SyncStateChangedEventData>;\n  readonly syncCompleteEvent: BroadcastedAndLocalEvent<void>;\n  readonly dx: Dexie;\n  readonly initiallySynced: boolean;\n}\n\nexport interface DexieCloudDB extends DexieCloudDBBase {\n  getCurrentUser(): Promise<UserLogin>;\n  getSchema(): Promise<DexieCloudSchema | undefined>;\n  getOptions(): Promise<DexieCloudOptions | undefined>;\n  getPersistedSyncState(): Promise<PersistedSyncState | undefined>;\n  setInitiallySynced(initiallySynced: boolean): void;\n  reconfigure(): void;\n  messageConsumer: MessagesFromServerConsumer;\n  messageProducer: Subject<YClientMessage>;\n}\n\nconst wm = new WeakMap<object, DexieCloudDB>();\n\nexport const DEXIE_CLOUD_SCHEMA = {\n  members: '@id, [userId+realmId], [email+realmId], realmId',\n  roles: '[realmId+name]',\n  realms: '@realmId',\n  $jobs: '',\n  $syncState: '',\n  $baseRevs: '[tableName+clientRev]',\n  $logins: 'claims.sub, lastLogin',\n};\n\nlet static_counter = 0;\nexport function DexieCloudDB(dx: Dexie): DexieCloudDB {\n  if ('vip' in dx) dx = dx['vip']; // Avoid race condition. Always map to a vipped dexie that don't block during db.on.ready().\n  let db = wm.get(dx.cloud);\n  if (!db) {\n    const localSyncEvent = new Subject<{ purpose: 'push' | 'pull' }>();\n    let syncStateChangedEvent =\n      new BroadcastedAndLocalEvent<SyncStateChangedEventData>(\n        `syncstatechanged-${dx.name}`\n      );\n    let syncCompleteEvent = new BroadcastedAndLocalEvent<void>(\n        `synccomplete-${dx.name}`\n      );\n    localSyncEvent['id'] = ++static_counter;\n    let initiallySynced = false;\n    db = {\n      get name() {\n        return dx.name;\n      },\n      close() {\n        return dx.close();\n      },\n      transaction: dx.transaction.bind(dx),\n      table: dx.table.bind(dx),\n      get tables() {\n        return dx.tables;\n      },\n      cloud: dx.cloud,\n      get $jobs() {\n        return dx.table('$jobs') as Table<GuardedJob, string>;\n      },\n      get $syncState() {\n        return dx.table('$syncState') as SyncStateTable;\n      },\n      get $baseRevs() {\n        return dx.table('$baseRevs') as Table<\n          BaseRevisionMapEntry,\n          [string, number]\n        >;\n      },\n      get $logins() {\n        return dx.table('$logins') as Table<UserLogin, string>;\n      },\n\n      get realms() {\n        return dx.realms;\n      },\n      get members() {\n        return dx.members;\n      },\n      get roles() {\n        return dx.roles;\n      },\n      get initiallySynced() {\n        return initiallySynced;\n      },\n      localSyncEvent,\n      get syncStateChangedEvent() {\n        return syncStateChangedEvent;\n      },\n      get syncCompleteEvent() {\n        return syncCompleteEvent;\n      },\n      dx,\n    } as DexieCloudDB;\n\n    const helperMethods: Partial<DexieCloudDB> = {\n      getCurrentUser() {\n        return db!.$logins\n          .toArray()\n          .then(\n            (logins) => logins.find((l) => l.isLoggedIn) || UNAUTHORIZED_USER\n          );\n      },\n      getPersistedSyncState() {\n        return db!.$syncState.get('syncState') as Promise<\n          PersistedSyncState | undefined\n        >;\n      },\n      getSchema() {\n        return db!.$syncState.get('schema').then((schema: DexieCloudSchema) => {\n          if (schema) {\n            for (const table of db!.tables) {\n              if (table.schema.primKey && table.schema.primKey.keyPath && schema[table.name]) {\n                schema[table.name].primaryKey = nameFromKeyPath(\n                  table.schema.primKey.keyPath\n                );\n              }\n            }\n          }\n          return schema;\n        }) as Promise<DexieCloudSchema | undefined>;\n      },\n      getOptions() {\n        return db!.$syncState.get('options') as Promise<\n          DexieCloudOptions | undefined\n        >;\n      },\n      setInitiallySynced(value) {\n        initiallySynced = value;\n      },\n      reconfigure() {\n        syncStateChangedEvent = new BroadcastedAndLocalEvent<SyncState>(\n          `syncstatechanged-${dx.name}`\n        );\n        syncCompleteEvent = new BroadcastedAndLocalEvent<void>(\n          `synccomplete-${dx.name}`\n        );\n      },\n    };\n\n    Object.assign(db, helperMethods);\n    db.messageConsumer = MessagesFromServerConsumer(db);\n    db.messageProducer = new Subject<YClientMessage>();\n    wm.set(dx.cloud, db);\n  }\n  return db;\n}\n\nfunction nameFromKeyPath (keyPath?: string | string[]): string {\n  return typeof keyPath === 'string' ?\n    keyPath :\n    keyPath ? ('[' + [].join.call(keyPath, '+') + ']') : \"\";\n}\n","import { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { UserLogin } from \"../db/entities/UserLogin\";\n\nexport interface AuthPersistedContext extends UserLogin {\n  save(): Promise<void>;\n}\n\n// Emulate true-private property db. Why? So it's not stored in DB.\nconst wm = new WeakMap<AuthPersistedContext, DexieCloudDB>();\n\nexport class AuthPersistedContext {\n  constructor(db: DexieCloudDB, userLogin: UserLogin) {\n    wm.set(this, db);\n    Object.assign(this, userLogin);\n  }\n\n  static load(db: DexieCloudDB, userId: string) {\n    return db\n      .table(\"$logins\")\n      .get(userId)\n      .then(\n        (userLogin) => new AuthPersistedContext(db, userLogin || {\n          userId,\n          claims: {\n            sub: userId\n          },\n          lastLogin: new Date(0)\n        })\n      );\n  }\n\n  async save() {\n    const db = wm.get(this)!;\n    db.table(\"$logins\").put(this);\n  }\n}\n","import { filter, firstValueFrom, from, InteropObservable, Observable } from 'rxjs';\n\nexport function waitUntil<T>(\n  o: Observable<T> | InteropObservable<T>, // Works with Dexie's liveQuery observables if we'd need that\n  predicate: (value: T) => boolean\n) {\n  return firstValueFrom(from(o).pipe(\n    filter(predicate),\n  ));\n}\n","import { DexieCloudDB } from '../db/DexieCloudDB';\nimport { TXExpandos } from '../types/TXExpandos';\nimport { confirmLogout } from './interactWithUser';\nimport { UNAUTHORIZED_USER } from './UNAUTHORIZED_USER';\nimport { waitUntil } from './waitUntil';\n\nexport async function logout(db: DexieCloudDB) {\n  const numUnsyncedChanges = await _logout(db);\n  if (numUnsyncedChanges) {\n    if (\n      await confirmLogout(\n        db.cloud.userInteraction,\n        db.cloud.currentUserId,\n        numUnsyncedChanges\n      )\n    ) {\n      await _logout(db, { deleteUnsyncedData: true });\n    } else {\n      throw new Error(`User cancelled logout due to unsynced changes`);\n    }\n  }\n}\n\nexport async function _logout(db: DexieCloudDB, { deleteUnsyncedData = false } = {}) {\n  // Clear the database without emptying configuration options.\n  const [numUnsynced, loggedOut] = await db.dx.transaction('rw', db.dx.tables, async (tx) => {\n    // @ts-ignore\n    const idbtrans: IDBTransaction & TXExpandos = tx.idbtrans;\n    idbtrans.disableChangeTracking = true;\n    idbtrans.disableAccessControl = true;\n    const mutationTables = tx.storeNames.filter((tableName) =>\n      tableName.endsWith('_mutations')\n    );\n\n    // Count unsynced changes\n    const unsyncCounts = await Promise.all(\n      mutationTables.map((mutationTable) => tx.table(mutationTable).count())\n    );\n    const sumUnSynced = unsyncCounts.reduce((a, b) => a + b, 0);\n\n    if (sumUnSynced > 0 && !deleteUnsyncedData) {\n      // Let caller ask user if they want to delete unsynced data.\n      return [sumUnSynced, false];\n    }\n    \n    // Either there are no unsynched changes, or caller provided flag deleteUnsynchedData = true.\n    // Clear all tables except $jobs and $syncState (except the persisted sync state which is\n    // also cleared because we're going to rebuild it using a fresh sync).\n    db.$syncState.delete('syncState');\n    for (const table of db.dx.tables) {\n      if (table.name !== '$jobs' && table.name !== '$syncState') {\n        table.clear();\n      }\n    }\n    return [sumUnSynced, true];\n  });\n\n  if (loggedOut) {\n    // Wait for currentUser observable to emit UNAUTHORIZED_USER\n    await waitUntil(db.cloud.currentUser, (user) => user.userId === UNAUTHORIZED_USER.userId);\n    // Then perform an initial sync\n    await db.cloud.sync({purpose: 'pull', wait: true});\n  }\n  return numUnsynced;\n}\n","/** A way to log to console in production without terser stripping out\n * it from the release bundle.\n * This should be used very rarely and only in places where it's\n * absolutely necessary to log something in production.\n * \n * @param level \n * @param args \n */\nexport function prodLog(level: 'log' | 'warn' | 'error' | 'debug', ...args: any[]) {\n  globalThis[\"con\"+\"sole\"][level](...args);\n}\n","import { DexieCloudDB } from '../db/DexieCloudDB';\nimport { LoginHints } from '../DexieCloudAPI';\nimport { triggerSync } from '../sync/triggerSync';\nimport { authenticate, loadAccessToken } from './authenticate';\nimport { AuthPersistedContext } from './AuthPersistedContext';\nimport { logout } from './logout';\nimport { otpFetchTokenCallback } from './otpFetchTokenCallback';\nimport { setCurrentUser } from './setCurrentUser';\nimport { UNAUTHORIZED_USER } from './UNAUTHORIZED_USER';\n\nexport async function login(\n  db: DexieCloudDB,\n  hints?: LoginHints\n) {\n  const currentUser = await db.getCurrentUser();\n  const origUserId = currentUser.userId;\n  if (currentUser.isLoggedIn && (!hints || (!hints.email && !hints.userId))) {\n    const licenseStatus = currentUser.license?.status || 'ok';\n    if (\n      licenseStatus === 'ok' &&\n      currentUser.accessToken &&\n      (!currentUser.accessTokenExpiration ||\n        currentUser.accessTokenExpiration.getTime() > Date.now())\n    ) {\n      // Already authenticated according to given hints. And license is valid.\n      return false;\n    }\n    if (\n      currentUser.refreshToken &&\n      (!currentUser.refreshTokenExpiration ||\n        currentUser.refreshTokenExpiration.getTime() > Date.now())\n    ) {\n      // Refresh the token\n      await loadAccessToken(db);\n      return false;\n    }\n    // No refresh token - must re-authenticate:\n  }\n  const context = new AuthPersistedContext(db, {\n    claims: {},\n    lastLogin: new Date(0),\n  });\n  await authenticate(\n    db.cloud.options!.databaseUrl,\n    context,\n    db.cloud.options!.fetchTokens || otpFetchTokenCallback(db),\n    db.cloud.userInteraction,\n    hints\n  );\n  if (\n    origUserId !== UNAUTHORIZED_USER.userId &&\n    context.userId !== origUserId\n  ) {\n    // User was logged in before, but now logged in as another user.\n    await logout(db);\n  }\n\n  /*try {\n    await context.save();\n  } catch (e) {\n    try {\n      if (e.name === 'DataCloneError') {\n        console.debug(`Login context property names:`, Object.keys(context));\n        console.debug(`Login context:`, context);\n        console.debug(`Login context JSON:`, JSON.stringify(context));\n      }\n    } catch {}\n    throw e;\n  }*/\n  await setCurrentUser(db, context);\n  // Make sure to resync as the new login will be authorized\n  // for new realms.\n  triggerSync(db, 'pull');\n  return context.userId !== origUserId;\n}\n","import {\n  DemoTokenRequest,\n  OTPTokenRequest1,\n  OTPTokenRequest2,\n  TokenErrorResponse,\n  TokenFinalResponse,\n  TokenRequest,\n  TokenResponse,\n} from 'dexie-cloud-common';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { HttpError } from '../errors/HttpError';\nimport { FetchTokenCallback } from './authenticate';\nimport { alertUser, promptForEmail, promptForOTP } from './interactWithUser';\n\nexport function otpFetchTokenCallback(db: DexieCloudDB): FetchTokenCallback {\n  const { userInteraction } = db.cloud;\n  return async function otpAuthenticate({ public_key, hints }) {\n    let tokenRequest: TokenRequest;\n    const url = db.cloud.options?.databaseUrl;\n    if (!url) throw new Error(`No database URL given.`);\n    if (hints?.grant_type === 'demo') {\n      const demo_user = await promptForEmail(\n        userInteraction,\n        'Enter a demo user email',\n        hints?.email || hints?.userId\n      );\n      tokenRequest = {\n        demo_user,\n        grant_type: 'demo',\n        scopes: ['ACCESS_DB'],\n        public_key\n      } satisfies DemoTokenRequest;\n    } else if (hints?.otpId && hints.otp) {\n      // User provided OTP ID and OTP code. This means that the OTP email\n      // has already gone out and the user may have clicked a magic link\n      // in the email with otp and otpId in query and the app has picked\n      // up those values and passed them to db.cloud.login().\n      tokenRequest = {\n        grant_type: 'otp',\n        otp_id: hints.otpId,\n        otp: hints.otp,\n        scopes: ['ACCESS_DB'],\n        public_key,\n      } satisfies OTPTokenRequest2;\n    } else {\n      const email = await promptForEmail(\n        userInteraction,\n        'Enter email address',\n        hints?.email\n      );\n      if (/@demo.local$/.test(email)) {\n        tokenRequest = {\n          demo_user: email,\n          grant_type: 'demo',\n          scopes: ['ACCESS_DB'],\n          public_key\n        } satisfies DemoTokenRequest;\n      } else {\n        tokenRequest = {\n          email,\n          grant_type: 'otp',\n          scopes: ['ACCESS_DB'],\n        } satisfies OTPTokenRequest1;\n      }\n    }\n    const res1 = await fetch(`${url}/token`, {\n      body: JSON.stringify(tokenRequest),\n      method: 'post',\n      headers: { 'Content-Type': 'application/json', mode: 'cors' },\n    });\n    if (res1.status !== 200) {\n      const errMsg = await res1.text();\n      await alertUser(userInteraction, \"Token request failed\", {\n        type: 'error',\n        messageCode: 'GENERIC_ERROR',\n        message: errMsg,\n        messageParams: {}\n      }).catch(()=>{});\n      throw new HttpError(res1, errMsg);\n    }\n    const response: TokenResponse = await res1.json();\n    if (response.type === 'tokens' || response.type === 'error') {\n      // Demo user request can get a \"tokens\" response right away\n      // Error can also be returned right away.\n      return response;\n    } else if (tokenRequest.grant_type === 'otp' && 'email' in tokenRequest) {\n      if (response.type !== 'otp-sent')\n        throw new Error(`Unexpected response from ${url}/token`);\n      const otp = await promptForOTP(userInteraction, tokenRequest.email);\n      const tokenRequest2 = {\n        ...tokenRequest,\n        otp: otp || '',\n        otp_id: response.otp_id,\n        public_key\n      } satisfies OTPTokenRequest2;\n\n      let res2 = await fetch(`${url}/token`, {\n        body: JSON.stringify(tokenRequest2),\n        method: 'post',\n        headers: { 'Content-Type': 'application/json' },\n        mode: 'cors',\n      });\n      while (res2.status === 401) {\n        const errorText = await res2.text();\n        tokenRequest2.otp = await promptForOTP(userInteraction, tokenRequest.email, {\n          type: 'error',\n          messageCode: 'INVALID_OTP',\n          message: errorText,\n          messageParams: {}\n        });\n        res2 = await fetch(`${url}/token`, {\n          body: JSON.stringify(tokenRequest2),\n          method: 'post',\n          headers: { 'Content-Type': 'application/json' },\n          mode: 'cors',\n        });\n      }\n      if (res2.status !== 200) {\n        const errMsg = await res2.text();\n        throw new HttpError(res2, errMsg);\n      }\n      const response2: TokenFinalResponse | TokenErrorResponse = await res2.json();\n      return response2;\n    } else {\n      throw new Error(`Unexpected response from ${url}/token`);\n    }\n  };\n}\n","import { DexieCloudDB } from '../db/DexieCloudDB';\nimport { prodLog } from '../prodLog';\nimport { AuthPersistedContext } from './AuthPersistedContext';\nimport { waitUntil } from './waitUntil';\n\n/** This function changes or sets the current user as requested.\n *\n * Use cases:\n * * Initially on db.ready after reading the current user from db.$logins.\n *   This will make sure that any unsynced operations from the previous user is synced before\n *   changing the user.\n * * Upon user request\n *\n * @param db\n * @param newUser\n */\nexport async function setCurrentUser(\n  db: DexieCloudDB,\n  user: AuthPersistedContext\n) {\n  const $logins = db.table('$logins');\n  await db.transaction('rw', $logins, async (tx) => {\n    const existingLogins = await $logins.toArray();\n    await Promise.all(\n      existingLogins\n        .filter((login) => login.userId !== user.userId && login.isLoggedIn)\n        .map((login) => {\n          login.isLoggedIn = false;\n          return $logins.put(login);\n        })\n    );\n    user.isLoggedIn = true;\n    user.lastLogin = new Date();\n    try {\n      await user.save();\n    } catch (e) {\n      try {\n        if (e.name === 'DataCloneError') {\n          // We've seen this buggy behavior in some browsers and in case it happens\n          // again we really need to collect the details to understand what's going on.\n          prodLog('debug', `Login context property names:`, Object.keys(user));\n          prodLog('debug', `Login context property names:`, Object.keys(user));\n          prodLog('debug', `Login context:`, user);\n          prodLog('debug', `Login context JSON:`, JSON.stringify(user));\n        }\n      } catch {}\n      throw e;\n    }\n    console.debug('Saved new user', user.email);\n  });\n  await waitUntil(\n    db.cloud.currentUser,\n    (currentUser) => currentUser.userId === user.userId\n  );\n}\n","// @ts-ignore\nexport const isFirefox = typeof InstallTrigger !== 'undefined';\n","export const isSafari =\n  typeof navigator !== 'undefined' &&\n  /Safari\\//.test(navigator.userAgent) &&\n  !/Chrom(e|ium)\\/|Edge\\//.test(navigator.userAgent);\n\nexport const safariVersion = isSafari\n  ? // @ts-ignore\n    [].concat(navigator.userAgent.match(/Safari\\/(\\d*)/))[1]\n  : NaN;\n","import { isFirefox } from './isFirefox';\nimport { isSafari, safariVersion } from './isSafari';\n\n// What we know: Safari 14.1 (version 605) crashes when using dexie-cloud's service worker.\n// We don't know what exact call is causing this. Have tried safari-14-idb-fix with no luck.\n// Something we do in the service worker is triggering the crash.\n// When next Safari version (606) is out we will start enabling SW again, hoping that the bug is solved.\n// If not, we might increment 605 to 606.\nexport const DISABLE_SERVICEWORKER_STRATEGY =\n  (isSafari && safariVersion <= 605) || // Disable for Safari for now.\n  isFirefox; // Disable for Firefox for now. Seems to have a bug in reading CryptoKeys from IDB from service workers\n","export const IS_SERVICE_WORKER =\n  typeof self !== \"undefined\" && \"clients\" in self && !self.document;\n","import {\n  DBCoreAddRequest,\n  DBCoreDeleteRequest,\n  DBCoreIndex, DBCorePutRequest\n} from 'dexie';\nimport { b64LexEncode } from 'dreambase-library/dist/common/b64lex';\n\nconst { toString } = {};\nexport function toStringTag(o: Object) {\n  return toString.call(o).slice(8, -1);\n}\n\nexport function getEffectiveKeys(\n  primaryKey: DBCoreIndex,\n  req: (Pick<DBCoreAddRequest | DBCorePutRequest, 'type' | 'values'> & {\n    keys?: any[];\n  }) |\n    Pick<DBCoreDeleteRequest, 'keys' | 'type'>\n) {\n  if (req.type === 'delete')\n    return req.keys;\n  return req.keys?.slice() || req.values.map(primaryKey.extractKey!);\n}\nfunction applyToUpperBitFix(orig: string, bits: number) {\n  return (\n    (bits & 1 ? orig[0].toUpperCase() : orig[0].toLowerCase()) +\n    (bits & 2 ? orig[1].toUpperCase() : orig[1].toLowerCase()) +\n    (bits & 4 ? orig[2].toUpperCase() : orig[2].toLowerCase())\n  );\n}\nconst consonants = /b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|x|y|z/i;\nfunction isUpperCase(ch: string) {\n  return ch >= 'A' && ch <= 'Z';\n}\n\nexport function generateTablePrefix(\n  tableName: string,\n  allPrefixes: Set<string>\n) {\n  let rv = tableName[0].toLocaleLowerCase(); // \"users\" = \"usr\", \"friends\" = \"frn\", \"realms\" = \"rlm\", etc.\n  for (let i = 1, l = tableName.length; i < l && rv.length < 3; ++i) {\n    if (consonants.test(tableName[i]) || isUpperCase(tableName[i]))\n      rv += tableName[i].toLowerCase();\n  }\n  while (allPrefixes.has(rv)) {\n    if (/\\d/g.test(rv)) {\n      rv = rv.substr(0, rv.length - 1) + (rv[rv.length - 1] + 1);\n      if (rv.length > 3)\n        rv = rv.substr(0, 3);\n      else\n        continue;\n    } else if (rv.length < 3) {\n      rv = rv + '2';\n      continue;\n    }\n    let bitFix = 1;\n    let upperFixed = rv;\n    while (allPrefixes.has(upperFixed) && bitFix < 8) {\n      upperFixed = applyToUpperBitFix(rv, bitFix);\n      ++bitFix;\n    }\n    if (bitFix < 8)\n      rv = upperFixed;\n    else {\n      let nextChar = (rv.charCodeAt(2) + 1) & 127;\n      rv = rv.substr(0, 2) + String.fromCharCode(nextChar);\n      // Here, in theory we could get an infinite loop if having 127*8 table names with identical 3 first consonants.\n    }\n  }\n  return rv;\n}\nlet time = 0;\n/**\n *\n * @param prefix A unique 3-letter short-name of the table.\n * @param shardKey 3 last letters from another ID if colocation is requested. Verified on server on inserts - guarantees unique IDs across shards.\n *  The shardKey part of the key represent the shardId where it was first created. An object with this\n *  primary key can later on be moved to another shard without being altered. The reason for having\n *  the origin shardKey as part of the key, is that the server will not need to check uniqueness constraint\n *  across all shards on every insert. Updates / moves across shards are already controlled by the server\n *  in the sense that the objects needs to be there already - we only need this part for inserts.\n * @returns\n */\nexport function generateKey(prefix: string, shardKey?: string) {\n  const a = new Uint8Array(18);\n  const timePart = new Uint8Array(a.buffer, 0, 6);\n  const now = Date.now(); // Will fit into 6 bytes until year 10 895.\n  if (time >= now) {\n    // User is bulk-creating objects the same millisecond.\n    // Increment the time part by one millisecond for each item.\n    // If bulk-creating 1,000,000 rows client-side in 10 seconds,\n    // the last time-stamp will be 990 seconds in future, which is no biggie at all.\n    // The point is to create a nice order of the generated IDs instead of\n    // using random ids.\n    ++time;\n  } else {\n    time = now;\n  }\n  timePart[0] = time / 1099511627776; // Normal division (no bitwise operator) --> works with >= 32 bits.\n  timePart[1] = time / 4294967296;\n  timePart[2] = time / 16777216;\n  timePart[3] = time / 65536;\n  timePart[4] = time / 256;\n  timePart[5] = time;\n  const randomPart = new Uint8Array(a.buffer, 6);\n  crypto.getRandomValues(randomPart);\n  const id = new Uint8Array(a.buffer);\n  return prefix + b64LexEncode(id) + (shardKey || '');\n}\n","import Dexie, {\n  DBCore,\n  DBCoreAddRequest,\n  DBCoreMutateRequest,\n  DBCorePutRequest,\n  DBCoreTransaction,\n  Middleware,\n} from 'dexie';\nimport { isValidSyncableID } from 'dexie-cloud-common';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport {\n  getEffectiveKeys,\n  generateKey,\n  toStringTag,\n} from '../middleware-helpers/idGenerationHelpers';\nimport { TXExpandos } from '../types/TXExpandos';\n\nexport function createIdGenerationMiddleware(\n  db: DexieCloudDB\n): Middleware<DBCore> {\n  return {\n    stack: 'dbcore',\n    name: 'idGenerationMiddleware',\n    level: 1,\n    create: (core) => {\n      return {\n        ...core,\n        table: (tableName) => {\n          const table = core.table(tableName);\n\n          function generateOrVerifyAtKeys(\n            req: DBCoreAddRequest | DBCorePutRequest,\n            idPrefix: string\n          ) {\n            let valueClones: null | object[] = null;\n            const keys = getEffectiveKeys(table.schema.primaryKey, req);\n            keys.forEach((key, idx) => {\n              if (key === undefined) {\n                // Generate the key\n                const colocatedId =\n                  req.values[idx].realmId || db.cloud.currentUserId;\n                const shardKey = colocatedId.substr(colocatedId.length - 3);\n                keys[idx] = generateKey(idPrefix, shardKey);\n                if (!table.schema.primaryKey.outbound) {\n                  if (!valueClones) valueClones = req.values.slice();\n                  valueClones[idx] = Dexie.deepClone(valueClones[idx]);\n                  Dexie.setByKeyPath(\n                    valueClones[idx],\n                    table.schema.primaryKey.keyPath!,\n                    keys[idx]\n                  );\n                }\n              } else if (\n                typeof key !== 'string' ||\n                (!key.startsWith(idPrefix) && !key.startsWith('#' + idPrefix))\n              ) {\n                // Key was specified by caller. Verify it complies with id prefix.\n                throw new Dexie.ConstraintError(\n                  `The ID \"${key}\" is not valid for table \"${tableName}\". ` +\n                    `Primary '@' keys requires the key to be prefixed with \"${idPrefix}\" (or \"#${idPrefix}).\\n` +\n                    `If you want to generate IDs programmatically, remove '@' from the schema to get rid of this constraint. Dexie Cloud supports custom IDs as long as they are random and globally unique.`\n                );\n              }\n            });\n            return table.mutate({\n              ...req,\n              keys,\n              values: valueClones || req.values,\n            });\n          }\n\n          return {\n            ...table,\n            mutate: (req) => {\n              const idbtrans = req.trans as DBCoreTransaction & IDBTransaction & TXExpandos;\n              if (idbtrans.mode === 'versionchange') {\n                // Tell all the other middlewares to skip bothering. We're in versionchange mode.\n                // dexie-cloud is not initialized yet.\n                idbtrans.disableChangeTracking = true;\n                idbtrans.disableAccessControl = true;\n              }\n              if (idbtrans.disableChangeTracking) {\n                // Disable ID policy checks and ID generation\n                return table.mutate(req);\n              }\n              if (req.type === 'add' || req.type === 'put') {\n                const cloudTableSchema = db.cloud.schema?.[tableName];\n                if (!cloudTableSchema?.generatedGlobalId) {\n                  if (cloudTableSchema?.markedForSync) {\n                    // Just make sure primary key is of a supported type:\n                    const keys = getEffectiveKeys(table.schema.primaryKey, req);\n                    keys.forEach((key, idx) => {\n                      if (!isValidSyncableID(key)) {\n                        const type = Array.isArray(key)\n                          ? key.map(toStringTag).join(',')\n                          : toStringTag(key);\n                        throw new Dexie.ConstraintError(\n                          `Invalid primary key type ${type} for table ${tableName}. Tables marked for sync has primary keys of type string or Array of string (and optional numbers)`\n                        );\n                      }\n                    });\n                  }\n                } else {\n                  if (db.cloud.options?.databaseUrl && !db.initiallySynced) {\n                    // A database URL is configured but no initial sync has been performed.\n                    const keys = getEffectiveKeys(table.schema.primaryKey, req);\n                    // Check if the operation would yield any INSERT. If so, complain! We never want wrong ID prefixes stored.\n                    return table\n                      .getMany({ keys, trans: req.trans, cache: 'immutable' })\n                      .then((results) => {\n                        if (results.length < keys.length) {\n                          // At least one of the given objects would be created. Complain since\n                          // the generated ID would be based on a locally computed ID prefix only - we wouldn't\n                          // know if the server would give the same ID prefix until an initial sync has been\n                          // performed.\n                          throw new Error(\n                            `Unable to create new objects without an initial sync having been performed.`\n                          );\n                        }\n                        return table.mutate(req);\n                      });\n                  }\n                  return generateOrVerifyAtKeys(\n                    req,\n                    cloudTableSchema.idPrefix!\n                  );\n                }\n              }\n              return table.mutate(req);\n            },\n          };\n        },\n      };\n    },\n  };\n}\n","import { DBCoreTable, DBCoreTransaction } from \"dexie\";\nimport { allSettled } from \"../helpers/allSettled\";\n\nlet counter = 0;\n\nexport function guardedTable(table: DBCoreTable) {\n  const prop = \"$lock\"+ (++counter);\n  return {\n    ...table,\n    count: readLock(table.count, prop),\n    get: readLock(table.get, prop),\n    getMany: readLock(table.getMany, prop),\n    openCursor: readLock(table.openCursor, prop),\n    query: readLock(table.query, prop),\n    mutate: writeLock(table.mutate, prop),\n  };\n}\n\nfunction readLock<TReq extends { trans: DBCoreTransaction }, TRes>(\n  fn: (req: TReq) => Promise<TRes>,\n  prop: string\n): (req: TReq) => Promise<TRes> {\n  return function readLocker(req): Promise<TRes> {\n    const {\n      readers,\n      writers,\n    }: { writers: Promise<any>[]; readers: Promise<any>[] } =\n      req.trans[prop] || (req.trans[prop] = { writers: [], readers: [] });\n    const numWriters = writers.length;\n    const promise = (numWriters > 0\n      ? writers[numWriters - 1].then(() => fn(req), () => fn(req))\n      : fn(req)\n    ).finally(() => {readers.splice(readers.indexOf(promise))});\n    readers.push(promise);\n    return promise;\n  };\n}\n\nfunction writeLock<TReq extends { trans: DBCoreTransaction }, TRes>(\n  fn: (req: TReq) => Promise<TRes>,\n  prop: string\n): (req: TReq) => Promise<TRes> {\n  return function writeLocker(req): Promise<TRes> {\n    const {\n      readers,\n      writers,\n    }: { writers: Promise<any>[]; readers: Promise<any>[] } =\n      req.trans[prop] || (req.trans[prop] = { writers: [], readers: [] });\n    let promise = (writers.length > 0\n      ? writers[writers.length - 1].then(() => fn(req), () => fn(req))\n      : readers.length > 0\n      ? allSettled(readers).then(() => fn(req))\n      : fn(req)\n    ).finally(() => {writers.shift();});\n    writers.push(promise);\n    return promise;\n  };\n}\n","\nexport function allSettled(possiblePromises: any[]) {\n  return new Promise(resolve => {\n      if (possiblePromises.length === 0) resolve([]);\n      let remaining = possiblePromises.length;\n      const results = new Array(remaining);\n      possiblePromises.forEach((p, i) => Promise.resolve(p).then(\n          value => results[i] = {status: \"fulfilled\", value},\n          reason => results[i] = {status: \"rejected\", reason})\n          .then(()=>--remaining || resolve(results)));\n  });\n}\n","import { DBCoreTransaction } from 'dexie';\nimport { BehaviorSubject } from 'rxjs';\nimport { TXExpandos } from '../types/TXExpandos';\n\nexport const outstandingTransactions = new BehaviorSubject<Set<DBCoreTransaction & IDBTransaction & TXExpandos>>(new Set());\n","import { DexieCloudDB } from './db/DexieCloudDB';\n\nexport function isEagerSyncDisabled(db: DexieCloudDB) {\n  return (\n    db.cloud.options?.disableEagerSync ||\n    db.cloud.currentUser.value?.license?.status !== 'ok' ||\n    !db.cloud.options?.databaseUrl\n  );\n}\n","import {\n  DBCore,\n  DBCoreAddRequest,\n  DBCoreDeleteRequest,\n  DBCoreMutateResponse,\n  DBCorePutRequest,\n  DBCoreTable,\n  DBCoreTransaction,\n  Middleware,\n  RangeSet,\n} from 'dexie';\nimport { DBOperation, DBUpdateOperation } from 'dexie-cloud-common';\nimport { BehaviorSubject } from 'rxjs';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { UserLogin } from '../db/entities/UserLogin';\nimport { getMutationTable } from '../helpers/getMutationTable';\nimport { randomString } from '../helpers/randomString';\nimport { throwVersionIncrementNeeded } from '../helpers/throwVersionIncrementNeeded';\nimport { guardedTable } from '../middleware-helpers/guardedTable';\nimport { registerSyncEvent } from '../sync/registerSyncEvent';\nimport { TXExpandos } from '../types/TXExpandos';\nimport { outstandingTransactions } from './outstandingTransaction';\nimport { isEagerSyncDisabled } from '../isEagerSyncDisabled';\nimport { triggerSync } from '../sync/triggerSync';\n\nexport interface MutationTrackingMiddlewareArgs {\n  currentUserObservable: BehaviorSubject<UserLogin>;\n  db: DexieCloudDB;\n}\n\n/** Tracks all mutations in the same transaction as the mutations -\n * so it is guaranteed that no mutation goes untracked - and if transaction\n * aborts, the mutations won't be tracked.\n *\n * The sync job will use the tracked mutations as the source of truth when pushing\n * changes to server and cleanup the tracked mutations once the server has\n * ackowledged that it got them.\n */\nexport function createMutationTrackingMiddleware({\n  currentUserObservable,\n  db,\n}: MutationTrackingMiddlewareArgs): Middleware<DBCore> {\n  return {\n    stack: 'dbcore',\n    name: 'MutationTrackingMiddleware',\n    level: 1,\n    create: (core) => {\n      const allTableNames = new Set(core.schema.tables.map((t) => t.name));\n      const ordinaryTables = core.schema.tables.filter(\n        (t) => !/^\\$/.test(t.name)\n      );\n      const mutTableMap = new Map<string, DBCoreTable>();\n      for (const tbl of ordinaryTables) {\n        const mutationTableName = `$${tbl.name}_mutations`;\n        if (allTableNames.has(mutationTableName)) {\n          mutTableMap.set(tbl.name, core.table(mutationTableName));\n        }\n      }\n\n      return {\n        ...core,\n        transaction: (tables, mode) => {\n          let tx: DBCoreTransaction & IDBTransaction & TXExpandos;\n          if (mode === 'readwrite') {\n            const mutationTables = tables\n              .filter((tbl) => db.cloud.schema?.[tbl]?.markedForSync)\n              .map((tbl) => getMutationTable(tbl));\n            tx = core.transaction(\n              [...tables, ...mutationTables],\n              mode\n            ) as DBCoreTransaction & IDBTransaction & TXExpandos;\n          } else {\n            tx = core.transaction(tables, mode) as DBCoreTransaction &\n              IDBTransaction &\n              TXExpandos;\n          }\n\n          if (mode === 'readwrite') {\n            // Give each transaction a globally unique id.\n            tx.txid = randomString(16);\n            tx.opCount = 0;\n            // Introduce the concept of current user that lasts through the entire transaction.\n            // This is important because the tracked mutations must be connected to the user.\n            tx.currentUser = currentUserObservable.value;\n            outstandingTransactions.value.add(tx);\n            outstandingTransactions.next(outstandingTransactions.value);\n            const removeTransaction = () => {\n              tx.removeEventListener('complete', txComplete);\n              tx.removeEventListener('error', removeTransaction);\n              tx.removeEventListener('abort', removeTransaction);\n              outstandingTransactions.value.delete(tx);\n              outstandingTransactions.next(outstandingTransactions.value);\n            };\n            const txComplete = () => {\n              if (tx.mutationsAdded && !isEagerSyncDisabled(db)) {\n                triggerSync(db, 'push');\n              }\n              removeTransaction();\n            };\n            tx.addEventListener('complete', txComplete);\n            tx.addEventListener('error', removeTransaction);\n            tx.addEventListener('abort', removeTransaction);\n          }\n          return tx;\n        },\n        table: (tableName) => {\n          const table = core.table(tableName);\n          if (/^\\$/.test(tableName)) {\n            if (tableName.endsWith('_mutations')) {\n              // In case application code adds items to ..._mutations tables,\n              // make sure to set the mutationsAdded flag on transaction.\n              // This is also done in mutateAndLog() as that function talks to a\n              // lower level DBCore and wouldn't be catched by this code.\n              return {\n                ...table,\n                mutate: (req) => {\n                  if (req.type === 'add' || req.type === 'put') {\n                    (\n                      req.trans as DBCoreTransaction & TXExpandos\n                    ).mutationsAdded = true;\n                  }\n                  return table.mutate(req);\n                },\n              };\n            } else if (tableName === '$logins') {\n              return {\n                ...table,\n                mutate: (req) => {\n                  //console.debug('Mutating $logins table', req);\n                  return table\n                    .mutate(req)\n                    .then((res) => {\n                      //console.debug('Mutating $logins');\n                      (\n                        req.trans as DBCoreTransaction & TXExpandos\n                      ).mutationsAdded = true;\n                      //console.debug('$logins mutated');\n                      return res;\n                    })\n                    .catch((err) => {\n                      console.debug('Failed mutation $logins', err);\n                      return Promise.reject(err);\n                    });\n                },\n              };\n            } else {\n              return table;\n            }\n          }\n          const { schema } = table;\n          const mutsTable = mutTableMap.get(tableName)!;\n          if (!mutsTable) {\n            // We cannot track mutations on this table because there is no mutations table for it.\n            // This might happen in upgraders that executes before cloud schema is applied.\n            return table; \n          }\n          return guardedTable({\n            ...table,\n            mutate: (req) => {\n              const trans = req.trans as DBCoreTransaction & TXExpandos;\n              if (!trans.txid) return table.mutate(req); // Upgrade transactions not guarded by us.\n              if (trans.disableChangeTracking) return table.mutate(req);\n              if (!db.cloud.schema?.[tableName]?.markedForSync)\n                return table.mutate(req);\n              if (!trans.currentUser?.isLoggedIn) {\n                // Unauthorized user should not log mutations.\n                // Instead, after login all local data should be logged at once.\n                return table.mutate(req);\n              }\n\n              return req.type === 'deleteRange'\n                ? table\n                    // Query the actual keys (needed for server sending correct rollback to us)\n                    .query({\n                      query: { range: req.range, index: schema.primaryKey },\n                      trans: req.trans,\n                      values: false,\n                    })\n                    // Do a delete request instead, but keep the criteria info for the server to execute\n                    .then((res) => {\n                      return mutateAndLog({\n                        type: 'delete',\n                        keys: res.result,\n                        trans: req.trans,\n                        criteria: { index: null, range: req.range },\n                      });\n                    })\n                : mutateAndLog(req);\n            },\n          });\n\n          function mutateAndLog(\n            req: DBCoreDeleteRequest | DBCoreAddRequest | DBCorePutRequest\n          ): Promise<DBCoreMutateResponse> {\n            const trans = req.trans as DBCoreTransaction & TXExpandos;\n            const unsyncedProps =\n              db.cloud.options?.unsyncedProperties?.[tableName];\n            const {\n              txid,\n              currentUser: { userId },\n            } = trans;\n            const { type } = req;\n            const opNo = ++trans.opCount;\n\n            function stripChangeSpec(changeSpec: { [keyPath: string]: any }) {\n              if (!unsyncedProps) return changeSpec;\n              let rv = changeSpec;\n              for (const keyPath of Object.keys(changeSpec)) {\n                if (\n                  unsyncedProps.some(\n                    (p) => keyPath === p || keyPath.startsWith(p + '.')\n                  )\n                ) {\n                  if (rv === changeSpec) rv = { ...changeSpec }; // clone on demand\n                  delete rv[keyPath];\n                }\n              }\n              return rv;\n            }\n\n            return table.mutate(req).then((res) => {\n              const { numFailures: hasFailures, failures } = res;\n              let keys = type === 'delete' ? req.keys! : res.results!;\n              let values = 'values' in req ? req.values : [];\n              let changeSpec = 'changeSpec' in req ? req.changeSpec : undefined;\n              let updates = 'updates' in req ? req.updates : undefined;\n\n              if (hasFailures) {\n                keys = keys.filter((_, idx) => !failures[idx]);\n                values = values.filter((_, idx) => !failures[idx]);\n              }\n              if (unsyncedProps) {\n                // Filter out unsynced properties\n                values = values.map((value) => {\n                  const newValue = { ...value };\n                  for (const prop of unsyncedProps) {\n                    delete newValue[prop];\n                  }\n                  return newValue;\n                });\n                if (changeSpec) {\n                  // modify operation with criteria and changeSpec.\n                  // We must strip out unsynced properties from changeSpec.\n                  // We deal with criteria later.\n                  changeSpec = stripChangeSpec(changeSpec);\n                  if (Object.keys(changeSpec).length === 0) {\n                    // Nothing to change on server\n                    return res;\n                  }\n                }\n                if (updates) {\n                  let strippedChangeSpecs =\n                    updates.changeSpecs.map(stripChangeSpec);\n                  let newUpdates: DBCorePutRequest['updates'] = {\n                    keys: [],\n                    changeSpecs: [],\n                  };\n                  const validKeys = new RangeSet();\n                  let anyChangeSpecBecameEmpty = false;\n                  for (let i = 0, l = strippedChangeSpecs.length; i < l; ++i) {\n                    if (Object.keys(strippedChangeSpecs[i]).length > 0) {\n                      newUpdates.keys.push(updates.keys[i]);\n                      newUpdates.changeSpecs.push(strippedChangeSpecs[i]);\n                      validKeys.addKey(updates.keys[i]);\n                    } else {\n                      anyChangeSpecBecameEmpty = true;\n                    }\n                  }\n                  updates = newUpdates;\n                  if (anyChangeSpecBecameEmpty) {\n                    // Some keys were stripped. We must also strip them from keys and values\n                    let newKeys: any[] = [];\n                    let newValues: any[] = [];\n                    for (let i = 0, l = keys.length; i < l; ++i) {\n                      if (validKeys.hasKey(keys[i])) {\n                        newKeys.push(keys[i]);\n                        newValues.push(values[i]);\n                      }\n                    }\n                    keys = newKeys;\n                    values = newValues;\n                  }\n                }\n              }\n              const ts = Date.now();\n              // Canonicalize req.criteria.index to null if it's on the primary key.\n              let criteria =\n                'criteria' in req && req.criteria\n                  ? {\n                      ...req.criteria,\n                      index:\n                        req.criteria.index === schema.primaryKey.keyPath // Use null to inform server that criteria is on primary key\n                          ? null // This will disable the server from trying to log consistent operations where it shouldnt.\n                          : req.criteria.index,\n                    }\n                  : undefined;\n              if (unsyncedProps && criteria?.index) {\n                const keyPaths = schema.indexes.find(\n                  (idx) => idx.name === criteria!.index\n                )?.keyPath;\n                const involvedProps = keyPaths\n                  ? typeof keyPaths === 'string'\n                    ? [keyPaths]\n                    : keyPaths\n                  : [];\n                if (involvedProps.some((p) => unsyncedProps?.includes(p))) {\n                  // Don't log criteria on unsynced properties as the server could not test them.\n                  criteria = undefined;\n                }\n              }\n\n              const mut: DBOperation =\n                req.type === 'delete'\n                  ? {\n                      type: 'delete',\n                      ts,\n                      opNo,\n                      keys,\n                      criteria,\n                      txid,\n                      userId,\n                    }\n                  : req.type === 'add'\n                  ? {\n                      type: 'insert',\n                      ts,\n                      opNo,\n                      keys,\n                      txid,\n                      userId,\n                      values,\n                    }\n                  : criteria && changeSpec\n                  ? {\n                      // Common changeSpec for all keys\n                      type: 'modify',\n                      ts,\n                      opNo,\n                      keys,\n                      criteria,\n                      changeSpec,\n                      txid,\n                      userId,\n                    }\n                  : changeSpec\n                  ? {\n                      // In case criteria involved an unsynced property, we go for keys instead.\n                      type: 'update',\n                      ts,\n                      opNo,\n                      keys,\n                      changeSpecs: keys.map(() => changeSpec!),\n                      txid,\n                      userId,\n                    }\n                  : updates\n                  ? {\n                      // One changeSpec per key\n                      type: 'update',\n                      ts,\n                      opNo,\n                      keys: updates.keys,\n                      changeSpecs: updates.changeSpecs,\n                      txid,\n                      userId,\n                    }\n                  : {\n                      type: 'upsert',\n                      ts,\n                      opNo,\n                      keys,\n                      values,\n                      txid,\n                      userId,\n                    };\n\n              if ('isAdditionalChunk' in req && req.isAdditionalChunk) {\n                mut.isAdditionalChunk = true;\n              }\n              return keys.length > 0 || criteria\n                ? mutsTable\n                    .mutate({ type: 'add', trans, values: [mut] }) // Log entry\n                    .then(() => {\n                      trans.mutationsAdded = true; // Mark transaction as having added mutations to trigger eager sync\n                      return res; // Return original response\n                    })\n                : res;\n            });\n          }\n        },\n      };\n    },\n  };\n}\n","import Dexie, { DbSchema } from 'dexie';\nimport { DEXIE_CLOUD_SCHEMA } from './db/DexieCloudDB';\nimport { generateTablePrefix } from './middleware-helpers/idGenerationHelpers';\n\nexport function overrideParseStoresSpec(origFunc: Function, dexie: Dexie) {\n  return function(stores: {[tableName: string]: string}, dbSchema: DbSchema) {\n    const storesClone = {\n      ...DEXIE_CLOUD_SCHEMA,\n      ...stores,\n    };\n    // Merge indexes of DEXIE_CLOUD_SCHEMA with stores\n    Object.keys(DEXIE_CLOUD_SCHEMA).forEach((tableName: keyof typeof DEXIE_CLOUD_SCHEMA) => {\n      const schemaSrc = storesClone[tableName];\n      // Verify that they don't try to delete a table that is needed for access control of Dexie Cloud\n      if (schemaSrc == null) {\n        // They try to delete one of the built-in schema tables.\n        throw new Error(`Cannot delete table ${tableName} as it is needed for access control of Dexie Cloud`);\n      }\n      // If not trying to override a built-in table, then we can skip this and continue to next table.\n      if (!stores[tableName]) {\n        // They haven't tried to declare this table. No need to merge indexes.\n        return; // Continue\n      }\n\n      // They have declared this table. Merge indexes in case they didn't declare all indexes we need.\n      const requestedIndexes = schemaSrc.split(',').map(spec => spec.trim());\n      const builtInIndexes = DEXIE_CLOUD_SCHEMA[tableName].split(',').map(spec => spec.trim());\n      const requestedIndexSet = new Set(requestedIndexes.map(index => index.replace(/([&*]|\\+\\+)/g, \"\")));\n      // Verify that primary key is unchanged\n      if (requestedIndexes[0] !== builtInIndexes[0]) {\n        // Primary key must match exactly\n        throw new Error(`Cannot override primary key of table ${tableName}. Please declare it as {${\n          tableName}: ${\n            JSON.stringify(DEXIE_CLOUD_SCHEMA[tableName])\n          }`);\n      }\n      // Merge indexes\n      for (let i=1; i<builtInIndexes.length; ++i) {\n        const builtInIndex = builtInIndexes[i];\n        if (!requestedIndexSet.has(builtInIndex.replace(/([&*]|\\+\\+)/g, \"\"))) {\n          // Add built-in index if not already requested\n          storesClone[tableName] += `,${builtInIndex}`;\n        }\n      }\n    });\n\n    // Populate dexie.cloud.schema\n    const cloudSchema = dexie.cloud.schema || (dexie.cloud.schema = {});\n    const allPrefixes = new Set<string>();\n    Object.keys(storesClone).forEach(tableName => {\n      const schemaSrc = storesClone[tableName];\n      const cloudTableSchema = cloudSchema[tableName] || (cloudSchema[tableName] = {});\n      if (schemaSrc != null) {\n        if (/^\\@/.test(schemaSrc)) {\n          storesClone[tableName] = storesClone[tableName].substr(1);\n          cloudTableSchema.generatedGlobalId = true;\n          cloudTableSchema.idPrefix = generateTablePrefix(tableName, allPrefixes);\n          allPrefixes.add(cloudTableSchema.idPrefix);\n        }\n        if (!/^\\$/.test(tableName)) {\n          storesClone[`$${tableName}_mutations`] = '++rev';\n          cloudTableSchema.markedForSync = true;\n        }\n        if (cloudTableSchema.deleted) {\n          cloudTableSchema.deleted = false;\n        }\n      } else {\n        cloudTableSchema.deleted = true;\n        cloudTableSchema.markedForSync = false;\n        storesClone[`$${tableName}_mutations`] = null;\n      }\n    });\n    const rv = origFunc.call(this, storesClone, dbSchema);\n    for (const [tableName, spec] of Object.entries(dbSchema)) {\n      if (spec.yProps?.length) {\n        const cloudTableSchema = cloudSchema[tableName];\n        if (cloudTableSchema) {\n          cloudTableSchema.yProps = spec.yProps.map((yProp) => yProp.prop);\n        }\n      }\n    }\n    return rv;\n  }\n}\n","import { DexieCloudDB } from \"../db/DexieCloudDB\";\n\nexport function performGuardedJob<T>(\n  db: DexieCloudDB,\n  jobName: string,\n  job: () => Promise<T>\n): Promise<T> {\n  if (typeof navigator === 'undefined' || !navigator.locks) {\n    // No support for guarding jobs. IE11, node.js, etc.\n    return job();\n  }\n  return navigator.locks.request(db.name + '|' + jobName, () => job());\n}\n","import { BehaviorSubject, fromEvent, merge, of } from 'rxjs';\nimport {\n  debounceTime,\n  delay,\n  distinctUntilChanged,\n  filter,\n  map,\n  skip,\n  startWith,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\nconst USER_INACTIVITY_TIMEOUT = 180_000; // 3 minutes\nconst ACTIVE_WAIT_TIME = 0; // For now, it's nicer to react instantly on user activity\nconst INACTIVE_WAIT_TIME = 20_000;\n\n// This observable will be emitted to later down....\nexport const userIsActive = new BehaviorSubject<boolean>(true);\n\n// A refined version that waits before changing state:\n// * Wait another INACTIVE_WAIT_TIME before accepting that the user is inactive.\n//   Reason 1: Spare resources - no need to setup the entire websocket flow when\n//             switching tabs back and forth.\n//   Reason 2: Less flickering for the end user when switching tabs back and forth.\n// * Wait another ACTIVE_WAIT_TIME before accepting that the user is active.\n//   Possible reason to have a value here: Sparing resources if users often temporary click the tab\n//   for just a short time.\nexport const userIsReallyActive = new BehaviorSubject<boolean>(true);\nuserIsActive\n  .pipe(\n    switchMap((isActive) => {\n      //console.debug('SyncStatus: DUBB: isActive changed to', isActive);\n      return isActive\n        ? ACTIVE_WAIT_TIME\n          ? of(true).pipe(delay(ACTIVE_WAIT_TIME))\n          : of(true)\n        : INACTIVE_WAIT_TIME\n        ? of(false).pipe(delay(INACTIVE_WAIT_TIME))\n        : of(false);}\n    ),\n    distinctUntilChanged()\n  )\n  .subscribe(userIsReallyActive);\n\n//\n// First create some corner-stone observables to build the flow on\n//\n\n// document.onvisibilitychange:\nexport const visibilityStateIsChanged =\n  typeof document !== 'undefined'\n    ? fromEvent(document, 'visibilitychange')\n    : of({});\n\n// document.onvisibilitychange makes document hidden:\nexport const documentBecomesHidden = visibilityStateIsChanged.pipe(\n  filter(() => document.visibilityState === 'hidden')\n);\n\n// document.onvisibilitychange makes document visible\nexport const documentBecomesVisible = visibilityStateIsChanged.pipe(\n  filter(() => document.visibilityState === 'visible')\n);\n\n// Any of various user-activity-related events happen:\nexport const userDoesSomething =\n  typeof window !== 'undefined'\n    ? merge(\n        documentBecomesVisible,\n        fromEvent(window, 'mousedown'),\n        fromEvent(window, 'mousemove'),\n        fromEvent(window, 'keydown'),\n        fromEvent(window, 'wheel'),\n        fromEvent(window, 'touchmove')\n      )\n    : of({});\n\nif (typeof document !== 'undefined') {\n  //\n  // Now, create a final observable and start subscribing to it in order\n  // to make it emit values to userIsActive BehaviourSubject (which is the\n  // most important global hot observable we have here)\n  //\n  // Live test: https://jsitor.com/LboCDHgbn\n  //\n  merge(\n    of(true), // Make sure something is always emitted from start\n    documentBecomesHidden, // so that we can eagerly emit false!\n    userDoesSomething\n  )\n    .pipe(\n      // No matter event source, compute whether user is visible using visibilityState:\n      map(() => document.visibilityState === 'visible'),\n      // Make sure to emit it\n      tap((isActive) => {\n        if (userIsActive.value !== isActive) {\n          // Emit new value unless it already has that value\n          userIsActive.next(isActive);\n        }\n      }),\n      // Now, if true was emitted, make sure to set a timeout to emit false\n      // unless new user activity things happen (in that case, the timeout will be cancelled!)\n      switchMap((isActive) =>\n        isActive\n          ? of(0).pipe(\n              delay(USER_INACTIVITY_TIMEOUT - INACTIVE_WAIT_TIME),\n              tap(() => userIsActive.next(false))\n            )\n          : of(0)\n      )\n    )\n    .subscribe(() => {}); // Unless we subscribe nothing will be propagated to userIsActive observable\n}\n","export class TokenExpiredError extends Error {\n  name = \"TokenExpiredError\";\n}\n","import Dexie from \"dexie\";\nimport { type DexieCloudDB } from \"../db/DexieCloudDB\";\n\nexport function getAwarenessLibrary(db: DexieCloudDB): typeof import ('y-protocols/awareness') {\n  if (!db.cloud.options?.awarenessProtocol) {\n    throw new Dexie.MissingAPIError('awarenessProtocol was not provided to db.cloud.configure(). Please import * as awarenessProtocol from \"y-protocols/awareness\".');\n  }\n  return db.cloud.options?.awarenessProtocol;\n}\n\nexport const awarenessWeakMap = new WeakMap<any, import('y-protocols/awareness').Awareness>();\n\nexport const getDocAwareness = (doc: any) => awarenessWeakMap.get(doc);\n\n\n","import { YjsDoc } from \"dexie\";\nimport { Subject } from \"rxjs\";\n\n\nconst wm = new WeakMap<YjsDoc, Subject<void>>();\n\n/** A property (package-private) on Y.Doc that is used\n * to signal that the server wants us to send a 'doc-open' message\n * to the server for this document.\n * \n * @param doc \n * @returns \n */\nexport function getOpenDocSignal(doc: YjsDoc) {\n  let signal = wm.get(doc);\n  if (!signal) {\n    signal = new Subject<void>();\n    wm.set(doc, signal);\n  }\n  return signal;\n}","import { DBOperationsSet } from 'dexie-cloud-common';\nimport { BehaviorSubject, Observable, Subscriber, Subscription, tap } from 'rxjs';\nimport { TokenExpiredError } from './authentication/TokenExpiredError';\nimport { DXCWebSocketStatus } from './DXCWebSocketStatus';\nimport { TSON } from './TSON';\nimport type { YClientMessage, YServerMessage } from 'dexie-cloud-common';\nimport { DexieCloudDB } from './db/DexieCloudDB';\nimport { createYClientUpdateObservable } from './yjs/createYClientUpdateObservable';\nimport { applyYServerMessages } from './yjs/applyYMessages';\nimport { DexieYProvider } from 'dexie';\nimport { getAwarenessLibrary, getDocAwareness } from './yjs/awareness';\nimport { encodeYMessage, decodeYMessage } from 'dexie-cloud-common';\nimport { UserLogin } from './dexie-cloud-client';\nimport { isEagerSyncDisabled } from './isEagerSyncDisabled';\nimport { getOpenDocSignal } from './yjs/reopenDocSignal';\n\nconst SERVER_PING_TIMEOUT = 20000;\nconst CLIENT_PING_INTERVAL = 30000;\nconst FAIL_RETRY_WAIT_TIME = 60000;\n\nexport type WSClientToServerMsg = ReadyForChangesMessage | YClientMessage;\nexport interface ReadyForChangesMessage {\n  type: 'ready';\n  realmSetHash: string;\n  rev: string;\n}\n\nexport type WSConnectionMsg =\n  | RevisionChangedMessage\n  | RealmAddedMessage\n  | RealmAcceptedMessage\n  | RealmRemovedMessage\n  | RealmsChangedMessage\n  | ChangesFromServerMessage\n  | TokenExpiredMessage;\ninterface PingMessage {\n  type: 'ping';\n}\n\ninterface PongMessage {\n  type: 'pong';\n}\n\ninterface ErrorMessage {\n  type: 'error';\n  error: string;\n}\n\nexport interface ChangesFromServerMessage {\n  type: 'changes';\n  baseRev: string;\n  realmSetHash: string;\n  newRev: string;\n  changes: DBOperationsSet<string>;\n}\nexport interface RevisionChangedMessage {\n  type: 'rev';\n  rev: string;\n}\n\nexport interface RealmAddedMessage {\n  type: 'realm-added';\n  realm: string;\n}\n\nexport interface RealmAcceptedMessage {\n  type: 'realm-accepted';\n  realm: string;\n}\n\nexport interface RealmRemovedMessage {\n  type: 'realm-removed';\n  realm: string;\n}\n\nexport interface RealmsChangedMessage {\n  type: 'realms-changed';\n  realmsHash: string;\n}\nexport interface TokenExpiredMessage {\n  type: 'token-expired';\n}\n\nexport class WSObservable extends Observable<WSConnectionMsg> {\n  constructor(\n    db: DexieCloudDB,\n    rev: string,\n    realmSetHash: string,\n    clientIdentity: string,\n    messageProducer: Observable<WSClientToServerMsg>,\n    webSocketStatus: BehaviorSubject<DXCWebSocketStatus>,\n    user: UserLogin\n  ) {\n    super(\n      (subscriber) =>\n        new WSConnection(\n          db,\n          rev,\n          realmSetHash,\n          clientIdentity,\n          user,\n          subscriber,\n          messageProducer,\n          webSocketStatus\n        )\n    );\n  }\n}\n\nlet counter = 0;\n\nexport class WSConnection extends Subscription {\n  db: DexieCloudDB;\n  ws: WebSocket | null;\n  lastServerActivity: Date;\n  lastUserActivity: Date;\n  lastPing: Date;\n  databaseUrl: string;\n  rev: string;\n  realmSetHash: string;\n  clientIdentity: string;\n  user: UserLogin;\n  subscriber: Subscriber<WSConnectionMsg>;\n  pauseUntil?: Date;\n  messageProducer: Observable<WSClientToServerMsg>;\n  webSocketStatus: BehaviorSubject<DXCWebSocketStatus>;\n  id = ++counter;\n\n  private pinger: any;\n  private subscriptions: Set<Subscription> = new Set();\n\n  constructor(\n    db: DexieCloudDB,\n    rev: string,\n    realmSetHash: string,\n    clientIdentity: string,\n    user: UserLogin,\n    subscriber: Subscriber<WSConnectionMsg>,\n    messageProducer: Observable<WSClientToServerMsg>,\n    webSocketStatus: BehaviorSubject<DXCWebSocketStatus>\n  ) {\n    super(() => this.teardown());\n    console.debug(\n      'New WebSocket Connection',\n      this.id,\n      user.accessToken ? 'authorized' : 'unauthorized'\n    );\n    this.db = db;\n    this.databaseUrl = db.cloud.options!.databaseUrl;\n    this.rev = rev;\n    this.realmSetHash = realmSetHash;\n    this.clientIdentity = clientIdentity;\n    this.user = user;\n    this.subscriber = subscriber;\n    this.lastUserActivity = new Date();\n    this.messageProducer = messageProducer;\n    this.webSocketStatus = webSocketStatus;\n    this.connect();\n  }\n\n  private teardown() {\n    console.debug('Teardown WebSocket Connection', this.id);\n    this.disconnect();\n  }\n\n  private disconnect() {\n    this.webSocketStatus.next('disconnected');\n    if (this.pinger) {\n      clearInterval(this.pinger);\n      this.pinger = null;\n    }\n    if (this.ws) {\n      try {\n        this.ws.close();\n      } catch {}\n    }\n    this.ws = null;\n    for (const sub of this.subscriptions) {\n      sub.unsubscribe();\n    }\n    this.subscriptions.clear();\n  }\n\n  reconnecting = false;\n  reconnect() {\n    if (this.reconnecting) return;\n    this.reconnecting = true;\n    try {\n      this.disconnect();\n    } catch {}\n    this.connect()\n      .catch(() => {})\n      .then(() => (this.reconnecting = false)); // finally()\n  }\n\n  async connect() {\n    this.lastServerActivity = new Date();\n    if (this.pauseUntil && this.pauseUntil > new Date()) {\n      console.debug('WS not reconnecting just yet', {\n        id: this.id,\n        pauseUntil: this.pauseUntil,\n      });\n      return;\n    }\n    if (this.ws) {\n      throw new Error(`Called connect() when a connection is already open`);\n    }\n    if (!this.databaseUrl)\n      throw new Error(`Cannot connect without a database URL`);\n    if (this.closed) {\n      //console.debug('SyncStatus: DUBB: Ooops it was closed!');\n      return;\n    }\n    const tokenExpiration = this.user.accessTokenExpiration;\n    if (tokenExpiration && tokenExpiration < new Date()) {\n      this.subscriber.error(new TokenExpiredError()); // Will be handled in connectWebSocket.ts.\n      return;\n    }\n    this.webSocketStatus.next('connecting');\n    this.pinger = setInterval(async () => {\n      if (this.closed) {\n        console.debug('pinger check', this.id, 'CLOSED.');\n        this.teardown();\n        return;\n      }\n      if (this.ws) {\n        try {\n          this.ws.send(JSON.stringify({ type: 'ping' } as PingMessage));\n          setTimeout(() => {\n            console.debug(\n              'pinger setTimeout',\n              this.id,\n              this.pinger ? `alive` : 'dead'\n            );\n            if (!this.pinger) return;\n            if (this.closed) {\n              console.debug(\n                'pinger setTimeout',\n                this.id,\n                'subscription is closed'\n              );\n              this.teardown();\n              return;\n            }\n            if (\n              this.lastServerActivity <\n              new Date(Date.now() - SERVER_PING_TIMEOUT)\n            ) {\n              // Server inactive. Reconnect if user is active.\n              console.debug('pinger: server is inactive');\n              console.debug('pinger reconnecting');\n              this.reconnect();\n            } else {\n              console.debug('pinger: server still active');\n            }\n          }, SERVER_PING_TIMEOUT);\n        } catch {\n          console.debug('pinger catch error', this.id, 'reconnecting');\n          this.reconnect();\n        }\n      } else {\n        console.debug('pinger', this.id, 'reconnecting');\n        this.reconnect();\n      }\n    }, CLIENT_PING_INTERVAL);\n\n    // The following vars are needed because we must know which callback to ack when server sends it's ack to us.\n    const wsUrl = new URL(this.databaseUrl);\n    wsUrl.protocol = wsUrl.protocol === 'http:' ? 'ws' : 'wss';\n    const searchParams = new URLSearchParams();\n    if (this.subscriber.closed) return;\n    searchParams.set('v', '2');\n    searchParams.set('rev', this.rev);\n    searchParams.set('realmsHash', this.realmSetHash);\n    searchParams.set('clientId', this.clientIdentity);\n    if (this.user.accessToken) {\n      searchParams.set('token', this.user.accessToken);\n    }\n\n    // Connect the WebSocket to given url:\n    console.debug('dexie-cloud WebSocket create');\n    const ws = (this.ws = new WebSocket(`${wsUrl}/changes?${searchParams}`));\n    ws.binaryType = \"arraybuffer\";\n\n    ws.onclose = (event: Event) => {\n      if (!this.pinger) return;\n      console.debug('dexie-cloud WebSocket onclosed', this.id);\n      this.reconnect();\n    };\n\n    ws.onmessage = (event: MessageEvent) => {\n      if (!this.pinger) return;\n\n      this.lastServerActivity = new Date();\n      try {\n        const msg = typeof event.data === 'string'\n          ? TSON.parse(event.data) as\n            | WSConnectionMsg\n            | PongMessage\n            | ErrorMessage\n            | YServerMessage   \n          : decodeYMessage(new Uint8Array(event.data)) as\n            | YServerMessage;\n        console.debug('dexie-cloud WebSocket onmessage', msg.type, msg);\n        if (msg.type === 'error') {\n          throw new Error(`Error message from dexie-cloud: ${msg.error}`);\n        } else if (msg.type === 'aware') {\n          const docCache = DexieYProvider.getDocCache(this.db.dx);\n          const doc = docCache.find(msg.table, msg.k, msg.prop);\n          if (doc) {\n            const awareness = getDocAwareness(doc);\n            if (awareness) {\n              const awap = getAwarenessLibrary(this.db);\n              awap.applyAwarenessUpdate(\n                awareness,\n                msg.u,\n                'server',\n              );\n            }\n          }\n        } else if (msg.type === 'u-ack' || msg.type === 'u-reject' || msg.type === 'u-s' || msg.type === 'in-sync') {\n          applyYServerMessages([msg], this.db);\n        } else if (msg.type === 'doc-open') {\n          const docCache = DexieYProvider.getDocCache(this.db.dx);\n          const doc = docCache.find(msg.table, msg.k, msg.prop);\n          if (doc) {\n            getOpenDocSignal(doc).next(); // Make yHandler reopen the document on server.\n          }\n        } else if (msg.type === 'outdated-server-rev' || msg.type === 'y-complete-sync-done') {\n          // Won't happen but need this for typing.\n          throw new Error('Outdated server revision or y-complete-sync-done not expected over WebSocket - only in sync using fetch()');\n        } else if (msg.type !== 'pong') {\n          // Forward the request to our subscriber, wich is in messageFromServerQueue.ts (via connectWebSocket's subscribe() at the end!)\n          this.subscriber.next(msg);\n        }\n      } catch (e) {\n        this.subscriber.error(e);\n      }\n    };\n\n    try {\n      let everConnected = false;\n      await new Promise((resolve, reject) => {\n        ws.onopen = (event) => {\n          console.debug('dexie-cloud WebSocket onopen');\n          everConnected = true;\n          resolve(null);\n        };\n        ws.onerror = (event: ErrorEvent) => {\n          if (!everConnected) {\n            const error = event.error || new Error('WebSocket Error');\n            this.subscriber.error(error);\n            this.webSocketStatus.next('error');\n            reject(error);\n          } else {\n            this.reconnect();\n          }\n        };\n      });\n      this.subscriptions.add(this.messageProducer.subscribe(\n        (msg) => {\n          if (!this.closed) {\n            if (\n              msg.type === 'ready' &&\n              this.webSocketStatus.value !== 'connected'\n            ) {\n              this.webSocketStatus.next('connected');\n            }\n            console.debug('dexie-cloud WebSocket send', msg.type, msg);\n            if (msg.type === 'ready') {\n              // Ok, we are certain to have stored everything up until revision msg.rev.\n              // Update this.rev in case of reconnect - remember where we were and don't just start over!\n              this.rev = msg.rev; \n              // ... and then send along the request to the server so it would also be updated!\n              this.ws?.send(TSON.stringify(msg));\n            } else {\n              // If it's not a \"ready\" message, it's an YMessage.\n              // YMessages can be sent binary encoded.\n              this.ws?.send(encodeYMessage(msg));\n            }\n          }\n        }\n      ));\n      if (this.user.isLoggedIn && !isEagerSyncDisabled(this.db)) {\n        this.subscriptions.add(\n          createYClientUpdateObservable(this.db).subscribe(\n            this.db.messageProducer\n          )\n        );\n      }\n    } catch (error) {\n      this.pauseUntil = new Date(Date.now() + FAIL_RETRY_WAIT_TIME);\n    }\n  }\n}\n","import { Decoder, readAny, readBigUint64, readVarString, readVarUint8Array, } from 'lib0/decoding';\nexport function decodeYMessage(a) {\n    const decoder = new Decoder(a);\n    const type = readVarString(decoder);\n    if (type === 'outdated-server-rev') {\n        return { type };\n    }\n    if (type === 'y-complete-sync-done') {\n        return { type, yServerRev: readVarString(decoder) };\n    }\n    const table = readVarString(decoder);\n    const prop = readVarString(decoder);\n    switch (type) {\n        case 'u-ack':\n        case 'u-reject':\n            return {\n                type,\n                table,\n                prop,\n                i: Number(readBigUint64(decoder)),\n            };\n        default: {\n            const k = readAny(decoder);\n            switch (type) {\n                case 'in-sync':\n                    return { type, table, prop, k };\n                case 'aware':\n                    return {\n                        type,\n                        table,\n                        prop,\n                        k,\n                        u: readVarUint8Array(decoder),\n                    };\n                case 'doc-open':\n                    return {\n                        type,\n                        table,\n                        prop,\n                        k,\n                        serverRev: readAny(decoder),\n                        sv: readAny(decoder),\n                    };\n                case 'doc-close':\n                    return { type, table, prop, k };\n                case 'sv':\n                    return {\n                        type,\n                        table,\n                        prop,\n                        k,\n                        sv: readVarUint8Array(decoder),\n                    };\n                case 'u-c':\n                    return {\n                        type,\n                        table,\n                        prop,\n                        k,\n                        u: readVarUint8Array(decoder),\n                        i: Number(readBigUint64(decoder)),\n                    };\n                case 'u-s':\n                    return {\n                        type,\n                        table,\n                        prop,\n                        k,\n                        u: readVarUint8Array(decoder)\n                    };\n                default:\n                    throw new TypeError(`Unknown message type: ${type}`);\n            }\n        }\n    }\n}\n","import { Observable, from, merge, mergeMap, switchMap, tap } from 'rxjs';\nimport { YClientMessage, YUpdateFromClientRequest } from 'dexie-cloud-common';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { flatten } from '../helpers/flatten';\nimport { liveQuery } from 'dexie';\nimport { DEXIE_CLOUD_SYNCER_ID } from '../sync/DEXIE_CLOUD_SYNCER_ID';\nimport { listUpdatesSince } from './listUpdatesSince';\nimport { YDexieCloudSyncState } from './YDexieCloudSyncState';\n\nexport function createYClientUpdateObservable(\n  db: DexieCloudDB\n): Observable<YClientMessage> {\n  const yTableRecords = flatten(\n    db.tables\n      .filter(\n        (table) =>\n          db.cloud.schema?.[table.name]?.markedForSync && table.schema.yProps\n      )\n      .map((table) =>\n        table.schema.yProps!.map((p) => ({\n          table: table.name,\n          ydocProp: p.prop,\n          updatesTable: p.updatesTable,\n        }))\n      )\n  );\n  return merge(\n    ...yTableRecords.map(({ table, ydocProp, updatesTable }) => {\n      // Per updates table (table+prop combo), we first read syncer.unsentFrom,\n      // and then start listening for updates since that number.\n      const yTbl = db.table(updatesTable);\n      return from(yTbl.get(DEXIE_CLOUD_SYNCER_ID)).pipe(\n        switchMap((syncer: YDexieCloudSyncState) => {\n          let currentUnsentFrom = syncer?.unsentFrom || 1;\n          return from(\n            liveQuery(async () => {\n              const addedUpdates = await listUpdatesSince(\n                yTbl,\n                currentUnsentFrom\n              );\n              return addedUpdates\n                .filter((update) => update.f && update.f & 1) // Only include local updates\n                .map((update) => {\n                  return {\n                    type: 'u-c',\n                    table,\n                    prop: ydocProp,\n                    k: update.k,\n                    u: update.u,\n                    i: update.i,\n                  } satisfies YUpdateFromClientRequest;\n                });\n            })\n          ).pipe(\n            tap((addedUpdates) => {\n              // Update currentUnsentFrom to only listen for updates that will be newer than the ones we emitted.\n              // (Before, we did this within the liveQuery, but that caused a bug because\n              // a cancelled emittion of a liveQuery would update the currentUnsentFrom without\n              // emitting anything, leading to that we jumped over some updates. Here we update it\n              // after the liveQuery has emitted its updates)\n              if (addedUpdates.length > 0) {\n                currentUnsentFrom = addedUpdates.at(-1)!.i + 1;\n              }\n            })\n          );\n        })\n      );\n    })\n  ).pipe(\n    // Flatten the array of messages.\n    // If messageProducer emits empty array, nothing is emitted\n    // but if messageProducer emits array of messages, they are\n    // emitted one by one.\n    mergeMap((messages) => messages)\n  );\n}\n","export class InvalidLicenseError extends Error {\n  name = 'InvalidLicenseError';\n  license?: 'expired' | 'deactivated';\n  constructor(license?: 'expired' | 'deactivated') {\n    super(\n      license === 'expired'\n        ? `License expired`\n        : license === 'deactivated'\n        ? `User deactivated`\n        : 'Invalid license'\n    );\n    if (license) {\n      this.license = license;\n    }\n  }\n}\n","import { BehaviorSubject, firstValueFrom, from, Observable, of, throwError, merge } from 'rxjs';\nimport {\n  catchError,\n  combineLatestAll,\n  debounceTime,\n  delay,\n  distinctUntilChanged,\n  filter,\n  map,\n  mergeMap,\n  switchMap,\n  take,\n  tap,\n} from 'rxjs/operators';\nimport { refreshAccessToken } from '../authentication/authenticate';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { PersistedSyncState } from '../db/entities/PersistedSyncState';\nimport { computeRealmSetHash } from '../helpers/computeRealmSetHash';\nimport {\n  userDoesSomething,\n  userIsActive,\n  userIsReallyActive,\n} from '../userIsActive';\nimport {\n  ReadyForChangesMessage,\n  WSConnectionMsg,\n  WSObservable,\n} from '../WSObservable';\nimport { InvalidLicenseError } from '../InvalidLicenseError';\nimport { read } from 'fs';\n\nfunction sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nasync function waitAndReconnectWhenUserDoesSomething(error: Error) {\n  console.error(\n    `WebSocket observable: error but revive when user does some active thing...`,\n    error\n  );\n  // Sleep some seconds...\n  await sleep(3000);\n  // Wait til user does something (move mouse, tap, scroll, click etc)\n  console.debug('waiting for someone to do something');\n  await firstValueFrom(userDoesSomething);\n  console.debug('someone did something!');\n}\n\nexport function connectWebSocket(db: DexieCloudDB) {\n  if (!db.cloud.options?.databaseUrl) {\n    throw new Error(`No database URL to connect WebSocket to`);\n  }\n\n  const readyForChangesMessage = db.messageConsumer.readyToServe.pipe(\n    filter((isReady) => isReady), // When consumer is ready for new messages, produce such a message to inform server about it\n    switchMap(() => db.getPersistedSyncState()), // We need the info on which server revision we are at:\n    filter((syncState) => syncState && syncState.serverRevision), // We wont send anything to server before inital sync has taken place\n    switchMap<PersistedSyncState, Promise<ReadyForChangesMessage>>(async (syncState) => ({\n      // Produce the message to trigger server to send us new messages to consume:\n      type: 'ready',\n      rev: syncState.serverRevision,\n      realmSetHash: await computeRealmSetHash(syncState)\n    } satisfies ReadyForChangesMessage))\n  );\n\n  const messageProducer = merge(\n    readyForChangesMessage,\n    db.messageProducer\n  );\n\n  function createObservable(): Observable<WSConnectionMsg | null> {\n    return db.cloud.persistedSyncState.pipe(\n      filter((syncState) => syncState?.serverRevision), // Don't connect before there's no initial sync performed.\n      take(1), // Don't continue waking up whenever syncState change\n      switchMap((syncState) =>\n        db.cloud.currentUser.pipe(\n          map((userLogin) => [userLogin, syncState] as const)\n        )\n      ),\n      switchMap(([userLogin, syncState]) => {\n        /*if (userLogin.license?.status && userLogin.license.status !== 'ok') {\n          throw new InvalidLicenseError();\n        }*/\n        return userIsReallyActive.pipe(\n          map((isActive) => [isActive ? userLogin : null, syncState] as const)\n        );\n      }),\n      switchMap(([userLogin, syncState]) => {\n        if (userLogin?.isLoggedIn && !syncState?.realms.includes(userLogin.userId!)) {\n          // We're in an in-between state when user is logged in but the user's realms are not yet synced.\n          // Don't make this change reconnect the websocket just yet. Wait till syncState is updated\n          // to iclude the user's realm.\n          return db.cloud.persistedSyncState.pipe(\n            filter((syncState) => syncState?.realms.includes(userLogin!.userId!) || false),\n            take(1),\n            map((syncState) => [userLogin, syncState] as const)\n          );\n        }\n        return new BehaviorSubject([userLogin, syncState] as const);\n      }),\n      switchMap(\n        async ([userLogin, syncState]) =>\n          [userLogin, await computeRealmSetHash(syncState!)] as const\n      ),\n      distinctUntilChanged(([prevUser, prevHash], [currUser, currHash]) => prevUser === currUser && prevHash === currHash ),\n      switchMap(([userLogin, realmSetHash]) => {\n        if (!db.cloud.persistedSyncState?.value) {\n          // Restart the flow if persistedSyncState is not yet available.\n          return createObservable();\n        }\n        // Let server end query changes from last entry of same client-ID and forward.\n        // If no new entries, server won't bother the client. If new entries, server sends only those\n        // and the baseRev of the last from same client-ID.\n        if (userLogin) {\n          return new WSObservable(\n              db,\n              db.cloud.persistedSyncState!.value!.serverRevision,\n              realmSetHash,\n              db.cloud.persistedSyncState!.value!.clientIdentity,\n              messageProducer,\n              db.cloud.webSocketStatus,\n              userLogin\n            );\n        } else {\n          return from([] as WSConnectionMsg[]);\n        }}),\n      catchError((error) => {\n        if (error?.name === 'TokenExpiredError') {\n          console.debug(\n            'WebSocket observable: Token expired. Refreshing token...'\n          );\n          return of(true).pipe(\n            switchMap(async () => {\n              // Refresh access token\n              const user = await db.getCurrentUser();\n              const refreshedLogin = await refreshAccessToken(\n                db.cloud.options!.databaseUrl,\n                user\n              );\n              // Persist updated access token\n              await db.table('$logins').update(user.userId, {\n                accessToken: refreshedLogin.accessToken,\n                accessTokenExpiration: refreshedLogin.accessTokenExpiration,\n                claims: refreshedLogin.claims,\n                license: refreshedLogin.license,\n                data: refreshedLogin.data\n              });\n            }),\n            switchMap(() => createObservable())\n          );\n        } else {\n          return throwError(()=>error);\n        }\n      }),\n      catchError((error) => {\n        db.cloud.webSocketStatus.next(\"error\");\n        if (error instanceof InvalidLicenseError) {\n          // Don't retry. Just throw and don't try connect again.\n          return throwError(() => error);\n        }\n        return from(waitAndReconnectWhenUserDoesSomething(error)).pipe(\n          switchMap(() => createObservable())\n        );\n      })\n    ) as Observable<WSConnectionMsg | null>;\n  }\n\n  return createObservable().subscribe({\n    next: (msg) => {\n      if (msg) {\n        console.debug('WS got message', msg);\n        db.messageConsumer.enqueue(msg);\n      }\n    },\n    error: (error) => {\n      console.error('WS got error', error);\n    },\n    complete: () => {\n      console.debug('WS observable completed');\n    },\n  });\n}\n","import { DexieCloudDB } from \"../db/DexieCloudDB\";\nimport { sync } from \"./sync\";\n\nexport async function isSyncNeeded(db: DexieCloudDB) {\n  return db.cloud.options?.databaseUrl && db.cloud.schema\n    ? await sync(db, db.cloud.options, db.cloud.schema, {justCheckIfNeeded: true})\n    : false;\n}\n","import { IS_SERVICE_WORKER } from '../helpers/IS_SERVICE_WORKER';\nimport { performGuardedJob } from './performGuardedJob';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { sync, CURRENT_SYNC_WORKER, SyncOptions } from './sync';\nimport { DexieCloudOptions } from '../DexieCloudOptions';\nimport { assert, DexieCloudSchema } from 'dexie-cloud-common';\nimport { checkSyncRateLimitDelay } from './ratelimit';\n\nconst ongoingSyncs = new WeakMap<\n  DexieCloudDB,\n  { promise: Promise<void>; pull: boolean }\n>();\n\nexport function syncIfPossible(\n  db: DexieCloudDB,\n  cloudOptions: DexieCloudOptions,\n  cloudSchema: DexieCloudSchema,\n  options?: SyncOptions\n) {\n  const ongoing = ongoingSyncs.get(db);\n  if (ongoing) {\n    if (ongoing.pull || options?.purpose === 'push') {\n      console.debug('syncIfPossible(): returning the ongoing sync promise.');\n      return ongoing.promise;\n    } else {\n      // Ongoing sync may never do anything in case there are no outstanding changes\n      // to sync (because its purpose was \"push\" not \"pull\")\n      // Now, however, we are asked to do a sync with the purpose of \"pull\"\n      // We want to optimize here. We must wait for the ongoing to complete\n      // and then, if the ongoing sync never resulted in a sync request,\n      // we must redo the sync.\n\n      // To inspect what is happening in the ongoing request, let's subscribe\n      // to db.cloud.syncState and look for if it is doing any \"pulling\" phase:\n      let hasPullTakenPlace = false;\n      const subscription = db.cloud.syncState.subscribe((syncState) => {\n        if (syncState.phase === 'pulling') {\n          hasPullTakenPlace = true;\n        }\n      });\n      // Ok, so now we are watching. At the same time, wait for the ongoing to complete\n      // and when it has completed, check if we're all set or if we need to redo\n      // the call:\n      return (\n        ongoing.promise\n          // This is a finally block but we are still running tests on\n          // browsers that don't support it, so need to do it like this:\n          .then(() => {\n            subscription.unsubscribe();\n          })\n          .catch((error) => {\n            subscription.unsubscribe();\n            return Promise.reject(error);\n          })\n          .then(() => {\n            if (!hasPullTakenPlace) {\n              // No pull took place in the ongoing sync but the caller had \"pull\" as\n              // an explicit purpose of this call - so we need to redo the call!\n              return syncIfPossible(db, cloudOptions, cloudSchema, options);\n            }\n          })\n      );\n    }\n  }\n\n  const promise = _syncIfPossible();\n  ongoingSyncs.set(db, { promise, pull: options?.purpose !== 'push' });\n  return promise;\n\n  async function _syncIfPossible() {\n    try {\n      // Check if should delay sync due to ratelimit:\n      await checkSyncRateLimitDelay(db);      \n      await performGuardedJob(db, CURRENT_SYNC_WORKER, () =>\n        sync(db, cloudOptions, cloudSchema, options)\n      );\n      ongoingSyncs.delete(db);\n      console.debug('Done sync');\n    } catch (error) {\n      ongoingSyncs.delete(db);\n      console.error(`Failed to sync client changes`, error);\n      throw error; // Make sure we rethrow error so that sync event is retried.\n      // I don't think we should setTimout or so here.\n      // Unless server tells us to in some response.\n      // Then we could follow that advice but not by waiting here but by registering\n      // Something that triggers an event listened to in startPushWorker()\n    }\n  }\n}\n","export const SECONDS = 1000;\nexport const MINUTES = 60 * SECONDS;\nexport const HOURS = 60 * MINUTES;\nexport const DAYS = 24 * HOURS;\nexport const WEEKS = 7 * DAYS;\n","import Dexie from 'dexie';\nimport { Subscription } from 'rxjs';\nimport { syncIfPossible } from './syncIfPossible';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { MINUTES } from '../helpers/date-constants';\nimport { DexieCloudOptions } from '../DexieCloudOptions';\nimport { DexieCloudSchema } from 'dexie-cloud-common';\n\nexport function LocalSyncWorker(\n  db: DexieCloudDB,\n  cloudOptions: DexieCloudOptions,\n  cloudSchema: DexieCloudSchema\n) {\n  let localSyncEventSubscription: Subscription | null = null;\n  //let syncHandler: ((event: Event) => void) | null = null;\n  //let periodicSyncHandler: ((event: Event) => void) | null = null;\n  let cancelToken = { cancelled: false };\n\n  let retryHandle: any = null;\n  let retryPurpose: 'pull' | 'push' | null = null; // \"pull\" is superset of \"push\"\n\n  function syncAndRetry(purpose: 'pull' | 'push', retryNum = 1) {\n    // Use setTimeout() to get onto a clean stack and\n    // break free from possible active transaction:\n    setTimeout(() => {\n      if (retryHandle) clearTimeout(retryHandle);\n      const combPurpose = retryPurpose === 'pull' ? 'pull' : purpose;\n      retryHandle = null;\n      retryPurpose = null;\n      syncIfPossible(db, cloudOptions, cloudSchema, {\n        cancelToken,\n        retryImmediatelyOnFetchError: true, // workaround for \"net::ERR_NETWORK_CHANGED\" in chrome.\n        purpose: combPurpose,\n      }).catch((e) => {\n        console.error('error in syncIfPossible()', e);\n        if (cancelToken.cancelled) {\n          stop();\n        } else if (retryNum < 3) {\n\n          // Mimic service worker sync event: retry 3 times\n          // * first retry after 5 minutes\n          // * second retry 15 minutes later\n          const combinedPurpose = retryPurpose && retryPurpose === 'pull' ? 'pull' : purpose;\n\n          const handle = setTimeout(\n            () => syncAndRetry(combinedPurpose, retryNum + 1),\n            [0, 5, 15][retryNum] * MINUTES\n          );\n\n          // Cancel the previous retryHandle if it exists to avoid scheduling loads of retries.\n          if (retryHandle) clearTimeout(retryHandle);\n          retryHandle = handle;\n          retryPurpose = combinedPurpose;\n        }\n      });\n    }, 0);\n  }\n\n  const start = () => {\n    // Sync eagerly whenever a change has happened (+ initially when there's no syncState yet)\n    // This initial subscribe will also trigger an sync also now.\n    console.debug('Starting LocalSyncWorker', db.localSyncEvent['id']);\n    localSyncEventSubscription = db.localSyncEvent.subscribe(({ purpose }) => {\n      try {\n        syncAndRetry(purpose || 'pull');\n      } catch (err) {\n        console.error('What-the....', err);\n      }\n    });\n    //setTimeout(()=>db.localSyncEvent.next({}), 5000);\n  };\n\n  const stop = () => {\n    console.debug('Stopping LocalSyncWorker');\n    cancelToken.cancelled = true;\n    if (localSyncEventSubscription) localSyncEventSubscription.unsubscribe();\n  };\n\n  return {\n    start,\n    stop,\n  };\n}\n","import { DexieCloudSchema } from \"dexie-cloud-common\";\nimport { DexieCloudOptions } from \"./DexieCloudOptions\";\n\nexport function updateSchemaFromOptions(schema?: DexieCloudSchema | null, options?: DexieCloudOptions | null) {\n  if (schema && options) {\n    if (options.unsyncedTables) {\n      for (const tableName of options.unsyncedTables) {\n        if (schema[tableName]) {\n          schema[tableName].markedForSync = false;\n        }\n      }\n    }\n  }\n}","var n,l,u,i,t,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n)}function h(l,u,i){var t,o,r,f={};for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return v(l,f,t,o,null)}function v(n,i,t,o,r){var f={type:n,props:i,key:t,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==r?++u:r};return null==r&&null!=l.vnode&&l.vnode(f),f}function y(){return{current:null}}function p(n){return n.children}function d(n,l){this.props=n,this.context=l}function _(n,l){if(null==l)return n.__?_(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?_(n):null}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function b(n){(!n.__d&&(n.__d=!0)&&t.push(n)&&!g.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||setTimeout)(g)}function g(){for(var n;g.__r=t.length;)n=t.sort(function(n,l){return n.__v.__b-l.__v.__b}),t=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=s({},t)).__v=t.__v+1,j(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?_(t):o,t.__h),z(u,t),t.__e!=o&&k(t)))})}function w(n,l,u,i,t,o,r,c,s,a){var h,y,d,k,b,g,w,x=i&&i.__k||e,C=x.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k||\"bigint\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(p,{children:k},null,null,null):k.__b>0?v(k.type,k.props,k.key,null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(d=x[h])||d&&k.key==d.key&&k.type===d.type)x[h]=void 0;else for(y=0;y<C;y++){if((d=x[y])&&k.key==d.key&&k.type===d.type){x[y]=void 0;break}d=null}j(n,k,d=d||f,t,o,r,c,s,a),b=k.__e,(y=k.ref)&&d.ref!=y&&(w||(w=[]),d.ref&&w.push(d.ref,null,k),w.push(y,k.__c||b,k)),null!=b?(null==g&&(g=b),\"function\"==typeof k.type&&k.__k===d.__k?k.__d=s=m(k,s,n):s=A(n,k,d,x,b,s),\"function\"==typeof u.type&&(u.__d=s)):s&&d.__e==s&&s.parentNode!=n&&(s=_(d))}for(u.__e=g,h=C;h--;)null!=x[h]&&(\"function\"==typeof u.type&&null!=x[h].__e&&x[h].__e==u.__d&&(u.__d=_(i,h+1)),N(x[h],x[h]));if(w)for(h=0;h<w.length;h++)M(w[h],w[++h],w[++h])}function m(n,l,u){for(var i,t=n.__k,o=0;t&&o<t.length;o++)(i=t[o])&&(i.__=n,l=\"function\"==typeof i.type?m(i,l,u):A(u,i,i,t,i.__e,l));return l}function x(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){x(n,l)}):l.push(n)),l}function A(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=2)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function C(n,l,u,i,t){var o;for(o in u)\"children\"===o||\"key\"===o||o in l||H(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"children\"===o||\"key\"===o||\"value\"===o||\"checked\"===o||u[o]===l[o]||H(n,o,l[o],u[o],i)}function $(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=null==u?\"\":\"number\"!=typeof u||c.test(l)?u:u+\"px\"}function H(n,l,u,i,t){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||$(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||$(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?T:I,o):n.removeEventListener(l,o?T:I,o);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null!=u&&(!1!==u||\"a\"===l[0]&&\"r\"===l[1])?n.setAttribute(l,u):n.removeAttribute(l))}}function I(n){this.l[n.type+!1](l.event?l.event(n):n)}function T(n){this.l[n.type+!0](l.event?l.event(n):n)}function j(n,u,i,t,o,r,f,e,c){var a,h,v,y,_,k,b,g,m,x,A,C,$,H=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(c=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=l.__b)&&a(u);try{n:if(\"function\"==typeof H){if(g=u.props,m=(a=H.contextType)&&t[a.__c],x=a?m?m.props.value:a.__:t,i.__c?b=(h=u.__c=i.__c).__=h.__E:(\"prototype\"in H&&H.prototype.render?u.__c=h=new H(g,x):(u.__c=h=new d(g,x),h.constructor=H,h.render=O),m&&m.sub(h),h.props=g,h.state||(h.state={}),h.context=x,h.__n=t,v=h.__d=!0,h.__h=[]),null==h.__s&&(h.__s=h.state),null!=H.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=s({},h.__s)),s(h.__s,H.getDerivedStateFromProps(g,h.__s))),y=h.props,_=h.state,v)null==H.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==H.getDerivedStateFromProps&&g!==y&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(g,x),!h.__e&&null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(g,h.__s,x)||u.__v===i.__v){h.props=g,h.state=h.__s,u.__v!==i.__v&&(h.__d=!1),h.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(g,h.__s,x),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(y,_,k)})}if(h.context=x,h.props=g,h.__v=u,h.__P=n,A=l.__r,C=0,\"prototype\"in H&&H.prototype.render)h.state=h.__s,h.__d=!1,A&&A(u),a=h.render(h.props,h.state,h.context);else do{h.__d=!1,A&&A(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&&++C<25);h.state=h.__s,null!=h.getChildContext&&(t=s(s({},t),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(k=h.getSnapshotBeforeUpdate(y,_)),$=null!=a&&a.type===p&&null==a.key?a.props.children:a,w(n,Array.isArray($)?$:[$],u,i,t,o,r,f,e,c),h.base=u.__e,u.__h=null,h.__h.length&&f.push(h),b&&(h.__E=h.__=null),h.__e=!1}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=L(i.__e,u,i,t,o,r,f,c);(a=l.diffed)&&a(u)}catch(n){u.__v=null,(c||null!=r)&&(u.__e=e,u.__h=!!c,r[r.indexOf(e)]=null),l.__e(n,u,i)}}function z(n,u){l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function L(l,u,i,t,o,r,e,c){var s,h,v,y=i.props,p=u.props,d=u.type,k=0;if(\"svg\"===d&&(o=!0),null!=r)for(;k<r.length;k++)if((s=r[k])&&\"setAttribute\"in s==!!d&&(d?s.localName===d:3===s.nodeType)){l=s,r[k]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",d):document.createElement(d,p.is&&p),r=null,c=!1}if(null===d)y===p||c&&l.data===p||(l.data=p);else{if(r=r&&n.call(l.childNodes),h=(y=i.props||f).dangerouslySetInnerHTML,v=p.dangerouslySetInnerHTML,!c){if(null!=r)for(y={},k=0;k<l.attributes.length;k++)y[l.attributes[k].name]=l.attributes[k].value;(v||h)&&(v&&(h&&v.__html==h.__html||v.__html===l.innerHTML)||(l.innerHTML=v&&v.__html||\"\"))}if(C(l,p,y,o,c),v)u.__k=[];else if(k=u.props.children,w(l,Array.isArray(k)?k:[k],u,i,t,o&&\"foreignObject\"!==d,r,e,r?r[0]:i.__k&&_(i,0),c),null!=r)for(k=r.length;k--;)null!=r[k]&&a(r[k]);c||(\"value\"in p&&void 0!==(k=p.value)&&(k!==l.value||\"progress\"===d&&!k||\"option\"===d&&k!==y.value)&&H(l,\"value\",k,y.value,!1),\"checked\"in p&&void 0!==(k=p.checked)&&k!==l.checked&&H(l,\"checked\",k,y.checked,!1))}return l}function M(n,u,i){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function N(n,u,i){var t,o;if(l.unmount&&l.unmount(n),(t=n.ref)&&(t.current&&t.current!==n.__e||M(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null}if(t=n.__k)for(o=0;o<t.length;o++)t[o]&&N(t[o],u,\"function\"!=typeof n.type);i||null==n.__e||a(n.__e),n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function P(u,i,t){var o,r,e;l.__&&l.__(u,i),r=(o=\"function\"==typeof t)?null:t&&t.__k||i.__k,e=[],j(i,u=(!o&&t||i).__k=h(p,null,[u]),r||f,f,void 0!==i.ownerSVGElement,!o&&t?[t]:r?null:i.firstChild?n.call(i.childNodes):null,e,!o&&t?t:r?r.__e:i.firstChild,o),z(e,u)}function S(n,l){P(n,l,S)}function q(l,u,i){var t,o,r,f=s({},l.props);for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];return arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),v(l.type,f,t||l.key,o||l.ref,null)}function B(n,l){var u={__c:l=\"__cC\"+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(b)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=e.slice,l={__e:function(n,l,u,i){for(var t,o,r;l=l.__;)if((t=l.__c)&&!t.__)try{if((o=t.constructor)&&null!=o.getDerivedStateFromError&&(t.setState(o.getDerivedStateFromError(n)),r=t.__d),null!=t.componentDidCatch&&(t.componentDidCatch(n,i||{}),r=t.__d),r)return t.__E=t}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&&void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=s({},this.state),\"function\"==typeof n&&(n=n(s({},u),this.props)),n&&s(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),b(this))},d.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),b(this))},d.prototype.render=p,t=[],g.__r=0,r=0;export{P as render,S as hydrate,h as createElement,h,p as Fragment,y as createRef,i as isValidElement,d as Component,q as cloneElement,B as createContext,x as toChildArray,l as options};\n//# sourceMappingURL=preact.module.js.map\n","export const Styles: { [styleAlias: string]: Partial<CSSStyleDeclaration> | any} = {\n  Error: {\n    color: \"red\",\n  },\n  Alert: {\n    error: {\n      color: \"red\",\n      fontWeight: \"bold\"\n    },\n    warning: {\n      color: \"#f80\",\n      fontWeight: \"bold\"\n    },\n    info: {\n      color: \"black\"\n    }\n  },\n  Darken: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    opacity: 0.5,\n    backgroundColor: \"#000\",\n    width: \"100vw\",\n    height: \"100vh\",\n    zIndex: 150,\n    webkitBackdropFilter: \"blur(2px)\",\n    backdropFilter: \"blur(2px)\",\n  },\n  DialogOuter: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vh\",\n    zIndex: 150,\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  DialogInner: {\n    position: \"relative\",\n    color: \"#222\",\n    backgroundColor: \"#fff\",\n    padding: \"30px\",\n    marginBottom: \"2em\",\n    maxWidth: \"90%\",\n    maxHeight: \"90%\",\n    overflowY: \"auto\",\n    border: \"3px solid #3d3d5d\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 0 80px 10px #666\",\n    width: \"auto\",\n    fontFamily: \"sans-serif\",\n  },\n  Input: {\n    height: \"35px\",\n    width: \"17em\",\n    borderColor: \"#ccf4\",\n    outline: \"none\",\n    fontSize: \"17pt\",\n    padding: \"8px\"\n  \n  }\n};\n","import { Styles } from './Styles';\nimport { ComponentChildren, h } from 'preact';\n\nexport function Dialog({ children, className }: { children?: ComponentChildren, className?: string }) {\n  return (\n    <div className={className}>\n      <div style={Styles.Darken} />\n      <div style={Styles.DialogOuter}>\n        <div style={Styles.DialogInner}>{children}</div>\n      </div>\n    </div>\n  );\n}\n","import{options as n}from\"preact\";var t,r,u,i,o=0,c=[],f=[],e=n.__b,a=n.__r,v=n.diffed,l=n.__c,m=n.unmount;function d(t,u){n.__h&&n.__h(r,t,o||u),o=0;var i=r.__H||(r.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({__V:f}),i.__[t]}function p(n){return o=1,y(z,n)}function y(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):z(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){r.u=!0;var c=r.shouldComponentUpdate;r.shouldComponentUpdate=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});if(u.every(function(n){return!n.__N}))return!c||c.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!!i&&(!c||c.call(this,n,t,r))}}return o.__N||o.__}function h(u,i){var o=d(t++,3);!n.__s&&w(o.__H,i)&&(o.__=u,o.i=i,r.__H.__h.push(o))}function s(u,i){var o=d(t++,4);!n.__s&&w(o.__H,i)&&(o.__=u,o.i=i,r.__h.push(o))}function _(n){return o=5,F(function(){return{current:n}},[])}function A(n,t,r){o=6,s(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function F(n,r){var u=d(t++,7);return w(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function T(n,t){return o=8,F(function(){return n},t)}function q(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function x(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}function V(n){var u=d(t++,10),i=p();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n){u.__&&u.__(n),i[1](n)}),[i[0],function(){i[1](void 0)}]}function b(){for(var t;t=c.shift();)if(t.__P&&t.__H)try{t.__H.__h.forEach(j),t.__H.__h.forEach(k),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){r=null,e&&e(n)},n.__r=function(n){a&&a(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=f,n.__N=n.i=void 0})):(i.__h.forEach(j),i.__h.forEach(k),i.__h=[])),u=r},n.diffed=function(t){v&&v(t);var o=t.__c;o&&o.__H&&(o.__H.__h.length&&(1!==c.push(o)&&i===n.requestAnimationFrame||((i=n.requestAnimationFrame)||function(n){var t,r=function(){clearTimeout(u),g&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);g&&(t=requestAnimationFrame(r))})(b)),o.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==f&&(n.__=n.__V),n.i=void 0,n.__V=f})),u=r=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(j),t.__h=t.__h.filter(function(n){return!n.__||k(n)})}catch(u){r.some(function(n){n.__h&&(n.__h=[])}),r=[],n.__e(u,t.__v)}}),l&&l(t,r)},n.unmount=function(t){m&&m(t);var r,u=t.__c;u&&u.__H&&(u.__H.__.forEach(function(n){try{j(n)}catch(n){r=n}}),r&&n.__e(r,u.__v))};var g=\"function\"==typeof requestAnimationFrame;function j(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function k(n){var t=r;n.__c=n.__(),r=t}function w(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function z(n,t){return\"function\"==typeof t?t(n):t}export{p as useState,y as useReducer,h as useEffect,s as useLayoutEffect,_ as useRef,A as useImperativeHandle,F as useMemo,T as useCallback,q as useContext,x as useDebugValue,V as useErrorBoundary};\n//# sourceMappingURL=hooks.module.js.map\n","import { Dialog } from './Dialog';\nimport { Styles } from './Styles';\nimport { h, Fragment } from 'preact';\nimport { useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { DXCUserInteraction } from '../types/DXCUserInteraction';\nimport { resolveText } from '../helpers/resolveText';\nimport { DXCInputField } from '../types/DXCInputField';\n\nconst OTP_LENGTH = 8;\n\nexport function LoginDialog({\n  title,\n  type,\n  alerts,\n  fields,\n  submitLabel,\n  cancelLabel,\n  onCancel,\n  onSubmit,\n}: DXCUserInteraction) {\n  const [params, setParams] = useState<{ [param: string]: string }>({});\n\n  const firstFieldRef = useRef<HTMLInputElement>(null);\n  useLayoutEffect(() => firstFieldRef.current?.focus(), []);\n\n  return (\n    <Dialog className=\"dxc-login-dlg\">\n      <>\n        <h3 style={Styles.WindowHeader}>{title}</h3>\n        {alerts.map((alert) => (\n          <p style={Styles.Alert[alert.type]}>{resolveText(alert)}</p>\n        ))}\n        <form\n          onSubmit={(ev) => {\n            ev.preventDefault();\n            onSubmit(params);\n          }}\n        >\n          {(Object.entries(fields) as [string, DXCInputField][]).map(\n            ([fieldName, { type, label, placeholder }], idx) => (\n              <label style={Styles.Label} key={idx}>\n                {label ? `${label}: ` : ''}\n                <input\n                  ref={idx === 0 ? firstFieldRef : undefined}\n                  type={type}\n                  name={fieldName}\n                  autoComplete=\"on\"\n                  style={Styles.Input}\n                  autoFocus\n                  placeholder={placeholder}\n                  value={params[fieldName] || ''}\n                  onInput={(ev) => {\n                    const value = valueTransformer(type, ev.target?.['value']);\n                    let updatedParams = {\n                      ...params,\n                      [fieldName]: value,\n                    };\n                    setParams(updatedParams);\n                    if (type === 'otp' && value?.trim().length === OTP_LENGTH) {\n                      // Auto-submit when OTP is filled in.\n                      onSubmit(updatedParams);\n                    }\n                  }}\n                />\n              </label>\n            )\n          )}\n        </form>\n      </>\n      <div style={Styles.ButtonsDiv}>\n        <>\n          <button\n            type=\"submit\"\n            style={Styles.Button}\n            onClick={() => onSubmit(params)}\n          >\n            {submitLabel}\n          </button>\n          {cancelLabel && (\n            <button style={Styles.Button} onClick={onCancel}>\n              {cancelLabel}\n            </button>\n          )}\n        </>\n      </div>\n    </Dialog>\n  );\n}\n\nfunction valueTransformer(type: string, value: string) {\n  switch (type) {\n    case 'email':\n      return value.toLowerCase();\n    case 'otp':\n      return value.toUpperCase();\n    default:\n      return value;\n  }\n}\n","import { DXCAlert } from \"../types/DXCAlert\";\n\n/** Resolve a message template with parameters.\n * \n * Example:\n *  resolveText({\n *    message: \"Hello {name}!\",\n *    messageCode: \"HELLO\",\n *    messageParams: {name: \"David\"}\n *  }) => \"Hello David!\"\n *  \n * @param message Template message with {vars} in it.\n * @param messageCode Unique code for the message. Can be used for translation.\n * @param messageParams Parameters to be used in the message.\n * @returns A final message where parameters have been replaced with values.\n */\nexport function resolveText({message, messageCode, messageParams}: DXCAlert) {\n  return message.replace(/\\{\\w+\\}/ig, n => messageParams[n.substring(1, n.length-1)]);\n}\n","import Dexie from \"dexie\";\nimport \"../extend-dexie-interface\";\nimport { h, Component } from \"preact\";\nimport { from, Subscription } from \"rxjs\";\nimport { LoginDialog } from './LoginDialog';\nimport { DXCUserInteraction } from \"../types/DXCUserInteraction\";\nimport * as preact from \"preact\";\n\nexport interface Props {\n  db: Dexie;\n}\n\ninterface State {\n  userInteraction: DXCUserInteraction | undefined;\n}\n\nexport default class LoginGui extends Component<Props, State> {\n  subscription?: Subscription;\n  observer = (userInteraction: DXCUserInteraction | undefined) => this.setState({userInteraction});\n\n  constructor(props: Props) {\n    super(props);\n    this.state = { userInteraction: undefined };\n  }\n\n  componentDidMount() {\n    this.subscription = from(this.props.db.cloud.userInteraction).subscribe(this.observer);\n  }\n\n  componentWillUnmount() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      delete this.subscription;\n    }\n  }\n\n  render(props: Props, {userInteraction}: State) {\n    if (!userInteraction) return null;\n    //if (props.db.cloud.userInteraction.observers.length > 1) return null; // Someone else subscribes.\n    return <LoginDialog {...userInteraction} />;\n  }\n}\n\nexport function setupDefaultGUI(db: Dexie) {\n  let closed = false;\n\n  const el = document.createElement('div');\n  if (document.body) {\n    document.body.appendChild(el);\n    preact.render(<LoginGui db={db.vip} />, el);\n  } else {\n    addEventListener('DOMContentLoaded', ()=>{\n      if (!closed) {\n        document.body.appendChild(el);\n        preact.render(<LoginGui db={db.vip} />, el);\n      }\n    });\n  }\n\n  return {\n    unsubscribe() {\n      try { el.remove(); } catch {}\n      closed = true;\n    },\n    get closed() {\n      return closed;\n    }\n  }\n}\n","export function associate<T extends object,M>(factory: (x: T)=>M): (x: T) => M {\n  const wm = new WeakMap<T, M>();\n  return (x: T) => {\n    let rv = wm.get(x);\n    if (!rv) {\n      rv = factory(x);\n      wm.set(x, rv);\n    }\n    return rv;\n  }\n}\n","import Dexie from \"dexie\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { associate } from \"./associate\";\nimport { UNAUTHORIZED_USER } from \"./authentication/UNAUTHORIZED_USER\";\n\nexport const getCurrentUserEmitter = associate((db: Dexie) => new BehaviorSubject(UNAUTHORIZED_USER));\n","import {\n  concat,\n  from,\n  InteropObservable,\n  map,\n  Observable,\n  ObservableInput,\n  share,\n  timer,\n} from 'rxjs';\nimport { ObservableWithCurrentValue } from './mapValueObservable';\n\nexport function createSharedValueObservable<T>(\n  o: ObservableInput<T>,\n  defaultValue: T\n): ObservableWithCurrentValue<T> {\n  let currentValue = defaultValue;\n  let shared = from(o).pipe(\n    map((x) => (currentValue = x)),\n    share({ resetOnRefCountZero: () => timer(1000) })\n  ) as ObservableWithCurrentValue<T>;\n\n  const rv = new Observable((observer) => {\n    let didEmit = false;\n    const subscription = shared.subscribe({\n      next(value) {\n        didEmit = true;\n        observer.next(value);\n      },\n      error(error) {\n        observer.error(error);\n      },\n      complete() {\n        observer.complete();\n      }\n    });\n    if (!didEmit && !subscription.closed) {\n      observer.next(currentValue);\n    }\n    return subscription;\n  }) as ObservableWithCurrentValue<T>;\n\n  rv.getValue = () => currentValue;\n  return rv;\n}\n","import Dexie, { liveQuery } from 'dexie';\nimport { DBRealmRole } from 'dexie-cloud-common';\nimport { associate } from './associate';\nimport { createSharedValueObservable } from './createSharedValueObservable';\n\nexport const getGlobalRolesObservable = associate((db: Dexie) => {\n  return createSharedValueObservable(\n    liveQuery(() =>\n      db.roles\n        .where({ realmId: 'rlm-public' })\n        .toArray()\n        .then((roles) => {\n          const rv: { [roleName: string]: DBRealmRole } = {};\n          for (const role of roles\n            .slice()\n            .sort((a, b) => (a.sortOrder || 0) - (b.sortOrder || 0))) {\n            rv[role.name] = role;\n          }\n          return rv;\n        })\n    ),\n    {}\n  );\n});\n","import Dexie, { liveQuery } from 'dexie';\nimport { DBRealm, DBRealmMember } from 'dexie-cloud-common';\nimport { concat, Observable, timer } from 'rxjs';\nimport { share, switchMap } from 'rxjs/operators';\nimport { associate } from './associate';\nimport { createSharedValueObservable } from './createSharedValueObservable';\nimport { getCurrentUserEmitter } from './currentUserEmitter';\n\nexport type InternalAccessControlData = {\n  readonly selfMembers: DBRealmMember[];\n  readonly realms: DBRealm[];\n  readonly userId: string;\n};\n\nexport const getInternalAccessControlObservable = associate((db: Dexie) => {\n  return createSharedValueObservable(\n    getCurrentUserEmitter(db._novip).pipe(\n      switchMap((currentUser) =>\n        liveQuery(() =>\n          db.transaction('r', 'realms', 'members', () =>\n            Promise.all([\n              db.members.where({ userId: currentUser.userId }).toArray(),\n              db.realms.toArray(),\n              currentUser.userId!,\n            ] as const).then(([selfMembers, realms, userId]) => {\n              //console.debug(`PERMS: Result from liveQUery():`, JSON.stringify({selfMembers, realms, userId}, null, 2))\n              return { selfMembers, realms, userId };\n            })\n          )\n        )\n      )\n    ), {\n      selfMembers: [],\n      realms: [],\n      get userId() {\n        return db.cloud.currentUserId;\n      },\n    }\n  );\n  /* let refCount = 0;\n  return new Observable(observer => {\n    const subscription = o.subscribe(observer);\n    console.debug ('PERMS subscribe', ++refCount);\n    return {\n      unsubscribe() {\n        console.debug ('PERMS unsubscribe', --refCount);\n        subscription.unsubscribe();\n      }\n    }\n  })*/\n});\n","// TODO: Move to dexie-cloud-common\n\nimport { DBPermissionSet } from 'dexie-cloud-common';\n\nexport function mergePermissions(\n  ...permissions: DBPermissionSet[]\n): DBPermissionSet {\n  if (permissions.length === 0) return {};\n  const reduced = permissions.reduce((result, next) => {\n    const ret = { ...result } as DBPermissionSet;\n    for (const [verb, rights] of Object.entries(next) as [\n      keyof DBPermissionSet,\n      DBPermissionSet[keyof DBPermissionSet]\n    ][]) {\n      if (verb in ret && ret[verb]) {\n        if (ret[verb] === '*') continue;\n        if (rights === '*') {\n          ret[verb] = '*';\n        } else if (Array.isArray(rights) && Array.isArray(ret[verb])) {\n          // Both are arrays (verb is 'add' or 'manage')\n          const r = ret as { [v in typeof verb]?: string[] };\n          const retVerb = r[verb]!; // \"!\" because Array.isArray(ret[verb])\n          r[verb] = [...new Set([...retVerb, ...rights])];\n        } else if (\n          typeof rights === 'object' &&\n          rights &&\n          typeof ret[verb] === 'object'\n        ) {\n          // Both are objects (verb is 'update')\n          const mergedRights = ret[verb] as {\n            [tableName: string]: '*' | string[];\n          }; // because we've checked that typeof ret[verb] === 'object' and earlier that not ret[verb] === '*'.\n          for (const [tableName, tableRights] of Object.entries(rights) as [\n            string,\n            string[] | '*'\n          ][]) {\n            if (mergedRights[tableName] === '*') continue;\n            if (tableRights === '*') {\n              mergedRights[tableName] = '*';\n            } else if (\n              Array.isArray(mergedRights[tableName]) &&\n              Array.isArray(tableRights)\n            ) {\n              mergedRights[tableName] = [\n                ...new Set([...mergedRights[tableName], ...tableRights]),\n              ];\n            }\n          }\n        }\n      } else {\n        /* This compiles without type assertions. Keeping the comment to\n           explain why we do tsignore on the next statement.\n        if (verb === \"add\") {\n          ret[verb] = next[verb];\n        } else if (verb === \"update\") {\n          ret[verb] = next[verb];\n        } else if (verb === \"manage\") {\n          ret[verb] = next[verb];\n        } else {\n          ret[verb] = next[verb];\n        }\n        */\n        //@ts-ignore\n        ret[verb] = next[verb];\n      }\n    }\n    return ret;\n  });\n  return reduced;\n}\n","import Dexie from 'dexie';\nimport { DBPermissionSet, DBRealm, DBRealmMember } from 'dexie-cloud-common';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, startWith, tap } from 'rxjs/operators';\nimport { associate } from './associate';\nimport { UNAUTHORIZED_USER } from './authentication/UNAUTHORIZED_USER';\nimport { createSharedValueObservable } from './createSharedValueObservable';\nimport { getGlobalRolesObservable } from './getGlobalRolesObservable';\nimport { getInternalAccessControlObservable } from './getInternalAccessControlObservable';\nimport { flatten } from './helpers/flatten';\nimport { mapValueObservable } from './mapValueObservable';\nimport { mergePermissions } from './mergePermissions';\n\nexport type PermissionsLookup = {\n  [realmId: string]: DBRealm & { permissions: DBPermissionSet };\n};\n\nexport type PermissionsLookupObservable = Observable<PermissionsLookup> & {\n  getValue(): PermissionsLookup;\n};\n\nexport const getPermissionsLookupObservable = associate((db: Dexie) => {\n  const o = createSharedValueObservable(\n    combineLatest([\n      getInternalAccessControlObservable(db._novip),\n      getGlobalRolesObservable(db._novip),\n    ]).pipe(\n      map(([{ selfMembers, realms, userId }, globalRoles]) => ({\n        selfMembers,\n        realms,\n        userId,\n        globalRoles,\n      }))\n    ),\n    {\n      selfMembers: [],\n      realms: [],\n      userId: UNAUTHORIZED_USER.userId!,\n      globalRoles: {},\n    }\n  );\n\n  return mapValueObservable(\n    o,\n    ({ selfMembers, realms, userId, globalRoles }) => {\n      const rv = realms\n        .map((realm) => {\n          const selfRealmMembers = selfMembers.filter(\n            (m) => m.realmId === realm.realmId\n          );\n          const directPermissionSets = selfRealmMembers\n            .map((m) => m.permissions!)\n            .filter((p) => p);\n          const rolePermissionSets = flatten(\n            selfRealmMembers.map((m) => m.roles!).filter((roleName) => roleName)\n          )\n            .map((role) => globalRoles[role]!)\n            .filter((role) => role)\n            .map((role) => role.permissions);\n\n          return {\n            ...realm,\n            permissions:\n              realm.owner === userId\n                ? ({ manage: '*' } as DBPermissionSet)\n                : mergePermissions(\n                    ...directPermissionSets,\n                    ...rolePermissionSets\n                  ),\n          };\n        })\n        .reduce((p, c) => ({ ...p, [c.realmId]: c }), {\n          [userId!]: {\n            realmId: userId,\n            owner: userId,\n            name: userId,\n            permissions: { manage: '*' },\n          } as DBRealm & { permissions: DBPermissionSet },\n        });\n      return rv;\n    }\n  );\n});\n","import { map, Observable } from 'rxjs';\n\nexport interface ObservableWithCurrentValue<T> extends Observable<T> {\n  getValue(): T;\n}\n\nexport function mapValueObservable<T, R>(\n  o: ObservableWithCurrentValue<T>,\n  mapper: (x: T) => R\n): ObservableWithCurrentValue<R> {\n  let currentValue: R | undefined;\n  const rv = o.pipe(\n    map((x) => (currentValue = mapper(x)))\n  ) as ObservableWithCurrentValue<R>;\n  rv.getValue = () =>\n    currentValue !== undefined\n      ? currentValue\n      : (currentValue = mapper(o.getValue()));\n  return rv;\n}\n","import { KeyPaths } from 'dexie';\nimport { DBPermissionSet } from 'dexie-cloud-common';\n\ntype TableName<T> = T extends {table: ()=>infer TABLE} ? TABLE extends string ? TABLE : string : string;\n\nexport class PermissionChecker<T, TableNames extends string = TableName<T>> {\n  private permissions: DBPermissionSet;\n  private tableName: TableNames;\n  private isOwner: boolean;\n\n  constructor(\n    permissions: DBPermissionSet,\n    tableName: TableNames,\n    isOwner: boolean\n  ) {\n    this.permissions = permissions || {};\n    this.tableName = tableName;\n    this.isOwner = isOwner;\n  }\n\n  add(...tableNames: TableNames[]): boolean {\n    // If user can manage the whole realm, return true.\n    if (this.permissions.manage === '*') return true;\n    // If user can manage given table in realm, return true\n    if (this.permissions.manage?.includes(this.tableName)) return true;\n    // If user can add any type, return true\n    if (this.permissions.add === '*') return true;\n    // If user can add objects into given table names in the realm, return true\n    if (\n      tableNames.every((tableName) => this.permissions.add?.includes(tableName))\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  update(...props: KeyPaths<T>[]): boolean {\n    // If user is owner of this object, or if user can manage the whole realm, return true.\n    if (this.isOwner || this.permissions.manage === '*') return true;\n    // If user can manage given table in realm, return true\n    if (this.permissions.manage?.includes(this.tableName)) return true;\n    // If user can update any prop in any table in this realm, return true unless\n    // it regards to ownership change:\n    if (this.permissions.update === '*') {\n      // @ts-ignore\n      return props.every((prop) => prop !== 'owner');\n    }\n    const tablePermissions = this.permissions.update?.[this.tableName];\n    // If user can update any prop in table and realm, return true unless\n    // accessing special props owner or realmId\n    if (tablePermissions === '*')\n      return props.every((prop) => prop !== 'owner');\n\n    // Explicitely listed properties to allow updates on:\n    return props.every((prop) =>\n      tablePermissions?.some(\n        (permittedProp) =>\n          permittedProp === prop || (permittedProp === '*' && prop !== 'owner')\n      )\n    );\n  }\n\n  delete(): boolean {\n    // If user is owner of this object, or if user can manage the whole realm, return true.\n    if (this.isOwner || this.permissions.manage === '*') return true;\n    // If user can manage given table in realm, return true\n    if (this.permissions.manage?.includes(this.tableName)) return true;\n    return false;\n  }\n}\n","import { Dexie, liveQuery } from 'dexie';\nimport { DBRealmMember } from 'dexie-cloud-common';\nimport { combineLatest } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { associate } from './associate';\nimport { createSharedValueObservable } from './createSharedValueObservable';\nimport { getCurrentUserEmitter } from './currentUserEmitter';\nimport { getInternalAccessControlObservable } from './getInternalAccessControlObservable';\nimport { getPermissionsLookupObservable } from './getPermissionsLookupObservable';\nimport { Invite } from './Invite';\nimport { mapValueObservable } from './mapValueObservable';\n\nexport const getInvitesObservable = associate((db: Dexie) => {\n  const membersByEmail = getCurrentUserEmitter(db._novip).pipe(\n    switchMap((currentUser) =>\n      liveQuery(() =>\n        db.members.where({ email: currentUser.email || '' }).toArray()\n      )\n    )\n  );\n  const permissions = getPermissionsLookupObservable(db._novip);\n  const accessControl = getInternalAccessControlObservable(db._novip);\n  return createSharedValueObservable(\n    combineLatest([membersByEmail, accessControl, permissions]).pipe(\n      map(([membersByEmail, accessControl, realmLookup]) => {\n        const reducer = (\n          result: { [id: string]: Invite },\n          m: DBRealmMember\n        ) => ({ ...result, [m.id!]: { ...m, realm: realmLookup[m.realmId] } });\n        const emailMembersById = membersByEmail.reduce(reducer, {});\n        const membersById = accessControl.selfMembers.reduce(\n          reducer,\n          emailMembersById\n        );\n        return Object.values(membersById)\n          .filter((invite: DBRealmMember) => !invite.accepted)\n          .map(\n            (invite: DBRealmMember) =>\n              ({\n                ...invite,\n                async accept() {\n                  await db.members.update(invite.id!, { accepted: new Date() });\n                },\n                async reject() {\n                  await db.members.update(invite.id!, { rejected: new Date() });\n                },\n              } satisfies Invite)\n          );\n      })\n    ),\n    []\n  );\n});\n","import { DexieYProvider, DexieYDocMeta, cmp, Table } from 'dexie';\nimport type { DexieCloudDB } from '../db/DexieCloudDB';\nimport { getAwarenessLibrary, awarenessWeakMap } from './awareness';\nimport { DEXIE_CLOUD_SYNCER_ID } from '../sync/DEXIE_CLOUD_SYNCER_ID';\nimport { $Y } from './Y';\nimport { combineLatest, startWith } from 'rxjs';\nimport { YDocumentOpen } from 'dexie-cloud-common';\nimport { isEagerSyncDisabled } from '../isEagerSyncDisabled';\nimport { PersistedSyncState } from '../db/entities/PersistedSyncState';\nimport { getOpenDocSignal } from './reopenDocSignal';\n\ntype YDoc = import('yjs').Doc;\n\nexport function createYHandler(db: DexieCloudDB) {\n  return (provider: DexieYProvider<YDoc>) => {\n    const doc = provider.doc;\n    const { parentTable } = doc.meta || ({} as DexieYDocMeta);\n    if (!db.cloud.schema?.[parentTable].markedForSync) {\n      return; // The table that holds the doc is not marked for sync - leave it to dexie. No syncing, no awareness.\n    }\n    let awareness: import('y-protocols/awareness').Awareness;\n    Object.defineProperty(provider, 'awareness', {\n      get() {\n        if (awareness) return awareness;\n        awareness = createAwareness(db, doc, provider);\n        awarenessWeakMap.set(doc, awareness);\n        return awareness;\n      },\n    });\n  };\n}\n\nfunction createAwareness(\n  db: DexieCloudDB,\n  doc: YDoc,\n  provider: DexieYProvider\n) {\n  const { parentTable, parentId, parentProp, updatesTable } =\n    doc.meta as DexieYDocMeta;\n  const awap = getAwarenessLibrary(db);\n  const awareness = new awap.Awareness(doc);\n  const reopenDocSignal = getOpenDocSignal(doc);\n\n  awareness.on('update', ({ added, updated, removed }, origin: any) => {\n    // Send the update\n    const changedClients = added.concat(updated).concat(removed);\n    const user = db.cloud.currentUser.value;\n    if (origin !== 'server' && user.isLoggedIn && !isEagerSyncDisabled(db)) {\n      const update = awap.encodeAwarenessUpdate(awareness!, changedClients);\n      db.messageProducer.next({\n        type: 'aware',\n        table: parentTable,\n        prop: parentProp,\n        k: doc.meta.parentId,\n        u: update,\n      });\n      if (provider.destroyed) {\n        // We're called from awareness.on('destroy') that did\n        // removeAwarenessStates.\n        // It's time to also send the doc-close message that dexie-cloud understands\n        // and uses to stop subscribing for updates and awareness updates and brings\n        // down the cached information in memory on the WS connection for this.\n        db.messageProducer.next({\n          type: 'doc-close',\n          table: parentTable,\n          prop: parentProp,\n          k: doc.meta.parentId,\n        });\n      }\n    }\n  });\n  awareness.on('destroy', () => {\n    // Signal to server that this provider is destroyed (the update event will be triggered, which\n    // in turn will trigger db.messageProducer that will send the message to the server if WS is connected)\n    awap.removeAwarenessStates(\n      awareness!,\n      [doc.clientID],\n      'provider destroyed'\n    );\n  });\n\n  // Open the document on the server\n  (async () => {\n    if (provider.destroyed) return;\n    let connected = false;\n    let currentFlowId = 1;\n    const subscription = combineLatest([\n      db.cloud.webSocketStatus, // Wake up when webSocket status changes\n      reopenDocSignal.pipe(startWith(null)), // Wake up when reopenDocSignal emits\n    ]).subscribe(([wsStatus]) => {\n      if (provider.destroyed) return;\n      // Keep \"connected\" state in a variable so we can check it after async operations\n      connected = wsStatus === 'connected';\n\n      // We are or got connected. Open the document on the server.\n      const user = db.cloud.currentUser.value;\n      if (\n        wsStatus === 'connected' &&\n        user.isLoggedIn &&\n        !isEagerSyncDisabled(db)\n      ) {\n        ++currentFlowId;\n        openDocumentOnServer().catch((error) => {\n          console.warn(`Error catched in createYHandler.ts: ${error}`);\n        });\n      }\n    });\n    // Wait until WebSocket is connected\n    provider.addCleanupHandler(subscription);\n\n    /** Sends an 'doc-open' message to server whenever websocket becomes\n     * connected, or if it is already connected.\n     * The flow is aborted in case websocket is disconnected while querying\n     * information required to compute the state vector. Flow is also\n     * aborted in case document or provider has been destroyed during\n     * the async parts of the task.\n     *\n     * The state vector is only computed from the updates that have occured\n     * after the last full sync - which could very often be zero - in which\n     * case no state vector is sent (then the server already knows us by\n     * revision)\n     *\n     * When server gets the doc-open message, it will authorize us for\n     * whether we are allowed to read / write to this document, and then\n     * keep the cached information in memory on the WS connection for this\n     * particular document, as well as subscribe to updates and awareness updates\n     * from other clients on the document.\n     */\n    async function openDocumentOnServer() {\n      const myFlow = currentFlowId; // So we can abort when a new flow is started\n      const yTbl = db.table(updatesTable);\n      const syncStateTbl = db.$syncState as Table<\n        PersistedSyncState,\n        'syncState'\n      >;\n      const [receivedUntil, yServerRev] = await db.transaction(\n        'r',\n        syncStateTbl,\n        yTbl,\n        async () => {\n          const syncState = await yTbl.get(DEXIE_CLOUD_SYNCER_ID);\n          const persistedSyncState = await syncStateTbl.get('syncState');\n          return [\n            syncState?.receivedUntil || 0,\n            persistedSyncState?.yServerRevision ||\n              persistedSyncState?.serverRevision,\n          ];\n        }\n      );\n\n      // After every await, check if we still should be working on this task.\n      if (provider.destroyed || currentFlowId !== myFlow || !connected) return;\n\n      const docOpenMsg: YDocumentOpen = {\n        type: 'doc-open',\n        table: parentTable,\n        prop: parentProp,\n        k: parentId,\n        serverRev: yServerRev,\n      };\n      const serverUpdatesSinceLastSync = await yTbl\n        .where('i')\n        .between(receivedUntil, Infinity, false)\n        .filter(\n          (update) =>\n            cmp(update.k, parentId) === 0 && // Only updates for this document\n            ((update.f || 0) & 1) === 0 // Don't include local changes\n        )\n        .toArray();\n      // After every await, check if we still should be working on this task.\n      if (provider.destroyed || currentFlowId !== myFlow || !connected) return;\n\n      if (serverUpdatesSinceLastSync.length > 0) {\n        const Y = $Y(db); // Get the Yjs library from Dexie constructor options\n        const mergedUpdate = Y.mergeUpdatesV2(\n          serverUpdatesSinceLastSync.map((update) => update.u)\n        );\n        const stateVector = Y.encodeStateVectorFromUpdateV2(mergedUpdate);\n        docOpenMsg.sv = stateVector;\n      }\n      db.messageProducer.next(docOpenMsg);\n    }\n  })();\n  return awareness;\n}\n","import Dexie, { liveQuery, Subscription, Table } from 'dexie';\nimport {\n  DBPermissionSet,\n  DBRealmMember,\n  getDbNameFromDbUrl,\n} from 'dexie-cloud-common';\nimport { BehaviorSubject, combineLatest, firstValueFrom, from, fromEvent, Subject } from 'rxjs';\nimport { filter, map, skip, startWith, switchMap, take } from 'rxjs/operators';\nimport { login } from './authentication/login';\nimport { UNAUTHORIZED_USER } from './authentication/UNAUTHORIZED_USER';\nimport { DexieCloudDB } from './db/DexieCloudDB';\nimport { PersistedSyncState } from './db/entities/PersistedSyncState';\nimport { DexieCloudOptions } from './DexieCloudOptions';\nimport { DISABLE_SERVICEWORKER_STRATEGY } from './DISABLE_SERVICEWORKER_STRATEGY';\nimport './extend-dexie-interface';\nimport { DexieCloudSyncOptions } from './DexieCloudSyncOptions';\nimport { IS_SERVICE_WORKER } from './helpers/IS_SERVICE_WORKER';\nimport { throwVersionIncrementNeeded } from './helpers/throwVersionIncrementNeeded';\nimport { createIdGenerationMiddleware } from './middlewares/createIdGenerationMiddleware';\nimport { createImplicitPropSetterMiddleware } from './middlewares/createImplicitPropSetterMiddleware';\nimport { createMutationTrackingMiddleware } from './middlewares/createMutationTrackingMiddleware';\n//import { dexieCloudSyncProtocol } from \"./dexieCloudSyncProtocol\";\nimport { overrideParseStoresSpec } from './overrideParseStoresSpec';\nimport { performInitialSync } from './performInitialSync';\nimport { connectWebSocket } from './sync/connectWebSocket';\nimport { isSyncNeeded } from './sync/isSyncNeeded';\nimport { LocalSyncWorker } from './sync/LocalSyncWorker';\nimport {\n  registerPeriodicSyncEvent,\n  registerSyncEvent,\n} from './sync/registerSyncEvent';\nimport { triggerSync } from './sync/triggerSync';\nimport { DXCUserInteraction } from './types/DXCUserInteraction';\nimport { SyncState } from './types/SyncState';\nimport { updateSchemaFromOptions } from './updateSchemaFromOptions';\nimport { verifySchema } from './verifySchema';\nimport { setupDefaultGUI } from './default-ui';\nimport { DXCWebSocketStatus } from './DXCWebSocketStatus';\nimport { computeSyncState } from './computeSyncState';\nimport { generateKey } from './middleware-helpers/idGenerationHelpers';\nimport { permissions } from './permissions';\nimport { getCurrentUserEmitter } from './currentUserEmitter';\nimport { NewIdOptions } from './types/NewIdOptions';\nimport { getInvitesObservable } from './getInvitesObservable';\nimport { getGlobalRolesObservable } from './getGlobalRolesObservable';\nimport { UserLogin } from './db/entities/UserLogin';\nimport { InvalidLicenseError } from './InvalidLicenseError';\nimport { logout, _logout } from './authentication/logout';\nimport { loadAccessToken } from './authentication/authenticate';\nimport { isEagerSyncDisabled } from './isEagerSyncDisabled';\nimport { createYHandler } from \"./yjs/createYHandler\";\nexport { DexieCloudTable } from './DexieCloudTable';\nexport * from './getTiedRealmId';\nexport {\n  DBRealm,\n  DBRealmMember,\n  DBRealmRole,\n  DBSyncedObject,\n  DBPermissionSet,\n} from 'dexie-cloud-common';\nexport { resolveText } from './helpers/resolveText';\nexport { Invite } from './Invite';\nexport type { UserLogin, DXCWebSocketStatus, SyncState };\nexport type { DexieCloudSyncOptions };\nexport type { DexieCloudOptions, PeriodicSyncOptions } from './DexieCloudOptions';\nexport * from './types/DXCAlert';\nexport * from './types/DXCInputField';\nexport * from './types/DXCUserInteraction';\nexport { defineYDocTrigger } from './define-ydoc-trigger';\n\nconst DEFAULT_OPTIONS: Partial<DexieCloudOptions> = {\n  nameSuffix: true,\n};\n\nexport function dexieCloud(dexie: Dexie) {\n  const origIdbName = dexie.name;\n  //\n  //\n  //\n  const currentUserEmitter = getCurrentUserEmitter(dexie);\n  const subscriptions: Subscription[] = [];\n  let configuredProgramatically = false;\n\n  // local sync worker - used when there's no service worker.\n  let localSyncWorker: { start: () => void; stop: () => void } | null = null;\n  dexie.on(\n    'ready',\n    async (dexie: Dexie) => {\n      try {\n        await onDbReady(dexie);\n      } catch (error) {\n        console.error(error);\n        // Make sure to succeed with database open even if network is down.\n      }\n    },\n    true // true = sticky\n  );\n\n  /** Void starting subscribers after a close has happened. */\n  let closed = false;\n  function throwIfClosed() {\n    if (closed) throw new Dexie.DatabaseClosedError();\n  }\n\n  dexie.once('close', () => {\n    subscriptions.forEach((subscription) => subscription.unsubscribe());\n    subscriptions.splice(0, subscriptions.length);\n    closed = true;\n    localSyncWorker && localSyncWorker.stop();\n    localSyncWorker = null;\n    currentUserEmitter.next(UNAUTHORIZED_USER);\n  });\n\n  const syncComplete = new Subject<void>();\n\n  dexie.cloud = {\n    // @ts-ignore\n    version: __VERSION__,\n    options: { ...DEFAULT_OPTIONS } as DexieCloudOptions,\n    schema: null,\n    get currentUserId() {\n      return currentUserEmitter.value.userId || UNAUTHORIZED_USER.userId!;\n    },\n    currentUser: currentUserEmitter,\n    syncState: new BehaviorSubject<SyncState>({\n      phase: 'initial',\n      status: 'not-started',\n    }),\n\n    events: {\n      syncComplete,\n    },\n\n    persistedSyncState: new BehaviorSubject<PersistedSyncState | undefined>(\n      undefined\n    ),\n    userInteraction: new BehaviorSubject<DXCUserInteraction | undefined>(\n      undefined\n    ),\n    webSocketStatus: new BehaviorSubject<DXCWebSocketStatus>('not-started'),\n    async login(hint) {\n      const db = DexieCloudDB(dexie);\n      await db.cloud.sync();\n      await login(db, hint);\n    },\n    invites: getInvitesObservable(dexie),\n    roles: getGlobalRolesObservable(dexie),\n    configure(options: DexieCloudOptions) {\n      options = dexie.cloud.options = { ...dexie.cloud.options, ...options };\n      configuredProgramatically = true;\n      if (options.databaseUrl && options.nameSuffix) {\n        // @ts-ignore\n        dexie.name = `${origIdbName}-${getDbNameFromDbUrl(\n          options.databaseUrl\n        )}`;\n        DexieCloudDB(dexie).reconfigure(); // Update observable from new dexie.name\n      }\n      updateSchemaFromOptions(dexie.cloud.schema, dexie.cloud.options);\n    },\n    async logout({ force } = {}) {\n      force\n        ? await _logout(DexieCloudDB(dexie), { deleteUnsyncedData: true })\n        : await logout(DexieCloudDB(dexie));\n    },\n    async sync(\n      { wait, purpose }: DexieCloudSyncOptions = { wait: true, purpose: 'push' }\n    ) {\n      if (wait === undefined) wait = true;\n      const db = DexieCloudDB(dexie);\n      const licenseStatus = db.cloud.currentUser.value.license?.status || 'ok';\n      if (licenseStatus !== 'ok') {\n        // Refresh access token to check for updated license\n        await loadAccessToken(db);\n      }\n      if (purpose === 'pull') {\n        const syncState = db.cloud.persistedSyncState.value;\n        triggerSync(db, purpose);\n        if (wait) {\n          const newSyncState = await firstValueFrom(\n            db.cloud.persistedSyncState.pipe(\n              filter(\n                (newSyncState) =>\n                  newSyncState?.timestamp != null &&\n                  (!syncState || newSyncState.timestamp > syncState.timestamp!)\n              )\n            )\n          );\n          if (newSyncState?.error) {\n            throw new Error(`Sync error: ` + newSyncState.error);\n          }\n        }\n      } else if (await isSyncNeeded(db)) {\n        const syncState = db.cloud.persistedSyncState.value;\n        triggerSync(db, purpose);\n        if (wait) {\n          console.debug('db.cloud.login() is waiting for sync completion...');\n          await firstValueFrom(\n            from(\n              liveQuery(async () => {\n                const syncNeeded = await isSyncNeeded(db);\n                const newSyncState = await db.getPersistedSyncState();\n                if (\n                  newSyncState?.timestamp !== syncState?.timestamp &&\n                  newSyncState?.error\n                )\n                  throw new Error(`Sync error: ` + newSyncState.error);\n                return syncNeeded;\n              })\n            ).pipe(filter((isNeeded) => !isNeeded))\n          );\n          console.debug(\n            'Done waiting for sync completion because we have nothing to push anymore'\n          );\n        }\n      }\n    },\n    permissions(\n      obj: { owner: string; realmId: string; table?: () => string },\n      tableName?: string\n    ) {\n      return permissions(dexie._novip, obj, tableName);\n    },\n  };\n\n  dexie.Version.prototype['_parseStoresSpec'] = Dexie.override(\n    dexie.Version.prototype['_parseStoresSpec'],\n    (origFunc) => overrideParseStoresSpec(origFunc, dexie)\n  );\n\n  dexie.Table.prototype.newId = function (\n    this: Table<any>,\n    { colocateWith }: NewIdOptions = {}\n  ) {\n    const shardKey =\n      colocateWith && colocateWith.substr(colocateWith.length - 3);\n    return generateKey(dexie.cloud.schema![this.name].idPrefix || '', shardKey);\n  };\n\n  dexie.Table.prototype.idPrefix = function (this: Table<any>) {\n    return this.db.cloud.schema?.[this.name]?.idPrefix || '';\n  };\n\n  dexie.use(\n    createMutationTrackingMiddleware({\n      currentUserObservable: dexie.cloud.currentUser,\n      db: DexieCloudDB(dexie),\n    })\n  );\n  dexie.use(createImplicitPropSetterMiddleware(DexieCloudDB(dexie)));\n  dexie.use(createIdGenerationMiddleware(DexieCloudDB(dexie)));\n\n  async function onDbReady(dexie: Dexie) {\n    closed = false; // As Dexie calls us, we are not closed anymore. Maybe reopened? Remember db.ready event is registered with sticky flag!\n    const db = DexieCloudDB(dexie);\n    // Setup default GUI:\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      if (!db.cloud.options?.customLoginGui) {\n        subscriptions.push(setupDefaultGUI(dexie));\n      }\n    }\n    if (!db.cloud.isServiceWorkerDB) {\n      subscriptions.push(computeSyncState(db).subscribe(dexie.cloud.syncState));\n    }\n\n    // Forward db.syncCompleteEvent to be publicly consumable via db.cloud.events.syncComplete:\n    subscriptions.push(db.syncCompleteEvent.subscribe(syncComplete));\n\n    //verifyConfig(db.cloud.options); Not needed (yet at least!)\n    // Verify the user has allowed version increment.\n    if (!db.tables.every((table) => table.core)) {\n      throwVersionIncrementNeeded();\n    }\n    const swRegistrations =\n      'serviceWorker' in navigator\n        ? await navigator.serviceWorker.getRegistrations()\n        : [];\n\n    const [initiallySynced, lastSyncedRealms] = await db.transaction(\n      'rw',\n      db.$syncState,\n      async () => {\n        const { options, schema } = db.cloud;\n        const [persistedOptions, persistedSchema, persistedSyncState] =\n          await Promise.all([\n            db.getOptions(),\n            db.getSchema(),\n            db.getPersistedSyncState(),\n          ]);\n        if (!configuredProgramatically) {\n          // Options not specified programatically (use case for SW!)\n          // Take persisted options:\n          db.cloud.options = persistedOptions || null;\n        } else if (\n          !persistedOptions ||\n          JSON.stringify(persistedOptions) !== JSON.stringify(options)\n        ) {\n          // Update persisted options:\n          if (!options) throw new Error(`Internal error`); // options cannot be null if configuredProgramatically is set.\n          const newPersistedOptions: DexieCloudOptions = {\n            ...options,\n          };\n          delete newPersistedOptions.fetchTokens;\n          delete newPersistedOptions.awarenessProtocol;\n          await db.$syncState.put(newPersistedOptions, 'options');\n        }\n        if (\n          db.cloud.options?.tryUseServiceWorker &&\n          'serviceWorker' in navigator &&\n          swRegistrations.length > 0 &&\n          !DISABLE_SERVICEWORKER_STRATEGY\n        ) {\n          // * Configured for using service worker if available.\n          // * Browser supports service workers\n          // * There are at least one service worker registration\n          console.debug('Dexie Cloud Addon: Using service worker');\n          db.cloud.usingServiceWorker = true;\n        } else {\n          // Not configured for using service worker or no service worker\n          // registration exists. Don't rely on service worker to do any job.\n          // Use LocalSyncWorker instead.\n          if (\n            db.cloud.options?.tryUseServiceWorker &&\n            !db.cloud.isServiceWorkerDB\n          ) {\n            console.debug(\n              'dexie-cloud-addon: Not using service worker.',\n              swRegistrations.length === 0\n                ? 'No SW registrations found.'\n                : 'serviceWorker' in navigator && DISABLE_SERVICEWORKER_STRATEGY\n                ? 'Avoiding SW background sync and SW periodic bg sync for this browser due to browser bugs.'\n                : 'navigator.serviceWorker not present'\n            );\n          }\n          db.cloud.usingServiceWorker = false;\n        }\n        updateSchemaFromOptions(schema, db.cloud.options);\n        updateSchemaFromOptions(persistedSchema, db.cloud.options);\n        if (!schema) {\n          // Database opened dynamically (use case for SW!)\n          // Take persisted schema:\n          db.cloud.schema = persistedSchema || null;\n        } else if (\n          !persistedSchema ||\n          JSON.stringify(persistedSchema) !== JSON.stringify(schema)\n        ) {\n          // Update persisted schema (but don't overwrite table prefixes)\n          const newPersistedSchema = persistedSchema || {};\n          for (const [table, tblSchema] of Object.entries(schema)) {\n            const newTblSchema = newPersistedSchema[table];\n            if (!newTblSchema) {\n              newPersistedSchema[table] = { ...tblSchema };\n            } else {\n              newTblSchema.markedForSync = tblSchema.markedForSync;\n              tblSchema.deleted = newTblSchema.deleted;\n              newTblSchema.generatedGlobalId = tblSchema.generatedGlobalId;\n            }\n          }\n          await db.$syncState.put(newPersistedSchema, 'schema');\n\n          // Make sure persisted table prefixes are being used instead of computed ones:\n          // Let's assign all props as the newPersistedSchems should be what we should be working with.\n          Object.assign(schema, newPersistedSchema);\n        }\n        return [persistedSyncState?.initiallySynced, persistedSyncState?.realms];\n      }\n    );\n\n    if (initiallySynced) {\n      db.setInitiallySynced(true);\n    }\n\n    verifySchema(db);\n\n    // Manage CurrentUser observable:\n    throwIfClosed();\n    if (!db.cloud.isServiceWorkerDB) {\n      subscriptions.push(\n        liveQuery(() => db.getCurrentUser()).subscribe(currentUserEmitter)\n      );\n      // Manage PersistendSyncState observable:\n      subscriptions.push(\n        liveQuery(() => db.getPersistedSyncState()).subscribe(\n          db.cloud.persistedSyncState\n        )\n      );\n      // Wait till currentUser and persistedSyncState gets populated\n      // with things from the database and not just the default values.\n      // This is so that when db.open() completes, user should be safe\n      // to subscribe to these observables and get actual data.\n      await firstValueFrom(combineLatest([\n        currentUserEmitter.pipe(skip(1), take(1)),\n        db.cloud.persistedSyncState.pipe(skip(1), take(1)),\n      ]));\n\n      const yHandler = createYHandler(db);\n      db.dx.on('y', yHandler);\n      db.dx.once('close', () => {\n        db.dx.on.y?.unsubscribe(yHandler);\n      });\n    }\n\n    // HERE: If requireAuth, do athentication now.\n    let changedUser = false;\n    const user = await db.getCurrentUser();\n    const requireAuth = db.cloud.options?.requireAuth;\n    if (requireAuth) {\n      if (db.cloud.isServiceWorkerDB) {\n        // If this is a service worker DB, we can't do authentication here,\n        // we just wait until the application has done it.\n        console.debug('Dexie Cloud Service worker. Waiting for application to authenticate.');\n        await firstValueFrom(currentUserEmitter.pipe(filter((user) => !!user.isLoggedIn), take(1)));\n        console.debug('Dexie Cloud Service worker. Application has authenticated.');\n      } else {\n        if (typeof requireAuth === 'object') {\n          // requireAuth contains login hints. Check if we already fulfil it:\n          if (\n            !user.isLoggedIn ||\n            (requireAuth.userId && user.userId !== requireAuth.userId) ||\n            (requireAuth.email && user.email !== requireAuth.email)\n          ) {\n            // If not, login the configured user:\n            changedUser = await login(db, requireAuth);\n          }\n        } else if (!user.isLoggedIn) {\n          // requireAuth is true and user is not logged in\n          changedUser = await login(db);\n        }\n      }\n    }\n    if (user.isLoggedIn && (!lastSyncedRealms || !lastSyncedRealms.includes(user.userId!))) {\n      // User has been logged in but this is not reflected in the sync state.\n      // This can happen if page is reloaded after login but before the sync call following\n      // the login was complete.\n      // The user is to be viewed as changed becuase current syncState does not reflect the presence\n      // of the logged-in user.\n      changedUser = true; // Set changedUser to true to trigger a pull-sync later down.\n    }\n\n    if (localSyncWorker) localSyncWorker.stop();\n    localSyncWorker = null;\n    throwIfClosed();\n\n    const doInitialSync = db.cloud.options?.databaseUrl && (!initiallySynced || changedUser);\n    if (doInitialSync) {\n      // Do the initial sync directly in the browser thread no matter if we are using service worker or not.\n      await performInitialSync(db, db.cloud.options!, db.cloud.schema!);\n      db.setInitiallySynced(true);\n    }\n\n    throwIfClosed();\n    if (db.cloud.usingServiceWorker && db.cloud.options?.databaseUrl) {\n      if (!doInitialSync) {\n        registerSyncEvent(db, 'push').catch(() => {});\n      }\n      registerPeriodicSyncEvent(db).catch(() => {});\n    } else if (\n      db.cloud.options?.databaseUrl &&\n      db.cloud.schema &&\n      !db.cloud.isServiceWorkerDB\n    ) {\n      // There's no SW. Start SyncWorker instead.\n      localSyncWorker = LocalSyncWorker(db, db.cloud.options, db.cloud.schema!);\n      localSyncWorker.start();\n      if (!doInitialSync) {\n        triggerSync(db, 'push');\n      }\n    }\n\n    // Listen to online event and do sync.\n    throwIfClosed();\n    if (!db.cloud.isServiceWorkerDB) {\n      subscriptions.push(\n        fromEvent(self, 'online').subscribe(() => {\n          console.debug('online!');\n          db.syncStateChangedEvent.next({\n            phase: 'not-in-sync',\n          });\n          if (!isEagerSyncDisabled(db)) {\n            triggerSync(db, 'push');\n          }\n        }),\n        fromEvent(self, 'offline').subscribe(() => {\n          console.debug('offline!');\n          db.syncStateChangedEvent.next({\n            phase: 'offline',\n          });\n        })\n      );\n    }\n\n    // Connect WebSocket unless we are in a service worker or websocket is disabled.\n    if (\n      db.cloud.options?.databaseUrl &&\n      !db.cloud.options?.disableWebSocket &&\n      !IS_SERVICE_WORKER\n    ) {\n      subscriptions.push(connectWebSocket(db));\n    }\n  }\n}\n\n// @ts-ignore\ndexieCloud.version = __VERSION__;\n\nDexie.Cloud = dexieCloud;\n\n//Dexie.addons.push(dexieCloud);\n\nexport default dexieCloud;\n","import { combineLatest, Observable, of } from 'rxjs';\nimport { debounceTime, map, startWith, switchMap } from 'rxjs/operators';\nimport { getCurrentUserEmitter } from './currentUserEmitter';\nimport { DexieCloudDB, SyncStateChangedEventData } from './db/DexieCloudDB';\nimport { isOnline } from './sync/isOnline';\nimport { SyncState } from './types/SyncState';\nimport { userIsActive, userIsReallyActive } from './userIsActive';\n\nexport function computeSyncState(db: DexieCloudDB): Observable<SyncState> {\n  let _prevStatus = db.cloud.webSocketStatus.value;\n  const lazyWebSocketStatus = db.cloud.webSocketStatus.pipe(\n    switchMap((status) => {\n      const prevStatus = _prevStatus;\n      _prevStatus = status;\n      const rv = of(status);\n      switch (status) {\n        // A normal scenario is that the WS reconnects and falls shortly in disconnected-->connection-->connected.\n        // Don't distract user with this unless these things take more time than normal:\n\n        // Only show disconnected if disconnected more than 500ms, or if we can\n        // see that the user is indeed not active.\n        case 'disconnected':\n          return userIsActive.value ? rv.pipe(debounceTime(500)) : rv;\n\n        // Only show connecting if previous state was 'not-started' or 'error', or if\n        // the time it takes to connect goes beyond 4 seconds.\n        case 'connecting':\n          return prevStatus === 'not-started' || prevStatus === 'error'\n            ? rv\n            : rv.pipe(debounceTime(4000));\n        default:\n          return rv;\n      }\n    })\n  );\n  return combineLatest([\n    lazyWebSocketStatus,\n    db.syncStateChangedEvent.pipe(startWith({ phase: 'initial' } as SyncStateChangedEventData)),\n    getCurrentUserEmitter(db.dx._novip),\n    userIsReallyActive\n  ]).pipe(\n    map(([status, syncState, user, userIsActive]) => {\n      if (user.license?.status && user.license.status !== 'ok') {\n        return {\n          phase: 'offline',\n          status: 'offline',\n          license: user.license.status\n        } satisfies SyncState;\n      }\n      let { phase, error, progress } = syncState;\n      let adjustedStatus = status;\n      if (phase === 'error') {\n        // Let users only rely on the status property to display an icon.\n        // If there's an error in the sync phase, let it show on that\n        // status icon also.\n        adjustedStatus = 'error';\n      }\n      if (status === 'not-started') {\n        // If websocket isn't yet connected becase we're doing\n        // the startup sync, let the icon show the symbol for connecting.\n        if (phase === 'pushing' || phase === 'pulling') {\n          adjustedStatus = 'connecting';\n        }\n      }      \n      const previousPhase = db.cloud.syncState.value.phase;\n      //const previousStatus = db.cloud.syncState.value.status;\n      if (previousPhase === 'error' && (syncState.phase === 'pushing' || syncState.phase === 'pulling')) {\n        // We were in an errored state but is now doing sync. Show \"connecting\" icon.\n        adjustedStatus = 'connecting';\n      }\n      /*if (syncState.phase === 'in-sync' && adjustedStatus === 'connecting') {\n        adjustedStatus = 'connected';\n      }*/\n        \n      if (!userIsActive) {\n        adjustedStatus = 'disconnected';\n      }\n\n      const retState: SyncState = {\n        phase,\n        error,\n        progress,\n        status: isOnline ? adjustedStatus : 'offline',\n        license: 'ok'\n      };\n\n      return retState;\n    })\n  );\n}\n","import Dexie from \"dexie\";\n\nexport function throwVersionIncrementNeeded() {\n  throw new Dexie.SchemaError(\n    `Version increment needed to allow dexie-cloud change tracking`\n  );\n}\n","import Dexie from \"dexie\";\nimport { DexieCloudDB } from \"./db/DexieCloudDB\";\n\nexport function verifySchema(db: DexieCloudDB) {\n  for (const table of db.tables) {\n    if (db.cloud.schema?.[table.name]?.markedForSync) {\n      if (table.schema.primKey.auto) {\n        throw new Dexie.SchemaError(\n          `Table ${table.name} is both autoIncremented and synced. ` +\n            `Use db.cloud.configure({unsyncedTables: [${JSON.stringify(\n              table.name\n            )}]}) to blacklist it from sync`\n        );\n      }\n      if (!table.schema.primKey.keyPath) {\n        throw new Dexie.SchemaError(\n          `Table ${table.name} cannot be both synced and outbound. ` +\n            `Use db.cloud.configure({unsyncedTables: [${JSON.stringify(\n              table.name\n            )}]}) to blacklist it from sync`\n        );\n      }\n    }\n  }\n}\n","import { DexieCloudSchema } from 'dexie-cloud-common';\nimport { DexieCloudDB } from './db/DexieCloudDB';\nimport { DexieCloudOptions } from './DexieCloudOptions';\nimport { CURRENT_SYNC_WORKER, sync } from './sync/sync';\nimport { performGuardedJob } from './sync/performGuardedJob';\n\nexport async function performInitialSync(\n  db: DexieCloudDB,\n  cloudOptions: DexieCloudOptions,\n  cloudSchema: DexieCloudSchema\n) {\n  console.debug('Performing initial sync');  \n  await performGuardedJob(\n    db,\n    CURRENT_SYNC_WORKER,\n    () => sync(db, cloudOptions, cloudSchema, { isInitialSync: true })\n  );\n  console.debug('Done initial sync');\n}\n","import Dexie, { DBCore, DBCoreTransaction, Middleware } from 'dexie';\nimport { DexieCloudDB } from '../db/DexieCloudDB';\nimport { TXExpandos } from '../types/TXExpandos';\nimport { UNAUTHORIZED_USER } from '../authentication/UNAUTHORIZED_USER';\n\nexport function createImplicitPropSetterMiddleware(\n  db: DexieCloudDB\n): Middleware<DBCore> {\n  return {\n    stack: 'dbcore',\n    name: 'implicitPropSetterMiddleware',\n    level: 1,\n    create: (core) => {\n      return {\n        ...core,\n        table: (tableName) => {\n          const table = core.table(tableName);\n          return {\n            ...table,\n            mutate: (req) => {\n              const trans = req.trans as DBCoreTransaction & TXExpandos & IDBTransaction;\n\n              if (trans.disableChangeTracking) {\n                return table.mutate(req);\n              }\n\n              const currentUserId = trans.currentUser?.userId ?? UNAUTHORIZED_USER.userId;\n\n              if (db.cloud.schema?.[tableName]?.markedForSync) {\n                if (req.type === 'add' || req.type === 'put') {\n                  if (tableName === 'members') {\n                    for (const member of req.values) {\n                      if (typeof member.email === 'string') {\n                        // Resolve https://github.com/dexie/dexie-cloud/issues/4\n                        // If adding a member, make sure email is lowercase and trimmed.\n                        // This is to avoid issues where the APP does not check this\n                        // and just allows the user to enter an email address that might\n                        // have been pasted by the user from a source that had a trailing\n                        // space or was in uppercase. We want to avoid that the user\n                        // creates a new member with a different email address than\n                        // the one he/she intended to create.\n                        member.email = member.email.trim().toLowerCase();\n                      }\n                    }\n                  }\n                  // No matter if user is logged in or not, make sure \"owner\" and \"realmId\" props are set properly.\n                  // If not logged in, this will be changed upon syncification of the tables (next sync after login),\n                  // however, application code will work better if we can always rely on that the properties realmId\n                  // and owner are set. Application code may index them and query them based on db.cloud.currentUserId,\n                  // and expect them to be returned. That scenario must work also when db.cloud.currentUserId === 'unauthorized'.\n                  for (const obj of req.values) {\n                    if (!obj.owner) {\n                      obj.owner = currentUserId;\n                    }\n                    if (!obj.realmId) {\n                      obj.realmId = currentUserId;\n                    }\n                    const key = table.schema.primaryKey.extractKey?.(obj);\n                    if (typeof key === 'string' && key[0] === '#') {\n                      // Add $ts prop for put operations and\n                      // disable update operations as well as consistent\n                      // modify operations. Reason: Server may not have\n                      // the object. Object should be created on server only\n                      // if is being updated. An update operation won't create it\n                      // so we must delete req.changeSpec to degrade operation to\n                      // an upsert operation with timestamp so that it will be created.\n                      // We must also degrade from consistent modify operations for the\n                      // same reason - object might be there on server. Must but put up instead.\n\n                      // FUTURE: This clumpsy behavior of private IDs could be refined later.\n                      // Suggestion is to in future, treat private IDs as we treat all objects \n                      // and sync operations normally. Only that deletions should become soft deletes\n                      // for them - so that server knows when a private ID has been deleted on server\n                      // not accept insert/upserts on them.\n                      if (req.type === 'put') {\n                        const now = Date.now();\n                        delete req.criteria;\n                        delete req.changeSpec;\n                        delete req.updates;\n                        obj.$ts = Date.now();\n                      }\n                    }\n                  }\n                }\n              }\n              return table.mutate(req);\n            },\n          };\n        },\n      };\n    },\n  };\n}\n","export function getDbNameFromDbUrl(dbUrl) {\n    const url = new URL(dbUrl);\n    return url.pathname === \"/\"\n        ? url.hostname.split('.')[0]\n        : url.pathname.split('/')[1];\n}\n","import Dexie, { liveQuery } from 'dexie';\nimport { DBRealmMember } from 'dexie-cloud-common';\nimport { from, Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { mergePermissions } from './mergePermissions';\nimport {\n  getPermissionsLookupObservable,\n  PermissionsLookup,\n} from './getPermissionsLookupObservable';\nimport { PermissionChecker } from './PermissionChecker';\nimport './extend-dexie-interface';\n\nexport function permissions(\n  dexie: Dexie,\n  obj: { owner?: string; realmId?: string; table?: () => string },\n  tableName?: string\n): Observable<PermissionChecker<any>> {\n  if (!obj)\n    throw new TypeError(\n      `Cannot check permissions of undefined or null. A Dexie Cloud object with realmId and owner expected.`\n    );\n  const { owner, realmId } = obj;\n  if (!tableName) {\n    if (typeof obj.table !== 'function') {\n      throw new TypeError(\n        `Missing 'table' argument to permissions and table could not be extracted from entity`\n      );\n    }\n    tableName = obj.table();\n  }\n  const source = getPermissionsLookupObservable(dexie);\n  const mapper = (permissionsLookup: PermissionsLookup) => {\n    // If realmId is undefined, it can be due to that the object is not yet syncified - it exists\n    // locally only as the user might not yet be authenticated. This is ok and we shall treat it\n    // as if the realmId is dexie.cloud.currentUserId (which is \"unauthorized\" by the way)\n    const realm = permissionsLookup[realmId || dexie.cloud.currentUserId];\n    if (!realm)\n      return new PermissionChecker(\n        {},\n        tableName!,\n        !owner || owner === dexie.cloud.currentUserId\n      );\n    return new PermissionChecker(\n      realm.permissions,\n      tableName!,\n      realmId === undefined || realmId === dexie.cloud.currentUserId || owner === dexie.cloud.currentUserId\n    );\n  };\n  const o = source.pipe(map(mapper)) as Observable<PermissionChecker<any>> & {\n    getValue: () => PermissionChecker<any>;\n  };\n  o.getValue = () => mapper(source.getValue());\n  return o;\n}\n","import Dexie from 'dexie';\nimport { DexieCloudDB } from './db/DexieCloudDB';\nimport dexieCloud from './dexie-cloud-client';\nimport { DISABLE_SERVICEWORKER_STRATEGY } from './DISABLE_SERVICEWORKER_STRATEGY';\nimport { isSafari, safariVersion } from './isSafari';\nimport { syncIfPossible } from './sync/syncIfPossible';\nimport { SWMessageEvent } from './types/SWMessageEvent';\nimport { SyncEvent } from './types/SWSyncEvent';\n\n// In case the SW lives for a while, let it reuse already opened connections:\nconst managedDBs = new Map<string, DexieCloudDB>();\n\nfunction getDbNameFromTag(tag: string) {\n  return tag.startsWith('dexie-cloud:') && tag.split(':')[1];\n}\n\nconst syncDBSemaphore = new Map<string, Promise<void>>();\n\nfunction syncDB(dbName: string, purpose: 'push' | 'pull') {\n  // We're taking hight for being double-signalled both\n  // via message event and sync event.\n  // Which one comes first doesnt matter, just\n  // that we return the existing promise if there is\n  // an ongoing sync.\n  let promise = syncDBSemaphore.get(dbName + '/' + purpose);\n  if (!promise) {\n    promise = _syncDB(dbName, purpose)\n      .then(() => {\n        // When legacy enough across browsers, use .finally() instead of then() and catch():\n        syncDBSemaphore.delete(dbName + '/' + purpose);\n      })\n      .catch((error) => {\n        syncDBSemaphore.delete(dbName + '/' + purpose);\n        return Promise.reject(error);\n      });\n    syncDBSemaphore.set(dbName + '/' + purpose, promise!);\n  }\n  return promise!;\n\n  async function _syncDB(dbName: string, purpose: 'push' | 'pull') {\n    let db = managedDBs.get(dbName);\n\n    if (!db) {\n      console.debug('Dexie Cloud SW: Creating new Dexie instance for', dbName);\n      const dexie = new Dexie(dbName, { addons: [dexieCloud] });\n      db = DexieCloudDB(dexie);\n      db.cloud.isServiceWorkerDB = true;\n      dexie.on('versionchange', stopManagingDB);\n      await db.dx.open(); // Makes sure db.cloud.options and db.cloud.schema are read from db,\n      if (managedDBs.get(dbName)) {\n        // Avoid race conditions.\n        db.close();\n        return await _syncDB(dbName, purpose);\n      }\n      managedDBs.set(dbName, db);\n    }\n    if (!db.cloud.options?.databaseUrl) {\n      console.error(`Dexie Cloud: No databaseUrl configured`);\n      return; // Nothing to sync.\n    }\n    if (!db.cloud.schema) {\n      console.error(`Dexie Cloud: No schema persisted`);\n      return; // Nothing to sync.\n    }\n\n    function stopManagingDB() {\n      db!.dx.on.versionchange.unsubscribe(stopManagingDB);\n      if (managedDBs.get(db!.name) === db) {\n        // Avoid race conditions.\n        managedDBs.delete(db!.name);\n      }\n      console.debug(`Dexie Cloud SW: Closing Dexie instance for ${dbName}`);\n      db!.dx.close();\n      return false;\n    }\n\n    try {\n      console.debug('Dexie Cloud SW: Syncing');\n      await syncIfPossible(db, db.cloud.options, db.cloud.schema, {\n        retryImmediatelyOnFetchError: true,\n        purpose,\n      });\n      console.debug('Dexie Cloud SW: Done Syncing');\n    } catch (e) {\n      console.error(`Dexie Cloud SW Error`, e);\n      // Error occured. Stop managing this DB until we wake up again by a sync event,\n      // which will open a new Dexie and start trying to sync it.\n      stopManagingDB();\n      if (e.name !== Dexie.errnames.NoSuchDatabase) {\n        // Unless the error was that DB doesn't exist, rethrow to trigger sync retry.\n        throw e; // Throw e to make syncEvent.waitUntil() receive a rejected promis, so it will retry.\n      }\n    }\n  }\n}\n\n// Avoid taking care of events if browser bugs out by using dexie cloud from a service worker.\nif (!DISABLE_SERVICEWORKER_STRATEGY) {\n  self.addEventListener('sync', (event: SyncEvent) => {\n    console.debug('SW \"sync\" Event', event.tag);\n    const dbName = getDbNameFromTag(event.tag);\n    if (dbName) {\n      event.waitUntil(syncDB(dbName, \"push\")); // The purpose of sync events are \"push\"\n    }\n  });\n\n  self.addEventListener('periodicsync', (event: SyncEvent) => {\n    console.debug('SW \"periodicsync\" Event', event.tag);\n    const dbName = getDbNameFromTag(event.tag);\n    if (dbName) {\n      event.waitUntil(syncDB(dbName, \"pull\")); // The purpose of periodic sync events are \"pull\"\n    }\n  });\n\n  self.addEventListener('message', (event: SWMessageEvent) => {\n    console.debug('SW \"message\" Event', event.data);\n    if (event.data.type === 'dexie-cloud-sync') {\n      const { dbName } = event.data;\n      // Mimic background sync behavior - retry in X minutes on failure.\n      // But lesser timeout and more number of times.\n      const syncAndRetry = (num = 1) => {\n        return syncDB(dbName, event.data.purpose || \"pull\").catch(async (e) => {\n          if (num === 3) throw e;\n          await sleep(60_000); // 1 minute\n          syncAndRetry(num + 1);\n        });\n      };\n      if ('waitUntil' in event) {\n        event.waitUntil(syncAndRetry().catch(error => console.error(error)));\n      } else {\n        syncAndRetry().catch(error => console.error(error));\n      }\n    }\n  });\n}\n\nfunction sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","pop","length","push","__values","o","s","m","i","__read","r","ar","error","__spreadArray","to","from","pack","arguments","l","slice","concat","__await","__asyncGenerator","asyncIterator","q","a","resume","fulfill","settle","shift","__asyncValues","UNAUTHORIZED_USER","userId","name","claims","sub","lastLogin","Date","freeze","_a","swHolder","swContainer","self","document","navigator","serviceWorker","ready","registration","addEventListener","ev","_b","data","type","startsWith","matchAll","includeUncontrolled","forEach","client","id","source","postMessage","SWBroadcastChannel","subscribe","listener","forwarder","message","removeEventListener","active","events","globalThis","Map","BroadcastedAndLocalEvent","Observable","bc","BroadcastChannel","super","subscriber","onCustomEvent","detail","onMessageEvent","unsubscribe","has","get","set","addListener","err","listeners","idx","indexOf","splice","removeListener","dispatch","CustomEvent","isFunction","operate","init","lift","hasLift","liftedSource","isArrayLike","x","isPromise","createImpl","ctorFunc","UnsubscriptionError","_super","errors","map","toString","join","instance","Error","stack","arrRemove","arr","item","index","Subscription","initialTeardown","closed","_parentage","_finalizers","empty","e_1","e_2","isArray","_parentage_1","_parentage_1_1","remove","e_1_1","initialFinalizer","_finalizers_1","_finalizers_1_1","finalizer","execFinalizer","e_2_1","add","teardown","_hasParent","_addParent","parent","includes","_removeParent","EMPTY","isSubscription","config","onUnhandledError","onStoppedNotification","undefined","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","timeoutProvider","setTimeout","handler","timeout","args","_i","delegate","clearTimeout","handle","reportUnhandledError","noop","Subscriber","destination","_this","isStopped","EMPTY_OBSERVER","complete","SafeSubscriber","_next","_error","_complete","_bind","Function","bind","fn","ConsumerObserver","partialObserver","handleUnhandledError","observerOrNext","context_1","observable","identity","_subscribe","operator","isObserver","_trySubscribe","cb","sink","promiseCtor","getPromiseCtor","Symbol_observable","pipe","fns","operations","input","reduce","prev","toPromise","isInteropObservable","isAsyncIterable","obj","createInvalidObservableTypeError","isIterable","Symbol_iterator","readableStreamLikeToAsyncGenerator","readableStream","reader","getReader","read","releaseLock","isReadableStreamLike","innerFrom","obs","array","promise","fromAsyncIterable","iterable","iterable_1","iterable_1_1","asyncIterable","asyncIterable_1","asyncIterable_1_1","process","catch","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","closed_1","Action","scheduler","work","schedule","state","delay","intervalProvider","setInterval","clearInterval","AsyncAction","pending","recycleAsyncId","requestAsyncId","_id","flush","_scheduler","execute","_execute","_delay","errorValue","errored","actions","dateTimestampProvider","now","Scheduler","schedulerActionCtor","asyncScheduler","AsyncScheduler","SchedulerAction","_active","_scheduled","action","async","isScheduler","timer","dueTime","intervalOrScheduler","intervalDuration","due","isNaN","popScheduler","executeSchedule","parentSubscription","repeat","scheduleSubscription","catchError","selector","handledResult","innerSub","syncUnsub","observeOn","subscribeOn","scheduleAsyncIterable","scheduled","scheduleObservable","scheduleArray","schedulePromise","scheduleIterable","scheduleReadableStreamLike","project","mergeMap","resultSelector","concurrent","Infinity","ii","onBeforeNext","expand","innerSubScheduler","additionalFinalizer","buffer","isComplete","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","_loop_1","bufferedValue","mergeInternals","concatAll","debounceTime","activeTask","lastValue","lastTime","emit","emitWhenIdle","targetTime","take","count","seen","delayWhen","delayDurationSelector","subscriptionDelay","mapTo","duration","distinctUntilChanged","comparator","keySelector","defaultCompare","previousKey","first","currentKey","filter","predicate","skip","startWith","values","switchMap","innerSubscriber","innerIndex","outerIndex","tap","tapObserver","isUnsub","finalize","hasComplainedAboutSyncEvent","registerSyncEvent","db","purpose","sw","sync","register","dbName","triggerSync","cloud","usingServiceWorker","localSyncEvent","hasArrayBufferB64","Uint8Array","b64decode","Buffer","base64","fromBase64","binary_string","atob","len","bytes","charCodeAt","b64encode","ArrayBuffer","isView","byteOffset","byteLength","toBase64","u8a","strs","chunk","subarray","fromCharCode","btoa","computeRealmSetHash","realms","inviteRealms","JSON","stringify","realmId","accepted","sort","byteArray","TextEncoder","encode","digestBytes","crypto","subtle","digest","getSyncableTables","entries","schema","markedForSync","tbl","tables","cloudTableSchema","getMutationTable","tableName","getTableFromMutationTable","mutationTable","exec","flatten","listClientChanges","mutationTables_1","db_1","mutationTables","since","limit","sorted","all","lastRevision","query","where","above","toArray","mut","table","txid","opNo","ts","currentEntry","currentTxid","muts","randomString","buf","getRandomValues","Math","floor","random","_hasOwn","setByKeyPath","keyPath","isFrozen","assert","period","currentKeyPath","substr","remainingKeyPath","parseInt","innerObj","prop","hasOwn","randomFill","simpleRandomFill","alloc","isValidSyncableID","some","key","every","isValidSyncableIDPart","part","applyOperation","target","keys","val","changeSpec","changeSpecs","entry","propPath","assign","mod","applyOperations","abs","max","BIT8","BITS7","MAX_SAFE_INTEGER","Number","isInteger","num","isFinite","math.floor","utf8TextEncoder","encodeUtf8","str","encodedString","unescape","encodeURIComponent","codePointAt","utf8TextDecoder","TextDecoder","fatal","ignoreBOM","decode","Encoder","cpos","cbuf","bufs","write","encoder","bufferLen","writeVarUint","binary.BITS7","binary.BIT8","_strBuffer","_maxStrBSize","writeVarString","string.utf8TextEncoder","encodeInto","written","writeVarUint8Array","string.encodeUtf8","uint8Array","leftCopyLen","math.min","rightCopyLen","math.max","writeUint8Array","writeOnDataView","verifyLen","dview","DataView","writeBigUint64","setBigUint64","floatTestBed","writeAny","number.isInteger","math.abs","isNegative","math.isNegativeZero","writeVarInt","setFloat32","getFloat32","writeFloat32","setFloat64","writeFloat64","setBigInt64","writeBigInt64","array.isArray","encodeYMessage","msg","BigInt","yServerRev","k","u","serverRev","sv","uint8arr","curPos","toUint8Array","errorUnexpectedEndOfArray","error.create","errorIntegerOutOfRange","Decoder","pos","hasContent","decoder","readVarUint8Array","view","readUint8Array","readVarUint","readUint8","mult","number.MAX_SAFE_INTEGER","readVarString","string.utf8TextDecoder","remainingLen","fromCodePoint","nextLen","decodeURIComponent","escape","readFromDataView","dv","readBigUint64","getBigUint64","readAnyLookupTable","sign","getFloat64","getBigInt64","readAny","consumeChunkedBinaryStream","_c","sizeBuf","sizeBufPos","source_1_1","_d","source_1","dw","getUint32","concats","c","TokenErrorResponseError","title","messageCode","messageParams","interactWithUser","userInteraction","req","interactionProps","submitLabel","cancelLabel","onSubmit","res","onCancel","Dexie","AbortError","alertUser","alerts","fields","promptForEmail","emailHint","email","test","placeholder","promptForOTP","alert","otp","loadAccessToken","currentUser","getCurrentUser","accessToken","accessTokenExpiration","refreshToken","refreshTokenExpiration","getTime","license","status","refreshedLogin","refreshAccessToken","options","databaseUrl","update","authenticate","url","context","fetchToken","hints","location","protocol","privateKey","publicKey","generateKey","modulusLength","publicExponent","hash","nonExportablePrivateKey","publicKeyPEM","keydata","keydataB64","finalString","substring","formatAsPem","spkiToPEM","exportKey","response2","public_key","userType","evalDaysLeft","userValidUntil","validUntil","onLine","debug","hostname","origin","userAuthenticate","login","time_stamp","signing_algorithm","binarySignature","signature","tokenRequest","grant_type","refresh_token","scopes","fetch","method","headers","mode","response","json","toStr","ObjectDef","replace","dollarKeys","clone","TypesonSimplified","typeDefsInputs","typeDefs","protoMap","WeakMap","alternateChannel","space","realVal","typeDef","proto","getPrototypeOf","toStringTag","find","typeName","function","getTypeDef","parse","tson","$t","revive","top","deletes","mods","BisonBinaryTypes","Blob","blob","altChannel","mimeType","numberDef","number","bigIntDef","bigint","DateDef","date","toISOString","NaN","SetDef","Set","MapDef","_global","global","TypedArraysDefs","specs","TypedArray","b64LexEncode","encoded","ENCODE_TABLE","b64ToLex","b64LexDecode","b64Lex","base64lex","DECODE_TABLE","lexToB64","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","Q","R","S","T","U","V","W","X","Y","Z","h","j","w","z","ArrayBufferDef","ab","ba","FakeBlob","readBlobSync","XMLHttpRequest","overrideMimeType","open","URL","createObjectURL","send","responseText","string2ArrayBuffer","BlobDef","builtin","bigintDef","readBlobBinary","FileReader","onabort","onerror","onload","readAsArrayBuffer","undefinedDef","FileDef","File","file","lastModified","hasBigIntSupport","FakeBigInt","fakeBigInt","defs","PropModification","propModification","propModSpec","getOwnPropertySymbols","propertyIsEnumerable","__rest","TSON","tsonBuiltinDefs","BISON","toBinary","lenBuf","setUint32","size","binaries","binData","arrayBuffers","fromBinary","readAsText","readBlob","Bison","HttpError","statusText","httpStatus","encodeIdsForServer","changes","rv","change","tableSchema","primaryKey","changeClone","mutIndex","rewriteValues","outbound","keyIndex","cloneChange","mutClone","rewrittenKey","isLoggedIn","syncRatelimitDelays","checkSyncRateLimitDelay","delatMilliseconds","syncWithServer","syncState","baseRevs","clientIdentity","Accept","updatedUser","Authorization","syncRequest","dbID","remoteDbId","lastPull","serverRevision","yServerRevision","dx","core","syncStateChangedEvent","phase","credentials","remaining","reset","limitNum","remainingNum","willResetInSeconds","ceil","delete","updateSyncRateLimitDelays","ok","text","throwIfCancelled","cancelToken","cancelled","isOnline","updateBaseRevs","latestRevisions","$baseRevs","bulkPut","clientRev","getLatestRevisionsPerTable","clientChangeSet","lastRevisions","lastRev","rev","bulkUpdate","objs","bulkGet","resultKeys","resultObjs","primKey","cmp","applyServerChanges","keyDecoder","endsWith","currentUserId","bulkAdd","anyOf","modify","bulkDelete","DEXIE_CLOUD_SYNCER_ID","listUpdatesSince","yTable","sinceIncluding","between","$Y","_options","getUpdatesTable","ydocProp","utbl","yProps","updatesTable","applyYServerMessages","yMessages","receivedUntils","resyncNeeded","transaction","tx","syncer","put","unsentFrom","idbtrans","_rejecting_y_ypdate","aboveOrEqual","activeDoc","DexieYProvider","getDocCache","destroy","doc","isSynced","BINSTREAM_TYPE_REALMID","BINSTREAM_TYPE_TABLE_AND_PROP","BINSTREAM_TYPE_DOCUMENT","downloadYDocsFromServer","databaseUrl_1","yDownloadedRealms","user","downloadedRealms","stages","result_1_1","result_1","asyncIterablePipeline","getFetchResponseBodyGenerator","chunks","currentRealmId","currentTable","currentProp","docsToInsert","storeCollectedDocs","completedRealm","lastDoc","$syncState","chunks_1_1","chunks_1","DexieError","CURRENT_SYNC_WORKER","syncOptions","_sync","justCheckIfNeeded","retryImmediatelyOnFetchError","timestamp","options_1","schema_1","isInitialSync","tablesToSync","persistedSyncState","getPersistedSyncState","readyForSyncification","tablesToSyncify","syncedTables","getTablesToSyncify","doSyncify","disableChangeTracking","disableAccessControl","syncifiedTables","alreadySyncedRealms","ignoredRealms","toCollection","member","realm","owner","modifyLocalObjectsWithNewUserId","lastUpdateIds","clientChanges","yResults","yProp","receivedUntil","unsyncedFrom","min","updates","perDoc","isLocal","docKey","mergedUpdate","mergeUpdatesV2","stateVector","encodeStateVectorFromUpdateV2","listYClientMessagesAndStateVector","syncificationInserts","extractKey","dexieCloudTableSchema","generatedGlobalId","idPrefix","unsyncedObjects","listSyncifiedChanges","pushSyncIsNeeded","newSyncState","addedClientChanges","mutTable","ch","latestRev","belowOrEqual","reverse","offset","clear","prevState","deletedRealms","rejectedRealms","previousRealmSet","previousInviteRealmSet","updatedRealmSet","updatedTotalRealmSet","realmsToDelete","indexes","updateSpec","deleteObjectsFromRemovedRealms","dbId","initiallySynced","filteredChanges","filterServerChangesThroughAddedClientChanges","lastUpdateIdsBeforeSync","receivedUntilsAfterSync","mergedSpec","lastUpdateId","allYTables","_dbSchema","tblSchema","flat","mergedEntry","_e","primaryKeys","updateYSyncStates","usingYProps","serverSupportsYprops","syncCompleteEvent","serverChanges","localPostChanges","changesToSubtract","mutationSet","targetMut","subtractChanges","inSet","mapEntry","resultEntry","optype","toDBOperationSet","LIMIT_NUM_MESSAGES_PER_TIME","TIME_WINDOW","PAUSE_PERIOD","MessagesFromServerConsumer","queue","readyToServe","BehaviorSubject","event","isWorking","loopDetection","fill","firstValueFrom","wait","_f","getSchema","baseRev","waitFor","realmSetHash","newRev","consumeQueue","enqueue","wm","DEXIE_CLOUD_SCHEMA","members","roles","$jobs","$logins","static_counter","DexieCloudDB","Subject","close","helperMethods","logins","getOptions","setInitiallySynced","reconfigure","messageConsumer","messageProducer","AuthPersistedContext","userLogin","load","save","waitUntil","logout","numUnsyncedChanges","_logout","confirmLogout","deleteUnsyncedData","numUnsynced","loggedOut","storeNames","sumUnSynced","prodLog","level","origUserId","fetchTokens","demo_user","otpId","otp_id","res1","errMsg","tokenRequest2","res2","errorText","otpFetchTokenCallback","existingLogins","setCurrentUser","isFirefox","InstallTrigger","isSafari","userAgent","safariVersion","match","DISABLE_SERVICEWORKER_STRATEGY","IS_SERVICE_WORKER","getEffectiveKeys","consonants","time","prefix","shardKey","timePart","randomPart","createIdGenerationMiddleware","mutate","trans","getMany","cache","results","valueClones","colocatedId","deepClone","ConstraintError","generateOrVerifyAtKeys","counter","readLock","readers","writers","numWriters","finally","writeLock","possiblePromises","reason","outstandingTransactions","isEagerSyncDisabled","disableEagerSync","createMutationTrackingMiddleware","currentUserObservable","allTableNames","ordinaryTables","mutTableMap","mutationTableName","opCount","removeTransaction","txComplete","mutationsAdded","mutsTable","openCursor","guardedTable","range","mutateAndLog","criteria","unsyncedProps","unsyncedProperties","stripChangeSpec","numFailures","hasFailures","failures","newValue","strippedChangeSpecs","newUpdates","validKeys","RangeSet","anyChangeSpecBecameEmpty","addKey","newKeys","newValues","hasKey","keyPaths","isAdditionalChunk","overrideParseStoresSpec","origFunc","dexie","stores","dbSchema","storesClone","schemaSrc","requestedIndexes","split","spec","trim","builtInIndexes","requestedIndexSet","builtInIndex","cloudSchema","allPrefixes","toLocaleLowerCase","toLowerCase","orig","bits","bitFix","upperFixed","toUpperCase","nextChar","generateTablePrefix","deleted","performGuardedJob","jobName","job","locks","request","userIsActive","userIsReallyActive","isActive","of","visibilityStateIsChanged","fromEvent","documentBecomesHidden","visibilityState","documentBecomesVisible","userDoesSomething","window","merge","USER_INACTIVITY_TIMEOUT","TokenExpiredError","getAwarenessLibrary","awarenessProtocol","MissingAPIError","awarenessWeakMap","getOpenDocSignal","signal","WSObservable","webSocketStatus","WSConnection","subscriptions","reconnecting","lastUserActivity","connect","disconnect","pinger","ws","reconnect","lastServerActivity","pauseUntil","tokenExpiration","wsUrl","searchParams","URLSearchParams","WebSocket","binaryType","onclose","onmessage","decodeYMessage","awareness","getDocAwareness","applyAwarenessUpdate","everConnected","onopen","yTableRecords","yTbl","currentUnsentFrom","liveQuery","addedUpdates","at","messages","createYClientUpdateObservable","InvalidLicenseError","waitAndReconnectWhenUserDoesSomething","ms","isSyncNeeded","ongoingSyncs","syncIfPossible","cloudOptions","ongoing","pull","hasPullTakenPlace","subscription","_syncIfPossible","MINUTES","LocalSyncWorker","localSyncEventSubscription","retryHandle","retryPurpose","syncAndRetry","retryNum","combPurpose","stop","combinedPurpose","start","updateSchemaFromOptions","unsyncedTables","parentNode","removeChild","children","defaultProps","props","ref","__k","__b","__e","__d","__c","__h","__v","vnode","base","__r","debounceRendering","__P","__n","ownerSVGElement","appendChild","nextSibling","insertBefore","$","setProperty","style","cssText","setAttribute","removeAttribute","contextType","__E","render","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffed","localName","nodeType","createTextNode","createElementNS","createElement","is","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","checked","current","unmount","componentWillUnmount","firstChild","getDerivedStateFromError","setState","componentDidCatch","forceUpdate","Styles","color","Alert","fontWeight","warning","info","Darken","position","left","opacity","backgroundColor","width","height","zIndex","webkitBackdropFilter","backdropFilter","DialogOuter","alignItems","display","justifyContent","DialogInner","padding","marginBottom","maxWidth","maxHeight","overflowY","border","borderRadius","boxShadow","fontFamily","Input","borderColor","outline","fontSize","Dialog","className","__H","__V","__N","requestAnimationFrame","cancelAnimationFrame","LoginDialog","params","setParams","useState","firstFieldRef","useRef","useLayoutEffect","focus","Fragment","WindowHeader","resolveText","preventDefault","fieldName","Label","autoComplete","autoFocus","onInput","valueTransformer","updatedParams","ButtonsDiv","Button","onClick","LoginGui","Component","observer","associate","factory","getCurrentUserEmitter","createSharedValueObservable","defaultValue","currentValue","shared","share","resetOnRefCountZero","didEmit","getValue","getGlobalRolesObservable","role","sortOrder","getInternalAccessControlObservable","_novip","selfMembers","mergePermissions","permissions","reduced","ret","rights","retVerb","mergedRights","tableRights","getPermissionsLookupObservable","mapper","mapValueObservable","combineLatest","globalRoles","selfRealmMembers","directPermissionSets","rolePermissionSets","roleName","manage","PermissionChecker","isOwner","tableNames","tablePermissions","permittedProp","getInvitesObservable","membersByEmail","accessControl","realmLookup","reducer","emailMembersById","membersById","invite","accept","createYHandler","provider","parentTable","meta","defineProperty","parentId","parentProp","awap","Awareness","reopenDocSignal","on","added","updated","removed","changedClients","encodeAwarenessUpdate","destroyed","removeAwarenessStates","clientID","connected","currentFlowId","wsStatus","openDocumentOnServer","myFlow","syncStateTbl","docOpenMsg","serverUpdatesSinceLastSync","addCleanupHandler","createAwareness","DEFAULT_OPTIONS","nameSuffix","dexieCloud","origIdbName","currentUserEmitter","configuredProgramatically","localSyncWorker","customLoginGui","el","preact.render","vip","setupDefaultGUI","isServiceWorkerDB","_prevStatus","lazyWebSocketStatus","prevStatus","progress","adjustedStatus","computeSyncState","syncComplete","SchemaError","throwVersionIncrementNeeded","swRegistrations","getRegistrations","lastSyncedRealms","persistedOptions","persistedSchema","newPersistedOptions","tryUseServiceWorker","newPersistedSchema","newTblSchema","auto","verifySchema","throwIfClosed","yHandler","once","changedUser","requireAuth","doInitialSync","performInitialSync","periodicSync","registerPeriodicSyncEvent","_g","disableWebSocket","readyForChangesMessage","isReady","createObservable","prevUser","prevHash","currUser","currHash","throwError","connectWebSocket","onDbReady","DatabaseClosedError","version","hint","invites","configure","dbUrl","pathname","getDbNameFromDbUrl","force","syncNeeded","isNeeded","permissionsLookup","Version","override","Table","newId","colocateWith","use","$ts","Cloud","managedDBs","getDbNameFromTag","tag","syncDBSemaphore","syncDB","_syncDB","addons","stopManagingDB","errnames","NoSuchDatabase","versionchange"],"mappings":"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","x_google_ignoreList":[0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,86,87,88,89,90,91,93,94,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,181,184]}